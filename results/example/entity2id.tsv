"throw $r17"  0
"java.lang.String.equals(java.lang.Object)"  1
"$r3 = $r2.getClass()"  2
"$r3 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$3()>, class \"()Ljava/lang/String;\")"  3
"org.mybatis.spring.SqlSessionTemplateTest.testTemplateWithNoTxInsert()"  4
"r20 = r4.loadClass(r19)"  5
"org.mybatis.spring.submitted.xa.User.getName()"  6
"org.junit.jupiter.api.Assertions.assertEquals(\"Eli\", $r30)"  7
"$r18 = r3.getExecutorType()"  8
"$r98.reset()"  9
"org.mybatis.spring.type.SuperType.<init>()"  10
"$r6 = org.apache.ibatis.session.ExecutorType.BATCH"  11
"$r2 = $r1.getObject()"  12
"$r3.setVariables(null)"  13
"$r13 = r17.getCause()"  14
"label1: $r3 = new org.mybatis.spring.mapper.MapperFactoryBean"  15
"if $z2 != 0 goto label18"  16
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest.setUp()"  17
"$r16 = newarray (java.lang.Object)[0]"  18
"$r3 = java.lang.Integer.valueOf(1)"  19
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.startContext()"  20
"label3: $r6 = org.mybatis.spring.SqlSessionUtils.LOGGER"  21
"org.junit.jupiter.api.Assertions.assertEquals(\"Valentina\", $r37)"  22
"$r15 = $r14.getConfiguration()"  23
"label4: $r6 = r0.userService"  24
"if $z1 != 0 goto label3"  25
"$r21 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r20)"  26
"$r5 = new org.springframework.beans.factory.config.ConstructorArgumentValues"  27
"org.mybatis.spring.SqlSessionUtils.closeSqlSession(r4, $r17)"  28
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testAnnotationScan()"  29
"org.springframework.core.io.Resource.getInputStream()"  30
"$r10.put(\"item\", $r8)"  31
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSetNullDataSource()"  32
"$r9 = $r8.append(\", skills=\")"  33
"$r3 = $r2.selectList(r1)"  34
"$r7 = $r3.getId()"  35
"throw $r18"  36
"$r26 = r2.get(2)"  37
"$r2 = new org.mybatis.spring.SqlSessionFactoryBean"  38
"$r51.register(r113)"  39
"r0.typeHandlersPackage = r1"  40
"$i3 = $r28.getNumberRollbacks()"  41
"$r5 = r0.factoryBean"  42
"org.mybatis.spring.mapper.MapperFactoryBean.isAddToConfig()"  43
"org.mybatis.spring.ExecutorInterceptor.intercept(org.apache.ibatis.plugin.Invocation)"  44
"label6: $r17 := @caughtexception"  45
"$r22 = r0.cursorNoNestedItemReader"  46
"org.springframework.core.NestedIOException.<init>(java.lang.String,java.lang.Throwable)"  47
"$r6 = r0.sqlSessionDaoSupport"  48
"org.mybatis.spring.batch.domain.Employee.setSalary(int)"  49
"$r43 = newarray (java.lang.Object)[0]"  50
"specialinvoke r0.<init>(r1, 0)"  51
"org.mybatis.spring.mapper.ClassPathMapperScanner.<clinit>()"  52
"$r35 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  53
"label2: $r12 = new org.springframework.dao.TransientDataAccessResourceException"  54
"label1: $i0 = r18.getSalary()"  55
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithMapperScanIsRepeat;\""  56
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.build()"  57
"$r7 = new org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor"  58
"$r15 = $r8.translate($r12, null, $r14)"  59
"$r3 = $r2.append(\"] was not registered for synchronization because synchronization is not active\")"  60
"java.lang.Integer.valueOf(int)"  61
"$r27 = org.assertj.core.api.Assertions.assertThat($i3)"  62
"$r12 = $r11.getVariables()"  63
"r1 = $r8.build()"  64
"org.springframework.util.Assert.notNull(r1, \"SqlSession must not be null\")"  65
"$r9 = new org.springframework.beans.factory.support.GenericBeanDefinition"  66
"r0.itemToParameterConverter = r1"  67
"$r2 = new java.util.HashMap"  68
"r5 = $r19.getTransaction($r18)"  69
"specialinvoke $r10.<init>($r11)"  70
"$r3 = $r2.selectCursor(r1)"  71
"if $r4 != r0 goto label1"  72
"$r8 = r2[0]"  73
"$r12 = new org.apache.ibatis.mapping.Environment"  74
"$r5.getBean(\"annotatedMapper\")"  75
"$r19 = (org.mybatis.spring.SqlSessionTemplate) $r18"  76
"$r16 = $r15.getEnvironment()"  77
"r1.update($r10)"  78
"label1: if r1 == null goto label4"  79
"$i0 = $r8.getNumberCommits()"  80
"org.apache.ibatis.session.SqlSession.delete(java.lang.String)"  81
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testNonSpringWithTx()"  82
"if $r17 == null goto label3"  83
"$r13.commit(r2)"  84
"$r14 = org.mybatis.spring.SqlSessionTemplate.access$0($r13)"  85
"$r4 = r0.factoryBean"  86
"r2 = $r3.split(\" \")"  87
"$r6 = org.mybatis.spring.mapper.MapperFactoryBeanTest.executorInterceptor"  88
"org.mybatis.spring.sample.config.SampleJobConfig.dataSource()"  89
"r0.assertConnectionClosed($r72)"  90
"java.lang.String.valueOf(java.lang.Object)"  91
"$r11 = new java.util.HashSet"  92
"org.mybatis.spring.SqlSessionTemplate.selectMap(java.lang.String, java.lang.Object, java.lang.String, org.apache.ibatis.session.RowBounds)"  93
"specialinvoke $r6.<init>()"  94
"r29 = null"  95
"$r0 = new com.mockrunner.mock.jdbc.MockDataSource"  96
"label6: $r25.close()"  97
"org.mybatis.spring.submitted.xa.User.getId()"  98
"$r8.thenReturn($r9)"  99
"label1: $r14 = new org.springframework.transaction.support.DefaultTransactionDefinition"  100
"$i0 = r2.size()"  101
"org.mybatis.spring.SqlSessionFactoryBean.setEnvironment(java.lang.String)"  102
"$r3 = r0.step1()"  103
"$r2.append(\"{\")"  104
"org.mybatis.spring.sample.config.SampleJobConfig.reader()"  105
"java.util.function.Supplier.get(java.lang.String[])"  106
"$r39.isEqualTo(1)"  107
"org.mybatis.spring.SqlSessionFactoryBean.isSingleton()"  108
"r1 := @parameter0"  109
"org.mybatis.spring.sample.service.FooService.<init>(org.mybatis.spring.sample.mapper.UserMapper)"  110
"$r9 = class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\""  111
"$r3.getBean(r1)"  112
"$r6.put(\"username\", \"dev\")"  113
"label1: $r5 = r0.sqlSessionFactory"  114
"$r3 = $r2.append(\"\' for aliases\")"  115
"$r16 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionFactory"  116
"label33: $r88 := @caughtexception"  117
"$r9 = $r8.getId()"  118
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest.testConfiguration()"  119
"$r2 = r0.getConfiguration()"  120
"org.junit.jupiter.api.Assertions.assertEquals(\"Yamada\", $r45)"  121
"if r3 != null goto label1"  122
"$r4 = dynamicinvoke \"invoke\" <java.lang.reflect.InvocationHandler (org.mybatis.spring.type.DummyMapperFactoryBean)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;\", handle: <org.mybatis.spring.type.DummyMapperFactoryBean: java.lang.Object lambda$1(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>, class \"(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;\")"  123
"$r10 = $r9.getPropertyValues()"  124
"$r18 = (org.assertj.core.api.AbstractBooleanAssert) $r17"  125
"r0.this$0 = r1"  126
"$r7 = $r6.queryId(\"selectFoo\")"  127
"specialinvoke r0.assertDefaultConfig($r4)"  128
"specialinvoke $r2.<init>(\"Creating MapperFactoryBean with name \'\")"  129
"return $r1"  130
"$r3.setSqlSessionTemplate(r1)"  131
"org.apache.ibatis.session.Configuration.getMapper(java.lang.Class,org.apache.ibatis.session.SqlSession)"  132
"$r5 = r0.userService"  133
"$r30.isEqualTo(2)"  134
"label7: throw $r17"  135
"r1 = $r6.getTypeAliasRegistry()"  136
"$r16 = $r15.append($i4)"  137
"$r26.isEqualTo(3)"  138
"$r8.getBean($r9)"  139
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.setupSqlSessionFactory(java.lang.String)"  140
"org.apache.ibatis.session.SqlSession.selectOne(java.lang.String)"  141
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithMarkerInterface;\""  142
"$r3.setMapperInterface($r4)"  143
"org.mybatis.spring.sample.batch.UserToPersonItemProcessor.process(org.mybatis.spring.sample.domain.User)"  144
"$r9 = r5.getTransactionFactory()"  145
"$r17 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  146
"$r2 := @parameter1"  147
"$z0 = 0"  148
"org.springframework.context.support.GenericApplicationContext.<init>()"  149
"r19 = r2.getPropertyValues()"  150
"label5: $r15 = r1.getString(\"sqlSessionTemplateRef\")"  151
"$r7 = r0.writer"  152
"org.mybatis.spring.mapper.ClassPathMapperScanner.setAnnotationClass(java.lang.Class)"  153
"$r7 = $r6.addScript(\"org/mybatis/spring/sample/db/database-test-data.sql\")"  154
"$r7 = $r6.getConfiguration()"  155
"label2: $r3 := @caughtexception"  156
"label02: $r3 = r0.configLocation"  157
"org.mybatis.spring.submitted.xa.UserMapper.select(int)"  158
"$r10 = $r8.as(\"should store the Template\", $r9)"  159
"$r3 = new com.mockrunner.mock.jdbc.MockPreparedStatement"  160
"$r10 = $r8.as(\"should not call rollback on Connection\", $r9)"  161
"org.mybatis.spring.sample.mapper.UserMapper.getUser(java.lang.String)"  162
"r0.name = r1"  163
"$r18 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r17"  164
"$r2 = new org.mybatis.spring.batch.MyBatisBatchItemWriter"  165
"$r28.setEnvironment(r1)"  166
"r2 = $r9.queryForList(\"SELECT * FROM persons ORDER BY person_id\", $r8)"  167
"$i0 = r0.id"  168
"$r5.getBean(\"mapperSubinterface\")"  169
"$r19 = org.mockito.Mockito.verify($r18)"  170
"$r3.setObjectWrapperFactory($r2)"  171
"$r12.put(\"_pagesize\", $r17)"  172
"org.assertj.core.api.ObjectAssert.isNotNull()"  173
"$r32.isEqualTo(0)"  174
"label4: $r7 := @caughtexception"  175
"org.mybatis.spring.sample.config.SampleConfig.sqlSessionFactory()"  176
"$r3.addRow($r4)"  177
"$r14 = java.lang.Integer.valueOf(1)"  178
"$r12 = r0.basePackage"  179
"label07: $r10 = r0.typeAliasesPackage"  180
"specialinvoke $r18.<init>($r21, $r20, $r19)"  181
"specialinvoke $r14.<init>(\"Error while adding the mapper \'\")"  182
"$r6 = (org.apache.ibatis.session.SqlSessionFactory) $r5"  183
"$r5.setConfigurationProperties(null)"  184
"$r6.debug($r7)"  185
"r0.session = null"  186
"$r8 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.batch.MyBatisBatchItemWriterTest)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.batch.MyBatisBatchItemWriterTest: void lambda$3()>, class \"()V\")"  187
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.<init>()"  188
"$r3.afterPropertiesSet()"  189
"label1: $r4 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  190
"$r1 = new org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder"  191
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo.getName()"  192
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.lambda$1(java.util.List)"  193
"$r1 = r0.mapperInterface"  194
"r0.cursorIterator = $r11"  195
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testWithTx()"  196
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest.testCloseOnFailing()"  197
"label1: r4 = r1.getClass(\"annotationClass\")"  198
"$r20 = new org.springframework.beans.factory.support.GenericBeanDefinition"  199
"org.mybatis.spring.SqlSessionUtils.lambda$6(org.apache.ibatis.session.SqlSession)"  200
"$r9.getBean($r10)"  201
"$r53 = $r52.getConfiguration()"  202
"$r3 = class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\""  203
"org.apache.ibatis.session.SqlSessionFactory.getConfiguration()"  204
"throw $r22"  205
"goto label04"  206
"$r40.reset()"  207
"org.mybatis.spring.type.DummyMapperFactoryBean.<init>(java.lang.Class)"  208
"r4 = r1.iterator()"  209
"$r23 = $r22.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  210
"org.mybatis.spring.mapper.MapperScannerConfigurer.setBeanName(java.lang.String)"  211
"$r3 = new org.springframework.core.io.ClassPathResource"  212
"$z0 = $r11.equals(r4)"  213
"org.assertj.core.api.AbstractStringAssert.isEqualTo(java.lang.Object)"  214
"$r25 = $r24.getBean(\"sqlSessionFactory\")"  215
"$r81 = new org.springframework.core.NestedIOException"  216
"$r8.setBeanNameGenerator(r7)"  217
"specialinvoke $r4.<init>(\"org/mybatis/spring/mybatis-config.xml\")"  218
"$r3 = new org.springframework.beans.factory.support.GenericBeanDefinition"  219
"$r24 = $r23.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  220
"org.mybatis.spring.config.NamespaceTest$BeanNameGenerator.generateBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry)"  221
"$r7 = $r6.statementId(\"updateFoo\")"  222
"$r22.isEqualTo(\"jdbc:localhost/test\")"  223
"$r74.setDataSource($r73)"  224
"r3 = $r9.getObject()"  225
"$r18.put(\"_page\", $r21)"  226
"label5: $r8 := @caughtexception"  227
"label2: $r15 := @caughtexception"  228
"$r19 = java.lang.Integer.valueOf(1)"  229
"org.springframework.transaction.support.TransactionSynchronizationManager.bindResource(r0, $r17)"  230
"org.mybatis.spring.SqlSessionTemplate.commit()"  231
"org.mybatis.spring.submitted.xa.UserServiceImpl.<init>()"  232
"org.mybatis.spring.mapper.ClassPathMapperScanner.registerFilters()"  233
"$r4 = new org.mybatis.spring.batch.MyBatisCursorItemReaderTest$Foo"  234
"$i0 = $r3.update(r1, r2)"  235
"$r23 = $r22.getMessage()"  236
"$r12.update(\"org.mybatis.spring.TestMapper.insertFail\")"  237
"org.mybatis.spring.transaction.SpringManagedTransaction.lambda$0()"  238
"r0.firstName = r1"  239
"$r4 = newarray (java.lang.Class)[1]"  240
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testBasicUsage()"  241
"org.mybatis.spring.mapper.MapperFactoryBeanTest.lambda$0(org.apache.ibatis.session.SqlSessionFactory)"  242
"$r18 = org.mybatis.spring.SqlSessionFactoryBeanTest.dataSource"  243
"$r11.registerBeanDefinition($r12, r2)"  244
"$r5 = new org.springframework.transaction.support.DefaultTransactionDefinition"  245
"org.mybatis.spring.SqlSessionTemplate.delete(java.lang.String)"  246
"$r14.isEqualTo(\"foo1\")"  247
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCompletion()"  248
"r0.sqlSessionTemplate = $r3"  249
"$r4.setTypeHandlers($r2)"  250
"org.mybatis.spring.sample.SampleJavaConfigTest.testWithMapperFactoryBean()"  251
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.testConfigurationMaxItemCount()"  252
"$r3 = org.mybatis.spring.SqlSessionUtils.LOGGER"  253
"$r16.setUpdateCounts($r17)"  254
"$r8 = dynamicinvoke \"convert\" <org.springframework.core.convert.converter.Converter ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)Ljava/lang/Object;\", handle: <org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest: java.lang.Object lambda$0(org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo)>, class \"(Lorg/mybatis/spring/batch/builder/MyBatisBatchItemWriterBuilderTest$Foo;)Ljava/lang/Object;\")"  255
"$r4 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.SqlSessionFactoryBean)>($r3) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.SqlSessionFactoryBean: org.apache.ibatis.session.SqlSessionFactory getObject()>, class \"()V\")"  256
"$r11 = new org.springframework.transaction.support.DefaultTransactionDefinition"  257
"$r43 = $r41.as(\"should not call rollback on Connection 2\", $r42)"  258
"specialinvoke r0.initExceptionTranslator()"  259
"$r1 = new org.mybatis.spring.sample.service.FooService"  260
"org.springframework.jdbc.datasource.DataSourceTransactionManager.<init>(javax.sql.DataSource)"  261
"label2: r19 = r1.getAttribute(\"marker-interface\")"  262
"label4: $r26 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  263
"$z3 = org.springframework.util.StringUtils.hasText($r39)"  264
"org.mybatis.spring.config.NamespaceHandler.<init>()"  265
"r1.open($r11)"  266
"$r6 = org.mybatis.spring.transaction.SpringManagedTransaction.LOGGER"  267
"$r5.close()"  268
"$z0 = $r2.isDebugEnabled()"  269
"$r20 = r2.get(2)"  270
"$r14.isEqualTo(\"dev\")"  271
"org.mybatis.spring.SqlSessionFactoryBeanTest.testNullMapperLocations()"  272
"$r89 = org.apache.ibatis.executor.ErrorContext.instance()"  273
"$r14 = r2.getConfiguration()"  274
"org.mybatis.spring.mapper.MapperClass.<init>()"  275
"org.mybatis.spring.SqlSessionFactoryBean.getVfs()"  276
"$i1 = $r29.getConnectionCount()"  277
"$r17 = newarray (int)[1]"  278
"$r5.select(r1, r2, r3, r4)"  279
"$r16 = $r15.getVariables()"  280
"label3: return $r2"  281
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.testZeroUpdateCountShouldThrowException()"  282
"$r14 = r0.factoryBean"  283
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$6(org.springframework.beans.factory.config.BeanDefinitionHolder)"  284
"org.mybatis.spring.AbstractMyBatisSpringTest.assertCommitSession()"  285
"$r28 = r1.getConfiguration()"  286
"$r4 = $r3.read()"  287
"org.apache.ibatis.session.SqlSession.commit(boolean)"  288
"$r2 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.type.DummyMapperFactoryBean)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.type.DummyMapperFactoryBean: java.lang.String lambda$0()>, class \"()Ljava/lang/String;\")"  289
"r0.assertExecuteCount(1)"  290
"$z0 = $r2.isInterface()"  291
"$r28 = r0.connection"  292
"$r19 = r0.sqlSession"  293
"org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler.<init>(java.lang.Object)"  294
"label16: r110 = $r54[i5]"  295
"$r3.close()"  296
"$r22 = org.assertj.core.api.Assertions.assertThat($i0)"  297
"specialinvoke $r2.<init>(\"New Spring transactions require a DataSource\")"  298
"specialinvoke $r82.<init>(\"Failed to parse mapping resource: \'\")"  299
"org.mybatis.spring.annotation.MapperScanTest.startContext()"  300
"$r19 = org.assertj.core.api.Assertions.assertThat($r18)"  301
"org.mybatis.spring.SqlSessionTemplateTest.testClose()"  302
"specialinvoke $r2.<init>(r1)"  303
"$r5.setConfiguration($r4)"  304
"$r4 = class \"Lorg/mybatis/spring/annotation/MapperScan;\""  305
"$r12.getBean($r13)"  306
"r4 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r14)"  307
"$r15 = (org.mybatis.spring.TestMapper) $r14"  308
"org.mybatis.spring.support.SqlSessionDaoSupportTest.startContext()"  309
"$r21 = r1.read()"  310
"$z1 = $r10 instanceof org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler"  311
"if z0 != 0 goto label1"  312
"$r15 = org.mockito.Mockito.when($r14)"  313
"org.mybatis.spring.batch.MyBatisCursorItemReader.<init>()"  314
"if $z3 == 0 goto label5"  315
"$r14 = $r13.append(i6)"  316
"$r10 = new org.springframework.jdbc.datasource.DataSourceTransactionManager"  317
"r28 = null"  318
"label8: $r5 = r0.connection"  319
"com.mockrunner.mock.jdbc.MockDataSource.<init>()"  320
"$r48 = org.assertj.core.api.Assertions.assertThat($i4)"  321
"z2 = 0"  322
"$i0 = $r2.update(r1)"  323
"if r1 == $r5 goto label2"  324
"$r2.append($r4)"  325
"label2: if r13 != null goto label1"  326
"$r13 = org.mybatis.spring.SqlSessionTemplateTest.dataSource"  327
"$r1 = r0.sqlSession"  328
"specialinvoke r0.processPropertyPlaceHolders()"  329
"r0.sqlSessionProxy = $r9"  330
"$r7 = $r5.append($r6)"  331
"$r19.isSameAs(r3)"  332
"$r9 = $r8.selectCursor($r7, $r2)"  333
"$r15 = $r14.getVariables()"  334
"$r7 = $r6.getSqlFragments()"  335
"$r12.put(\"_page\", $r15)"  336
"$r20 = $r19.getTransactionFactory()"  337
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSetObjectWrapperFactory()"  338
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.setUp()"  339
"$r59 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  340
"$r12 = org.springframework.beans.BeanUtils.instantiateClass(r6, class \"Lorg/springframework/beans/factory/support/BeanNameGenerator;\")"  341
"if $z0 == 0 goto label2"  342
"org.mybatis.spring.batch.MyBatisBatchItemWriter.setAssertUpdates(boolean)"  343
"$r36 = new org.mybatis.spring.transaction.SpringManagedTransactionFactory"  344
"$r1.setTransactionFactory(null)"  345
"$r11 = r1.read()"  346
"$r16 = r0.session"  347
"$z0 = $r1.isEmpty()"  348
"$r15 = java.util.Collections.singletonMap(\"id\", $r14)"  349
"$r2 = new org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"  350
"$r8 = org.assertj.core.api.Assertions.assertThat($z0)"  351
"$r55.debug($r56)"  352
"$r1 = new org.mybatis.spring.support.SqlSessionDaoSupportTest$MockSqlSessionDao"  353
"$z1 = org.springframework.util.ObjectUtils.isEmpty($r11)"  354
"$r9.add(\"processPropertyPlaceHolders\", $r10)"  355
"$r20 = org.assertj.core.api.Assertions.assertThat($i3)"  356
"$r3 = $r2.getMapper(r1, r0)"  357
"$r17 = new org.mybatis.spring.SqlSessionHolder"  358
"org.mybatis.spring.support.SqlSessionDaoSupportTest.testWithSqlSessionFactory()"  359
"org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)"  360
"org.mybatis.spring.SqlSessionFactoryBean.setTypeHandlers(org.apache.ibatis.type.TypeHandler[])"  361
"$r12 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r11"  362
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.assertUpdates(boolean)"  363
"$i0 = r0.connectionCount"  364
"$r7.getBean(\"mapperChildInterface\")"  365
"return $r7"  366
"$r5 = $r4.append(\"]\")"  367
"$r8 = r0.applicationContext"  368
"org.mybatis.spring.batch.MyBatisBatchItemWriter$PassThroughConverter.convert(java.lang.Object)"  369
"label12: $r11 = r0.typeAliases"  370
"$r1 = r0.session"  371
"$r3.add(\"sqlSessionFactoryBeanName\", \"sqlSessionFactory2\")"  372
"r15 = $r3.getTransaction($r2)"  373
"label1: $i0 = r0.getPage()"  374
"$r3 = new org.apache.ibatis.session.Configuration"  375
"org.mybatis.spring.SqlSessionFactoryBean.setConfiguration(org.apache.ibatis.session.Configuration)"  376
"org.mybatis.spring.SqlSessionFactoryBeanTest.testNullSqlSessionFactoryBuilder()"  377
"specialinvoke $r8.<init>($r9)"  378
"r0.assertConnectionClosed($r47)"  379
"r51 = (java.util.Map) $r34"  380
"label3: $r2 = r0.applicationContext"  381
"$r72 = r0.configLocation"  382
"org.apache.ibatis.type.TypeHandlerRegistry.register(org.apache.ibatis.type.TypeHandler)"  383
"$r9.setSqlSessionTemplateBeanName($r15)"  384
"$i2 = r7.getNumberRollbacks()"  385
"$r7 = r0.connection"  386
"$r23 = (org.assertj.core.api.AbstractIntegerAssert) $r22"  387
"$r5.setDataSource($r6)"  388
"specialinvoke r0.setupBatchStatements()"  389
"org.mybatis.spring.mapper.ClassPathMapperScanner.doScan(java.lang.String[])"  390
"specialinvoke $r2.<init>($r4, $r3)"  391
"org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(javax.sql.DataSource)"  392
"org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectWrapperFactory.<init>(org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectWrapperFactory)"  393
"org.mybatis.spring.type.DummyMapperFactoryBean.getMapperInterface()"  394
"$r17.isTrue()"  395
"$r9 = r0.mockSqlSessionTemplate"  396
"$r17 = $r16.getTransactionFactory()"  397
"$r18 = r0.applicationContext"  398
"r0.closed = 0"  399
"throw $r15"  400
"org.apache.ibatis.logging.Log.isTraceEnabled()"  401
"$r8.setConfigurationProperties(null)"  402
"$r6 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  403
"$r45 = $r44.getDatabaseId($r43)"  404
"org.junit.jupiter.api.Assertions.assertEquals($r35, $r36)"  405
"$r25.update(\"updateFoo\", $r26)"  406
"specialinvoke $r81.<init>($r85, $r80)"  407
"org.mybatis.spring.SqlSessionTemplate.getPersistenceExceptionTranslator()"  408
"$r36 = $r35.getConfiguration()"  409
"org.junit.jupiter.api.Assertions.fail(\"SqlSessionTemplate should translate SQLExceptions into DataAccessExceptions\")"  410
"$r6 = $r2.getId()"  411
"specialinvoke $r7.<init>($r8, null)"  412
"$r7.debug($r8)"  413
"$r32 = r50.get(\"OPERATION_BY\")"  414
"$r2 = \"commit\""  415
"r1.open($r26)"  416
"$r4.setMapperLocations($r2)"  417
"org.junit.jupiter.api.Assertions.assertNull($r38)"  418
"org.mybatis.spring.mapper.MapperImplementation.<init>()"  419
"org.mybatis.spring.SqlSessionTemplateTest.testTemplateWithNoTxSelect()"  420
"$r13 = org.mybatis.spring.SqlSessionFactoryBeanTest.dataSource"  421
"i8 = lengthof $r46"  422
"java.lang.StringBuilder.<init>(int)"  423
"$r1 = new org.mybatis.spring.batch.MyBatisBatchItemWriter$PassThroughConverter"  424
"r2 = (org.springframework.beans.factory.support.GenericBeanDefinition) $r7"  425
"org.mybatis.logging.LoggerFactory.<init>()"  426
"org.mybatis.spring.batch.MyBatisPagingItemReader.setName(java.lang.String)"  427
"$r12 = (org.assertj.core.api.AbstractIntegerAssert) $r11"  428
"$r6 = $r4.sqlSessionFactory($r5)"  429
"java.lang.StringBuilder.<init>(java.lang.String)"  430
"if $z1 == 0 goto label2"  431
"org.mybatis.spring.sample.dao.UserDaoImpl.<init>()"  432
"$r4 = org.mybatis.spring.mapper.MapperFactoryBeanTest.dataSource"  433
"$r19.update(\"updateEmployee\", $r10)"  434
"$r11 = class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\""  435
"r1 = $r8.getTransaction($r7)"  436
"$r6 = r31.getPropertyValues()"  437
"$r8 = java.lang.Integer.valueOf($i4)"  438
"org.apache.ibatis.type.TypeAliasRegistry.registerAlias(java.lang.Class)"  439
"java.lang.Integer.intValue()"  440
"$r25.setParameterValues($r28)"  441
"$r13 = new java.lang.StringBuilder"  442
"$r6 = $r5.toString()"  443
"$r19 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  444
"$r68 = $r66.as(\"should call rollback on SqlSession\", $r67)"  445
"org.mybatis.spring.AbstractMyBatisSpringTest.assertSingleConnection()"  446
"$r3.doOpen()"  447
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithPackageClasses;\""  448
"$r18 = java.lang.Integer.valueOf(1)"  449
"specialinvoke $r1.<init>(\"Transaction synchronization resuming SqlSession [\")"  450
"$r3 = $r2.getUser(r1)"  451
"$r2 = new org.mybatis.spring.batch.MyBatisCursorItemReader"  452
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/springframework/dao/TransientDataAccessResourceException;\", $r13)"  453
"$r25.setQueryId(\"selectFoo\")"  454
"$r12 = r2.get(0)"  455
"specialinvoke $r7.<init>($r8, 1)"  456
"$r2 = org.mybatis.spring.SqlSessionFactoryBeanTest.dataSource"  457
"$i0 = lengthof r2"  458
"r4.commit()"  459
"$r5 = new org.mybatis.spring.SqlSessionFactoryBean"  460
"$r7 = org.assertj.core.api.Assertions.assertThat($r6)"  461
"$r32.isEqualTo(\"Passw0rd\")"  462
"$r7 = org.assertj.core.api.Assertions.assertThat(r1)"  463
"label20: if i7 < i6 goto label19"  464
"$r3 = r0.configuration"  465
"$r13 = org.springframework.util.StringUtils.tokenizeToStringArray($r12, \",; \t\n\")"  466
"$r16 = r2.get(1)"  467
"$r47 = r1.getConfiguration()"  468
"org.mybatis.spring.mapper.MapperScannerConfigurerTest$BeanNameGenerator.generateBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry)"  469
"$r48 = $r47.getParameterMapNames()"  470
"r0.addIncludeFilter($r7)"  471
"org.mybatis.spring.PooledMockDataSource.reset()"  472
"org.mybatis.spring.batch.MyBatisPagingItemReader.getPageSize()"  473
"$r2.setDataSource($r3)"  474
"org.mybatis.spring.SqlSessionFactoryBean.<clinit>()"  475
"org.springframework.context.support.GenericApplicationContext.getBeanDefinition(java.lang.String)"  476
"org.mybatis.spring.SqlSessionTemplateTest.tearDown()"  477
"$r49 = newarray (java.lang.Object)[0]"  478
"$r8 = org.mybatis.spring.MyBatisSpringTest.dataSource"  479
"org.mybatis.spring.mapper.MapperScannerConfigurer.setAddToConfig(boolean)"  480
"$r2 = org.mybatis.spring.transaction.SpringManagedTransaction.LOGGER"  481
"$r29 = org.mockito.Mockito.when($r28)"  482
"label2: $r24 := @caughtexception"  483
"$r4 = r0.sqlSessionFactory"  484
"$r93 = new java.lang.StringBuilder"  485
"label2: $r3 = r17.getCause()"  486
"$r9 = dynamicinvoke \"accept\" <java.util.function.Consumer (org.mybatis.spring.'annotation'.MapperScannerRegistrar$RepeatingRegistrar,org.springframework.beans.factory.support.BeanDefinitionRegistry)>(r0, r2) java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)V\", handle: <org.mybatis.spring.'annotation'.MapperScannerRegistrar$RepeatingRegistrar: void lambda$0(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.core.'annotation'.AnnotationAttributes)>, class \"(Lorg/springframework/core/annotation/AnnotationAttributes;)V\")"  487
"$r12 = new java.util.HashSet"  488
"$r52 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  489
"org.mybatis.spring.sample.SampleJobJavaConfigTest.getExpectedOperationBy()"  490
"org.mybatis.spring.sample.domain.Person.toString()"  491
"$r35 = org.assertj.core.api.Assertions.assertThat($r34)"  492
"specialinvoke $r28.<init>($r29, r101, $r30, $r31)"  493
"org.mybatis.logging.LoggerFactory.getLogger(java.lang.String)"  494
"$r19 = (org.assertj.core.api.ObjectAssert) $r18"  495
"specialinvoke $r17.<init>()"  496
"label1: $r3 = org.mybatis.spring.MyBatisSpringTest.txManager"  497
"i0 := @parameter0"  498
"label3: $r15 = org.mybatis.spring.MyBatisSpringTest.txManager"  499
"$r17 = $r16.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  500
"org.mybatis.spring.support.SqlSessionDaoSupportTest.<init>()"  501
"$r2 = r0.getMapperInterface()"  502
"label1: $r3 = null"  503
"$r41 = (org.apache.ibatis.session.SqlSession) $r40"  504
"r0.target = r1"  505
"$r1.setDataSource($r4)"  506
"r1.resolveAlias(\"testAlias2\")"  507
"org.mybatis.spring.SqlSessionTemplateTest.testExecutorType()"  508
"org.mybatis.spring.submitted.xa.UserServiceTest.testRollbackWithExistingTx()"  509
"$r5 = $r4.getEnvironment()"  510
"r0.sessionFactory = r2"  511
"$r1 = r0.cursorIterator"  512
"$r2 = new java.lang.UnsupportedOperationException"  513
"$r16 = $r14.as(\"should close the Connection\", $r15)"  514
"org.apache.ibatis.logging.LogFactory.getLog(java.lang.String)"  515
"org.mybatis.spring.sample.SampleEnableTest.<init>()"  516
"specialinvoke $r0.<init>()"  517
"$r6 = newarray (java.lang.Class)[1]"  518
"java.util.Collections.singletonList(java.lang.Object)"  519
"$r13 = $r12.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  520
"$r13 = new org.apache.ibatis.mapping.Environment"  521
"$r40 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  522
"$r12.registerBeanDefinition(\"propertiesPlaceholder\", $r9)"  523
"specialinvoke r0.checkDaoConfig()"  524
"org.apache.ibatis.builder.xml.XMLConfigBuilder.parse()"  525
"$r7 = org.assertj.core.api.Assertions.assertThat($z0)"  526
"$r31 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r30"  527
"$r16 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  528
"specialinvoke $r25.<init>()"  529
"$r3[1] = $r5"  530
"$i5 = $r40.getNumberRollbacks()"  531
"$r11 = org.apache.ibatis.executor.ErrorContext.instance()"  532
"$z1 = $r6 instanceof org.springframework.context.ConfigurableApplicationContext"  533
"$r15 = r0.sqlSession"  534
"$r18 = r2.get(0)"  535
"$r4 = $r3.append(\"] will\")"  536
"$i2 = r0.getPage()"  537
"$r20.commit(r2)"  538
"$i0 = r5.getNumberCommits()"  539
"$r28.commit(r1)"  540
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest.setUp()"  541
"r31 = org.apache.ibatis.reflection.ExceptionUtil.unwrapThrowable($r20)"  542
"$r7 = new org.apache.ibatis.mapping.Environment"  543
"$r41 = org.assertj.core.api.Assertions.assertThat($i0)"  544
"$r40 = $r39.getMappedStatementNames()"  545
"goto label4"  546
"org.mybatis.spring.mapper.MapperScannerConfigurer.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)"  547
"java.util.LinkedList.isEmpty()"  548
"$r6.isTrue()"  549
"$r8 = org.springframework.jdbc.core.namedparam.EmptySqlParameterSource.INSTANCE"  550
"$r3.setMapperInterface(class \"Lorg/mybatis/spring/TestMapper;\")"  551
"$r4 = (java.lang.String) $r3"  552
"$r8 = $r7.build()"  553
"label4: $r21 := @caughtexception"  554
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest.<init>()"  555
"$r11 = org.mybatis.spring.AbstractMyBatisSpringTest.dataSource"  556
"r0.assertExecuteCount(2)"  557
"$r17 = r0.applicationContext"  558
"$r20 = org.assertj.core.api.Assertions.assertThat($r19)"  559
"org.mybatis.spring.SqlSessionTemplate.getExecutorType()"  560
"label1: $r15 = $r12.iterator()"  561
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.<init>()"  562
"$r10 = org.assertj.core.api.Assertions.assertThat($r9)"  563
"$r59 = org.mybatis.spring.MyBatisSpringTest.executorInterceptor"  564
"org.mybatis.spring.batch.MyBatisPagingItemReader.setMaxItemCount(int)"  565
"$r3.put(\"username\", \"dev\")"  566
"$r6 = $r5.getEnvironment()"  567
"java.util.List.get(int)"  568
"$r3 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.transaction.SpringManagedTransaction)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.transaction.SpringManagedTransaction: java.lang.String lambda$1()>, class \"()Ljava/lang/String;\")"  569
"$r2.add(r1)"  570
"$r5 = r0.configLocation"  571
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/springframework/dao/EmptyResultDataAccessException;\", $r13)"  572
"$r11 = org.assertj.core.api.Assertions.assertThat(r2)"  573
"$r9 = $r8.getBeanFactory()"  574
"$r4.addGenericArgumentValue($r5)"  575
"$r2 = new org.springframework.transaction.support.DefaultTransactionDefinition"  576
"$r16 = $r13.selectCursor(\"selectFoo\", $r15)"  577
"label3: $r3 := @caughtexception"  578
"r1 = $r4.getObject()"  579
"org.mybatis.spring.annotation.MapperScanTest.testScanWithExplicitSqlSessionFactory()"  580
"$r7 = r0.mockSqlSessionTemplate"  581
"$r42 = r0.cache"  582
"$r12 = org.mockito.Mockito.verify($r11)"  583
"return $i0"  584
"java.util.function.Supplier.get(org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)"  585
"$r2 = newarray (java.lang.String)[1]"  586
"$r4 = (org.mybatis.spring.sample.domain.User) $r3"  587
"org.apache.ibatis.session.SqlSession.update(java.lang.String,java.lang.Object)"  588
"$r4 = $r3.append(\"\' package. Please check your configuration.\")"  589
"org.mybatis.spring.SqlSessionFactoryBeanTest.testAddATypeAlias()"  590
"r0.sqlSessionDaoSupport = $r5"  591
"$r9 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  592
"$r5 = r0.jobLauncherTestUtils"  593
"$r18.insertTest(\"test3\")"  594
"specialinvoke r0.assertConfig($r4, class \"Lorg/apache/ibatis/transaction/jdbc/JdbcTransactionFactory;\")"  595
"org.mybatis.spring.SqlSessionFactoryBean.setTypeAliasesPackage(java.lang.String)"  596
"$r3 = new org.mybatis.spring.MyBatisExceptionTranslator"  597
"$r15 = newarray (java.lang.Object)[0]"  598
"$r5 = $r4.end()"  599
"$r10 = new java.util.Properties"  600
"specialinvoke $r1.<init>(\"No MyBatis mapper was found in \'\")"  601
"org.mybatis.spring.SqlSessionFactoryBean.LOGGER = $r0"  602
"org.mybatis.spring.support.SqlSessionDaoSupportTest.setupSqlSessionFactory(java.lang.String)"  603
"$z0 = $r13.isClosed()"  604
"org.mybatis.spring.annotation.MapperScannerRegistrar$RepeatingRegistrar.lambda$0(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.core.annotation.AnnotationAttributes)"  605
"$r1 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder"  606
"$r36 = r2.getConfiguration()"  607
"$r34 = newarray (java.lang.Object)[0]"  608
"$i2 = $r13.getCommitCount()"  609
"$r17.isSameAs($r18)"  610
"$z0 = r0.processPropertyPlaceHolders"  611
"$r10 = org.apache.ibatis.session.ExecutorType.BATCH"  612
"$r25 = $r23.as(\"should call commit on Connection 1\", $r24)"  613
"org.springframework.util.StringUtils.hasLength(java.lang.String)"  614
"$r5 = dynamicinvoke \"get\" <java.util.function.Supplier ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$0()>, class \"()Ljava/lang/String;\")"  615
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testAddToConfigFalse()"  616
"$r32 = (org.assertj.core.api.AbstractIntegerAssert) $r31"  617
"return $r3"  618
"r0.executorType = r2"  619
"$r1 = r0.sqlSessionProxy"  620
"$r17.requested()"  621
"$r2.add(r13)"  622
"$r1[0] = $r2"  623
"$r4 = new org.mybatis.spring.batch.domain.Employee"  624
"$r15 = $r14.iterator()"  625
"org.mybatis.spring.batch.domain.Employee.<init>()"  626
"$r2 = new org.mybatis.spring.batch.MyBatisPagingItemReader"  627
"$r14 = $r13.selectOne(\"checkEmployeeCount\")"  628
"$r28 = java.util.Collections.singletonMap(\"id\", $r27)"  629
"$r2 = new org.springframework.core.io.ClassPathResource"  630
"$r12 = r0.connection"  631
"$r2 = $r1.get(\"step1\")"  632
"org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(java.util.Set)"  633
"org.mybatis.spring.SqlSessionTemplate.selectList(java.lang.String, java.lang.Object, org.apache.ibatis.session.RowBounds)"  634
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r19, $r18)"  635
"$r27 = (org.apache.ibatis.exceptions.PersistenceException) r31"  636
"$r9.write($r4)"  637
"org.mybatis.spring.SqlSessionUtils.lambda$1(org.apache.ibatis.session.SqlSession)"  638
"org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.<init>(org.mybatis.spring.SqlSessionTemplate, org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor)"  639
"$i0 = $r2.insert(r1)"  640
"$r2.write(r1)"  641
"$r11 = org.mybatis.spring.support.SqlSessionDaoSupportTest.sqlSessionFactory"  642
"$r17 = r1.read()"  643
"$r22.doClose()"  644
"if $r2 == null goto label2"  645
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testScanWithExplicitSqlSessionFactoryViaPlaceholder()"  646
"$r92 = new org.springframework.core.NestedIOException"  647
"$r8.isEqualTo($r10)"  648
"$r28 = org.assertj.core.api.Assertions.assertThat($r27)"  649
"$r17 = r48.get(\"FIRST_NAME\")"  650
"org.mybatis.spring.SqlSessionTemplate.delete(java.lang.String, java.lang.Object)"  651
"if $r63 != null goto label09"  652
"$r29 = org.mybatis.spring.MyBatisSpringTest.dataSource"  653
"$r22.rollback(r25)"  654
"i9 = 0"  655
"label43: i11 = i11 + 1"  656
"$r4 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$2()>, class \"()Ljava/lang/String;\")"  657
"$r5 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionTemplate"  658
"r1 = (org.springframework.jdbc.datasource.ConnectionHolder) $r3"  659
"org.mybatis.spring.sample.domain.User.<init>()"  660
"org.springframework.transaction.support.TransactionSynchronizationManager.registerSynchronization($r18)"  661
"$r2 = r0.queryId"  662
"$r27 = $r26.getDefaultExecutorType()"  663
"org.springframework.transaction.support.TransactionSynchronizationManager.isActualTransactionActive()"  664
"$r25 = r49.get(\"OPERATION_BY\")"  665
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithSqlSessionTemplate.<init>()"  666
"$r31 = newarray (java.lang.Object)[0]"  667
"$r7.close()"  668
"specialinvoke $r5.<init>(\"org/mybatis/spring/sample/mapper/UserMapper.xml\")"  669
"$r6 = org.mybatis.spring.sample.config.SampleJobConfig.createItemToParameterMapConverter(\"batch_java_config_user\", $r5)"  670
"r0.assertNoCommitSession()"  671
"throw $r11"  672
"org.apache.ibatis.session.SqlSession.getConfiguration()"  673
"$r6 = r2[0]"  674
"$r11 = (java.util.Map) $r10"  675
"$r8 = r0.factoryBean"  676
"r3 = org.springframework.core.annotation.AnnotationAttributes.fromMap($r6)"  677
"r28 = $r9.flushStatements()"  678
"$r38.isSameAs($r39)"  679
"org.apache.ibatis.type.TypeHandlerRegistry.register(java.lang.String)"  680
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.assertBeanNotLoaded(java.lang.String)"  681
"$r4 = r0.sqlSessionTemplate"  682
"java.lang.RuntimeException.getMessage()"  683
"label4: $r26 = r2.getPropertyValues()"  684
"$r5.getConnection()"  685
"$i6 = $r59.getCommitCount()"  686
"org.mybatis.spring.config.NamespaceTest.setupSqlSessionFactory()"  687
"r4 = $r26.translateExceptionIfPossible($r27)"  688
"$i0 = $r8.intValue()"  689
"org.mybatis.spring.SqlSessionFactoryBeanTest.testDefaults()"  690
"$r10 = $r9.saveState(0)"  691
"$r3.setAddToConfig(z0)"  692
"org.mybatis.spring.SqlSessionTemplate.destroy()"  693
"$r33 = r2.getConfiguration()"  694
"$r25.close()"  695
"org.assertj.core.api.AbstractIntegerAssert.as(java.lang.String,java.lang.Object[])"  696
"$r11 = $r10.getDataSource()"  697
"r0.rollbackCount = $i1"  698
"org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(java.lang.String)"  699
"org.mybatis.spring.SqlSessionFactoryBeanTest.<clinit>()"  700
"$z0 = $r17.isClosed()"  701
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.queryId(java.lang.String)"  702
"org.mybatis.spring.annotation.MapperScannerRegistrar.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata, org.springframework.beans.factory.support.BeanDefinitionRegistry)"  703
"$i0 = $r11.size()"  704
"$r21 = java.lang.Integer.valueOf(1)"  705
"$r2 = $r1.append($i0)"  706
"org.apache.ibatis.session.SqlSession.close()"  707
"$r23.registerBeanDefinition(\"propertiesPlaceholder\", $r20)"  708
"org.mybatis.spring.SqlSessionFactoryBean.lambda$6()"  709
"$r106 = class \"Ljava/lang/Object;\""  710
"java.util.Set.isEmpty()"  711
"$r4 = newarray (org.mybatis.spring.batch.domain.Employee)[2]"  712
"label39: goto label42"  713
"$r35 = newarray (java.lang.Object)[0]"  714
"if $z0 == 0 goto label12"  715
"$r6 = r1.getMethod()"  716
"$r1 = new org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder"  717
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testInterfaceScan()"  718
"org.mybatis.spring.batch.domain.Employee.getName()"  719
"label13: r108 = $r57[i3]"  720
"$r1 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  721
"org.junit.jupiter.api.Assertions.assertThrows(class \"Ljava/lang/IllegalArgumentException;\", $r3)"  722
"$r44 = $r42.as(\"should not call rollback on Connection 1\", $r43)"  723
"specialinvoke r0.startContext()"  724
"$r6 = org.mybatis.spring.MyBatisSpringTest.dataSource"  725
"return $r9"  726
"label1: $r5 = \"rollback\""  727
"$r10.insertTest(\"test2\")"  728
"r29 = $r13.getTransaction($r12)"  729
"$r19 = java.util.Collections.singletonMap(\"id\", $r18)"  730
"$r1.commit(1)"  731
"r3 = (org.mybatis.spring.SqlSessionHolder) $r17"  732
"$r2 = r0.sqlSessionProxy"  733
"$r6 = $r4.getMessage()"  734
"$r8.setConfigurationProperties($r6)"  735
"$r13 = (org.mybatis.spring.TestMapper) $r12"  736
"if r4 == null goto label5"  737
"$r10 = java.lang.String.valueOf($r9)"  738
"$r11.insertTest(\"test2\")"  739
"$r7 = new org.springframework.core.type.filter.AnnotationTypeFilter"  740
"$r3 = r0.applicationContext"  741
"if $z2 == 0 goto label2"  742
"$r16 = r1.read()"  743
"$i0 = $r0.get()"  744
"return $r6"  745
"$r20 = r0.session"  746
"$r12 = $r10.as(\"should ignore the Factory\", $r11)"  747
"$r5.setPropagationBehaviorName(\"PROPAGATION_REQUIRED\")"  748
"$r15 = java.time.LocalDateTime.now($r14)"  749
"$r3 = r0.sqlSessionDaoSupport"  750
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testScanWithNameConflict()"  751
"r1.add($r6)"  752
"$r5 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.mapper.MapperFactoryBeanTest,org.apache.ibatis.session.SqlSessionFactory)>(r0, r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.mapper.MapperFactoryBeanTest: void lambda$0(org.apache.ibatis.session.SqlSessionFactory)>, class \"()V\")"  753
"org.mybatis.spring.sample.config.SampleJobConfig.transactionalManager()"  754
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.itemToParameterConverter(org.springframework.core.convert.converter.Converter)"  755
"$r6 = org.mybatis.spring.SqlSessionUtils.access$0()"  756
"$r4.setConfiguration($r3)"  757
"r0.cache = r1"  758
"r0.assertUpdates = $r1"  759
"$r9 = r0.applicationContext"  760
"org.mybatis.spring.transaction.SpringManagedTransaction.getConnection()"  761
"$r29 = r1.getConfiguration()"  762
"org.springframework.context.ApplicationContext.getBeansOfType(java.lang.Class)"  763
"$r17.update(\"updateFoo\", $r18)"  764
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithCustomMapperFactoryBean;\""  765
"$r25 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r24"  766
"$r22 = r0.session"  767
"$r6.setStatementId(\"updateEmployee\")"  768
"org.springframework.util.Assert.notNull($r6, \"A itemToParameterConverter is required.\")"  769
"r1.resolveAlias(\"superType\")"  770
"$r7 = r0.applicationContext"  771
"$r3.insertTest(\"test1\")"  772
"org.mybatis.spring.SqlSessionTemplate.insert(java.lang.String)"  773
"if $i2 == 1 goto label3"  774
"org.mybatis.spring.mapper.MapperScannerConfigurer.setSqlSessionFactoryBeanName(java.lang.String)"  775
"if $r3 != $r4 goto label1"  776
"$r30 = $r28.as(\"should not call rollback on Connection\", $r29)"  777
"$r7.setConfiguration($r4)"  778
"r0.session = $r3"  779
"$r12 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r11"  780
"org.mybatis.spring.SqlSessionFactoryBean.setPlugins(org.apache.ibatis.plugin.Interceptor[])"  781
"if $z1 == 0 goto label3"  782
"specialinvoke r0.find($r2, 0)"  783
"$r15 = r5.extractSource(r1)"  784
"$r11 = r0.session"  785
"$z0 = $r11.isEmpty()"  786
"label15: $r12 = r0.plugins"  787
"org.mockito.Mockito.when(java.lang.Object)"  788
"$r2 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo"  789
"label4: return null"  790
"$r6.isNotNull()"  791
"i0 := @parameter1"  792
"$i1 = $r11.intValue()"  793
"org.apache.ibatis.session.Configuration.getTypeAliasRegistry()"  794
"org.mybatis.spring.SqlSessionFactoryBeanTest.testNullConfigLocation()"  795
"$r16 = org.mockito.Mockito.verify($r15)"  796
"$r15.getBean(\"annotatedMapper\")"  797
"org.mybatis.spring.mapper.MapperScannerConfigurer.setAnnotationClass(java.lang.Class)"  798
"$r9 = r17.getMessage()"  799
"org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig()"  800
"org.mybatis.spring.mapper.ClassPathMapperScanner.setSqlSessionFactoryBeanName(java.lang.String)"  801
"java.util.function.Supplier.get(org.mybatis.spring.transaction.SpringManagedTransaction)"  802
"$r11 = (org.assertj.core.api.ObjectAssert) $r10"  803
"$r53 = dynamicinvoke \"get\" <java.util.function.Supplier (java.lang.String)>(r113) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$4(java.lang.String)>, class \"()Ljava/lang/String;\")"  804
"org.mybatis.spring.mapper.MapperFactoryBeanTest.find(org.mybatis.spring.SqlSessionTemplate, boolean)"  805
"org.mybatis.spring.batch.MyBatisPagingItemReader.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  806
"$r14 = r0.sqlSession"  807
"if $i0 <= 0 goto label1"  808
"$r4 = $r2.getExecutorType()"  809
"$r16.getBean($r17)"  810
"label4: $r20 := @caughtexception"  811
"$r39 = r1.getConfiguration()"  812
"$r3.setAnnotationClass($r4)"  813
"$r30.warn($r31)"  814
"throw $r92"  815
"$r7.addConnection($r6)"  816
"$r4 = r0.connection"  817
"org.springframework.transaction.support.TransactionSynchronizationManager.unbindResource($r3)"  818
"$r1 = r0.firstName"  819
"$r4 = $r2.getMapper(class \"Lorg/mybatis/spring/sample/mapper/UserMapper;\")"  820
"if $z1 != 0 goto label1"  821
"$r3 = r0.getBeanName()"  822
"throw $r10"  823
"$r34 = org.assertj.core.api.Assertions.assertThat($z1)"  824
"$r8 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r7)"  825
"specialinvoke $r1.<init>(\"Committing JDBC Connection [\")"  826
"org.mybatis.spring.AbstractMyBatisSpringTest.dataSource = $r0"  827
"$r12.put(\"id\", $r13)"  828
"$r4 = org.mybatis.spring.MyBatisSpringTest.txManager"  829
"org.mybatis.spring.transaction.SpringManagedTransaction.commit()"  830
"$r4.select(r1, r2, r3)"  831
"$i0 = $r3.delete(r1, r2)"  832
"r0.session = $r18"  833
"$r21 = r0.sqlSession"  834
"org.apache.ibatis.session.Configuration.setVfsImpl(java.lang.Class)"  835
"$r28 = $r27.getConfiguration()"  836
"goto label3"  837
"label5: return"  838
"$z4 = org.springframework.util.ObjectUtils.isEmpty($r14)"  839
"$r12 = $r10.writer($r11)"  840
"org.assertj.core.api.Assertions.assertThat(java.lang.Integer)"  841
"org.mybatis.spring.TestMapper.insertTest(java.lang.String)"  842
"$r3.setVfsImpl(class \"Lorg/apache/ibatis/io/JBoss6VFS;\")"  843
"label1: return null"  844
"$r2.putAll($r17)"  845
"$r84 = $r83.append(\"\'\")"  846
"org.mybatis.spring.ExecutorInterceptor.<init>()"  847
"specialinvoke $r1.<init>(\"Executing batch with \")"  848
"$r28 = org.assertj.core.api.Assertions.assertThat($z0)"  849
"$r5 = new com.mockrunner.mock.jdbc.MockDataSource"  850
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r11, $r10)"  851
"r0.holderActive = 1"  852
"$r5 = r0.markerInterface"  853
"org.mybatis.spring.submitted.xa.UserServiceTest.testRollback()"  854
"$r3 = new org.mybatis.spring.mapper.MapperFactoryBean"  855
"$r39 = org.mybatis.spring.MyBatisSpringTest.dataSource"  856
"$z0 = r2.endsWith(\"package-info\")"  857
"if $r6 == null goto label2"  858
"$r1.setEnvironment(\"\")"  859
"$r9.getBean(\"mapperInterface\")"  860
"if $z3 != 0 goto label5"  861
"org.mybatis.spring.type.DummyMapperFactoryBean.<init>()"  862
"$r2.setTypeAliasesSuperType(class \"Lorg/mybatis/spring/type/SuperType;\")"  863
"org.mybatis.spring.mapper.MapperScannerConfigurer.setProcessPropertyPlaceHolders(boolean)"  864
"return 1"  865
"org.mybatis.spring.support.SqlSessionDaoSupport.getSqlSessionFactory()"  866
"$r69.isEqualTo(0)"  867
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r34, $r33)"  868
"$r5 = java.time.LocalDateTime.now()"  869
"$r2 = r0.connections"  870
"$r5 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r4)"  871
"$r11 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.apache.ibatis.type.TypeAliasRegistry)>(r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.SqlSessionFactoryBeanTest: void lambda$1(org.apache.ibatis.type.TypeAliasRegistry)>, class \"()V\")"  872
"$r6 = org.assertj.core.api.Assertions.assertThat(r1)"  873
"$r3.warn($r4)"  874
"label3: $r6 := @caughtexception"  875
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$7(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"  876
"$r24 = specialinvoke r0.getFoos()"  877
"org.mybatis.logging.Logger.trace(java.util.function.Supplier)"  878
"org.apache.ibatis.session.Configuration.getObjectWrapperFactory()"  879
"$r17.addAll($r31)"  880
"$r26.isEqualTo(0)"  881
"$r14.addAll($r15)"  882
"$r28.isSameAs($r29)"  883
"$r12.commit(1)"  884
"specialinvoke r0.setupSqlSessionFactory(\"factory1\")"  885
"org.apache.ibatis.session.SqlSession.getConnection()"  886
"$r3[0] = class \"Lorg/apache/ibatis/session/SqlSessionFactory;\""  887
"$r7 = $r6.getPropertyValues()"  888
"specialinvoke $r2.<init>(30)"  889
"$i4 = $i2 * $i3"  890
"if r1 == null goto label1"  891
"$r9 = org.mockito.Mockito.when($r8)"  892
"$r1 = r0.sqlSessionTemplate"  893
"$r7 = r0.queryId"  894
"org.mybatis.spring.SqlSessionTemplate.selectOne(java.lang.String)"  895
"$r7 = new org.mybatis.spring.sample.domain.Person"  896
"$r4[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithPackageScan;\""  897
"if $z0 != 0 goto label7"  898
"r0.sqlSessionDaoSupport = $r1"  899
"$r9 = r0.saveState"  900
"org.mybatis.spring.support.SqlSessionDaoSupportTest.testWithSqlSessionTemplate()"  901
"$r3 = $r2.getExecutedStatements()"  902
"$r11 = $r7.append(\"\n\")"  903
"$r9 = r2.getRegistry()"  904
"label3: $r10 := @caughtexception"  905
"$r33.isEqualTo(2)"  906
"$r15 = org.mybatis.spring.MyBatisSpringTest.txManager"  907
"r3 = null"  908
"org.mybatis.spring.mapper.MapperFactoryBean.getMapperInterface()"  909
"$r1[1] = $r3"  910
"$r8 = $r7.iterator()"  911
"$r10 = new org.springframework.batch.item.ExecutionContext"  912
"org.mybatis.spring.SqlSessionFactoryBean.setSqlSessionFactoryBuilder(org.apache.ibatis.session.SqlSessionFactoryBuilder)"  913
"$r23.setDataSource($r22)"  914
"org.mybatis.spring.SqlSessionTemplateTest.<init>()"  915
"$r3 = r1.getBeanClassName()"  916
"$r9.setSqlSessionFactoryBeanName($r16)"  917
"$r6 = org.assertj.core.api.Assertions.assertThat($r5)"  918
"org.mybatis.spring.SqlSessionTemplate.access$0(org.mybatis.spring.SqlSessionTemplate)"  919
"org.apache.ibatis.session.SqlSession.selectOne(java.lang.String,java.lang.Object)"  920
"$r21 = org.mybatis.spring.MyBatisSpringTest.txManager"  921
"$r4.put(\"item\", r2)"  922
"$r12 = new java.util.HashMap"  923
"specialinvoke $r1.<init>(\"Transaction synchronization suspending SqlSession [\")"  924
"goto label17"  925
"label3: $r7 := @caughtexception"  926
"$r3.setPlugins($r5)"  927
"$i1 = $r44.size()"  928
"specialinvoke $r71.<init>($r73, null, $r74)"  929
"$r43 = r0.dataSource"  930
"$r10 = r2.invoke($r9, r3)"  931
"$r22 = $r21.getMappedStatementNames()"  932
"org.mybatis.spring.SqlSessionFactoryBean.setTypeHandlersPackage(java.lang.String)"  933
"$r11 = r0.pageSize"  934
"specialinvoke $r29.<init>()"  935
"$r20 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  936
"$r5 = r0.pagingNoNestedItemReader"  937
"$r15.commit(r1)"  938
"$r11 = r0.connection"  939
"org.springframework.beans.factory.support.GenericBeanDefinition.setBeanClass(java.lang.Class)"  940
"$r1 = org.apache.ibatis.session.ExecutorType.SIMPLE"  941
"return null"  942
"$z0 = $r6.checkUserExists($i0)"  943
"if $r17 != null goto label36"  944
"label1: $r5 = r0.target"  945
"$r18 = org.assertj.core.api.Assertions.assertThat($r17)"  946
"$r22.isSameAs(class \"Lorg/mybatis/spring/transaction/SpringManagedTransactionFactory;\")"  947
"$r3 = r1.get()"  948
"r0.sqlSessionFactoryBeanName = r1"  949
"$i3 = $r39.getConnectionCount()"  950
"$r6 = $r5.getValue()"  951
"$r2.setMapperInterface(class \"Lorg/mybatis/spring/sample/mapper/UserMapper;\")"  952
"$r25 = java.lang.Integer.valueOf(0)"  953
"$r8 = (org.assertj.core.api.AbstractIntegerAssert) $r7"  954
"$r24 = r4.getConfiguration()"  955
"$r3 = org.assertj.core.api.Assertions.assertThat(r1)"  956
"org.mybatis.spring.config.NamespaceTest.startContext()"  957
"$r7 = $r6.getName()"  958
"$r30 = $r29.getVariables()"  959
"r31 = (org.springframework.beans.factory.support.GenericBeanDefinition) $r5"  960
"$r5 = java.util.Arrays.asList($r1)"  961
"$r38.isEqualTo(1)"  962
"$r18 = new java.util.HashMap"  963
"specialinvoke r0.afterPropertiesSet()"  964
"$r4 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionHolder)>(r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$4(org.mybatis.spring.SqlSessionHolder)>, class \"()Ljava/lang/String;\")"  965
"label2: goto label4"  966
"$r5 = $r4.getConfiguration()"  967
"r0.vfs = r1"  968
"label10: $r62.registerAliases(r105, $r106)"  969
"specialinvoke r0.<init>(r1, $r3)"  970
"$r20.isEqualTo(\"foo2\")"  971
"$r7 = dynamicinvoke \"convert\" <org.springframework.core.convert.converter.Converter ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)Ljava/lang/Object;\", handle: <org.mybatis.spring.batch.MyBatisBatchItemWriterTest: java.lang.Object lambda$2(org.mybatis.spring.batch.domain.Employee)>, class \"(Lorg/mybatis/spring/batch/domain/Employee;)Ljava/lang/Object;\")"  972
"org.mybatis.spring.SqlSessionUtils.getSqlSession(org.apache.ibatis.session.SqlSessionFactory, org.apache.ibatis.session.ExecutorType, org.springframework.dao.support.PersistenceExceptionTranslator)"  973
"r1 = $r5.getConnection()"  974
"$r36.setEnvironment(r1)"  975
"$r60 = org.assertj.core.api.Assertions.assertThat($i6)"  976
"$r6.rollback()"  977
"if $z0 == 0 goto label6"  978
"$r7 = $r6.build()"  979
"specialinvoke $r19.<init>()"  980
"$r15 = $r13.selectList($r12, $r2)"  981
"org.springframework.util.Assert.state(boolean,java.lang.String)"  982
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testScanWithExplicitSqlSessionTemplate()"  983
"r0.name = r2"  984
"specialinvoke $r12.<init>($r21, 1)"  985
"org.mybatis.spring.SqlSessionFactoryBeanTest.testEmptyStringEnvironment()"  986
"$r1.setConfigLocation(null)"  987
"$r5 = r0.writer"  988
"$r4 = new java.lang.RuntimeException"  989
"r0.assertConnectionClosed($r71)"  990
"specialinvoke $r16.<init>()"  991
"$r11 = r2.getConfiguration()"  992
"$r14 = org.assertj.core.api.Assertions.assertThat($i2)"  993
"$r9.setMapperFactoryBean($r42)"  994
"$r13 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  995
"r100 = null"  996
"$r79 = r0.configurationProperties"  997
"$r4 = new org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder"  998
"$r13 = $r12.statementId(\"updateFoo\")"  999
"$r14 = r2.get(1)"  1000
"i3 = i3 + 1"  1001
"org.mybatis.spring.support.SqlSessionDaoSupportTest.closeConnection()"  1002
"label1: $r11 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1003
"$r15 = r0.logger"  1004
"org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(java.lang.String[])"  1005
"$r24 = org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER"  1006
"r1 = $r2.doSomeBusinessStuff(\"u1\")"  1007
"org.mybatis.spring.mapper.MapperFactoryBean.setMapperInterface(java.lang.Class)"  1008
"r2 = $r6.getTransaction($r5)"  1009
"$r17 = new java.util.Properties"  1010
"java.lang.Object.getClass()"  1011
"specialinvoke $r4.<init>(\"failed!\")"  1012
"$r17 = specialinvoke r0.updatePropertyValue(\"sqlSessionTemplateBeanName\", r19)"  1013
"$r27 = r1.read()"  1014
"$r52.debug($r53)"  1015
"org.mybatis.spring.submitted.xa.UserMapper.save(org.mybatis.spring.submitted.xa.User)"  1016
"com.mockrunner.mock.jdbc.MockConnection.getPreparedStatementResultSetHandler()"  1017
"org.mybatis.spring.transaction.SpringManagedTransaction.getTimeout()"  1018
"r0.assertCommitJdbc()"  1019
"label2: goto label8"  1020
"$r62 = $r60.as(\"should call commit on SqlSession\", $r61)"  1021
"$r31.isEqualTo(0)"  1022
"$r95 = $r93.append($r94)"  1023
"$r10 = $r8.getResourceLoader()"  1024
"org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Object)"  1025
"$r2.setParameterValues($r5)"  1026
"r100 = $r71"  1027
"org.springframework.util.Assert.notNull(r1, \"No SqlSessionFactory specified\")"  1028
"$r30 = newarray (java.lang.Object)[0]"  1029
"org.apache.ibatis.session.Configuration.setObjectWrapperFactory(org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory)"  1030
"org.junit.jupiter.api.Assertions.fail($r7)"  1031
"label2: $r17 = r0.sqlSessionFactory"  1032
"$r12.isSameAs($r13)"  1033
"$r5 = new org.mybatis.spring.mapper.ClassPathMapperScanner$1"  1034
"$r22 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r21"  1035
"org.mybatis.spring.AbstractMyBatisSpringTest.setupConnection()"  1036
"$r2 = $r1.getConfiguration()"  1037
"$r2 = r0.firstName"  1038
"label3: r6 = r1.getClass(\"nameGenerator\")"  1039
"specialinvoke $r1.<init>($r2, $r3)"  1040
"org.mybatis.spring.support.SqlSessionDaoSupportTest.testWithNoFactoryOrSession()"  1041
"$r71 = r0.connection"  1042
"$r2 = $r1.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  1043
"$r5 = org.mybatis.spring.support.SqlSessionDaoSupportTest.sqlSessionFactory"  1044
"$z0 = r0.failFast"  1045
"$r10.put(\"now\", $r15)"  1046
"$r8.setDefaultExecutorType($r9)"  1047
"$r12 = new org.springframework.transaction.support.DefaultTransactionDefinition"  1048
"r3 = (org.mybatis.spring.SqlSessionHolder) $r4"  1049
"org.mybatis.spring.batch.MyBatisCursorItemReader.setParameterValues(java.util.Map)"  1050
"$r18 = $r16.as(\"getSqlSession() should not return suspended SqlSession\", $r17)"  1051
"$i5 = r28.size()"  1052
"$r3 = r0.dataSource()"  1053
"org.junit.jupiter.api.Assertions.assertEquals($r15, $r16)"  1054
"$r28 = org.assertj.core.api.Assertions.assertThat($i1)"  1055
"com.mockrunner.jdbc.PreparedStatementResultSetHandler.addPreparedStatement(com.mockrunner.mock.jdbc.MockPreparedStatement)"  1056
"$r3.getMappedStatementNames()"  1057
"$r8 = $r7.statementId(\"updateFoo\")"  1058
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/springframework/dao/InvalidDataAccessResourceUsageException;\", $r10)"  1059
"$r19.rollback(r29)"  1060
"r23.setSalary($i1)"  1061
"$r12 = $r11.openSession($r10)"  1062
"$r27 = org.assertj.core.api.Assertions.assertThat($z0)"  1063
"r0.transactionFactory = $r36"  1064
"$i0 = r0.rollbackCount"  1065
"label1: specialinvoke r0.processBeanDefinitions(r2)"  1066
"$r5 = new org.apache.ibatis.session.Configuration"  1067
"$r38 = (org.assertj.core.api.AbstractIntegerAssert) $r37"  1068
"org.mybatis.spring.SqlSessionTemplate.select(java.lang.String, java.lang.Object, org.apache.ibatis.session.ResultHandler)"  1069
"$r27 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  1070
"org.apache.ibatis.session.Configuration.addCache(org.apache.ibatis.cache.Cache)"  1071
"$r2.setQueryId($r4)"  1072
"$r3 = new java.util.Properties"  1073
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest$Foo.<init>(java.lang.String)"  1074
"org.apache.ibatis.session.SqlSession.selectList(java.lang.String)"  1075
"org.apache.ibatis.plugin.Invocation.getMethod()"  1076
"com.mockrunner.mock.jdbc.MockConnection.getNumberRollbacks()"  1077
"$r23 = r0.this$0"  1078
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.testConfigurationUsingSqlSessionTemplate()"  1079
"$r2.append($r7)"  1080
"org.mybatis.logging.LoggerFactory.getLogger(java.lang.Class)"  1081
"$r2 = $r1.get(\"importUserJob\")"  1082
"org.mybatis.spring.submitted.xa.UserServiceTest.<init>()"  1083
"$r11.insertTest(\"test1\")"  1084
"$r6.isEqualTo(\"Pocoyo\")"  1085
"$r36 = r51.get(\"PERSON_ID\")"  1086
"$r3 = r0.session"  1087
"specialinvoke $r17.<init>($r18)"  1088
"org.mybatis.spring.MyBatisSpringTest.testChangeExecutorTypeInTx()"  1089
"org.apache.ibatis.session.Configuration.setDatabaseId(java.lang.String)"  1090
"$r33 = r0.sqlSessionFactory"  1091
"$r4 = $r3.selectOne(r1, r2)"  1092
"$r3.setSqlSessionFactory($r6)"  1093
"$r14 = class \"Lorg/mybatis/spring/mapper/MapperFactoryBean;\""  1094
"$r30 = r120.toString()"  1095
"$r30 = r2.getConfiguration()"  1096
"org.mybatis.spring.batch.domain.Employee.getId()"  1097
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithMapperScanIsRepeat.<init>()"  1098
"org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER = $r0"  1099
"org.junit.jupiter.api.Assertions.assertEquals(r3, $r46)"  1100
"org.mybatis.spring.batch.MyBatisPagingItemReader.setQueryId(java.lang.String)"  1101
"$r34.debug($r35)"  1102
"$r11 = $r9.getName()"  1103
"$r69 = (org.assertj.core.api.AbstractIntegerAssert) $r68"  1104
"org.mybatis.spring.sample.SampleScannerTest.<init>()"  1105
"$r4.setEnvironment($r5)"  1106
"org.apache.ibatis.session.SqlSession.selectCursor(java.lang.String)"  1107
"$r25.isEqualTo(1)"  1108
"$r0 = org.mybatis.logging.LoggerFactory.getLogger(class \"Lorg/mybatis/spring/SqlSessionUtils;\")"  1109
"org.mybatis.spring.SqlSessionUtils.closeSqlSession(r28, $r19)"  1110
"$r22.isEqualTo(2)"  1111
"org.mybatis.spring.SqlSessionTemplate.access$2(org.mybatis.spring.SqlSessionTemplate)"  1112
"org.mybatis.spring.MyBatisSpringTest.testWithNonSpringTransactionFactory()"  1113
"r0.assertExecuteCount(3)"  1114
"$z1 = $r9 instanceof org.mybatis.spring.transaction.SpringManagedTransactionFactory"  1115
"org.mybatis.logging.Logger.error(java.util.function.Supplier)"  1116
"$r1[2] = $r4"  1117
"$r14 = $r13.getConfiguration()"  1118
"org.mybatis.spring.sample.config.SampleConfig.<init>()"  1119
"$r9 = dynamicinvoke \"get\" <java.util.function.Supplier (org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.String)>(r3, r5) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: java.lang.String lambda$3(org.springframework.beans.factory.config.BeanDefinitionHolder,java.lang.String)>, class \"()Ljava/lang/String;\")"  1120
"$r36 = (org.assertj.core.api.AbstractIntegerAssert) $r35"  1121
"$r7 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionFactory"  1122
"$r1 = newarray (org.springframework.core.io.Resource)[0]"  1123
"specialinvoke $r3.<init>(r1)"  1124
"$r17 = org.mockito.Mockito.when($r16)"  1125
"$z0 = $r10.containsKey(\"MyBatisPagingItemReader.read.count.max\")"  1126
"org.mybatis.spring.annotation.MapperScanTest.<init>()"  1127
"label1: $r7 = r0.mapperInterface"  1128
"$r2 = r0.mapperInterface"  1129
"$r18.isTrue()"  1130
"$r3 = r1.getClass()"  1131
"$r7 = r31.getPropertyValues()"  1132
"$r7 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.SqlSessionFactoryBean)>($r6) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.SqlSessionFactoryBean: org.apache.ibatis.session.SqlSessionFactory getObject()>, class \"()V\")"  1133
"org.mybatis.spring.submitted.xa.User.<init>()"  1134
"label1: $r3 = new org.mybatis.spring.SqlSessionFactoryBean"  1135
"$r31 = dynamicinvoke \"get\" <java.util.function.Supplier ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: java.lang.String lambda$4()>, class \"()Ljava/lang/String;\")"  1136
"r1.addMapper($r7)"  1137
"$r8 = org.mockito.Mockito.when($r7)"  1138
"specialinvoke $r2.<init>(\"org/mybatis/spring/mybatis-config.xml\")"  1139
"label1: specialinvoke r0.setupBatchStatements()"  1140
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSpecifyVariablesAndConfigurationProperties()"  1141
"label3: $r18 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1142
"$r15 = org.apache.ibatis.session.ExecutorType.BATCH"  1143
"i7 = 0"  1144
"org.mybatis.spring.mapper.MapperScannerConfigurer.setNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)"  1145
"$r8.reset()"  1146
"$r14 = dynamicinvoke \"run\" <java.lang.Runnable (org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler,java.util.Set,java.lang.reflect.Method,java.lang.Object[],java.util.Set)>(r0, $r11, r2, r3, $r12) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler: void lambda$0(java.util.Set,java.lang.reflect.Method,java.lang.Object[],java.util.Set)>, class \"()V\")"  1147
"org.springframework.util.Assert.notNull(java.lang.Object,java.lang.String)"  1148
"$r3 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.SqlSessionFactoryBean)>($r2) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.SqlSessionFactoryBean: org.apache.ibatis.session.SqlSessionFactory getObject()>, class \"()V\")"  1149
"$r6.prepareThrowsSQLException(\"INSERT fail\")"  1150
"$r2.setMapperLocations($r1)"  1151
"$r47 = r52.get(\"OPERATION_AT\")"  1152
"$r8 = org.mybatis.spring.MyBatisSpringTest.txManager"  1153
"$r3 = $r2.openSession($r1)"  1154
"$r17 = new org.springframework.transaction.jta.JtaTransactionManager"  1155
"$r10.getBean($r11)"  1156
"$r24 = (org.assertj.core.api.AbstractIntegerAssert) $r23"  1157
"label1: $r19 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  1158
"label1: $r2 = r0.markerInterface"  1159
"org.junit.jupiter.api.Assertions.assertEquals(\"COMPLETED\", $r7)"  1160
"$r4 = org.mockito.Mockito.when($r3)"  1161
"label2: $z1 = r26.hasNext()"  1162
"$r11 = class \"Lorg/mybatis/spring/mapper/child/MapperChildInterface;\""  1163
"org.mybatis.spring.type.DummyMapperFactoryBean.<clinit>()"  1164
"$r3 = r0.pagingNestedItemReader"  1165
"$r8 = r0.maxItemCount"  1166
"org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanName()"  1167
"org.mybatis.spring.config.NamespaceTest.testMarkerInterfaceAndAnnotationScan()"  1168
"$r33 = org.assertj.core.api.Assertions.assertThat($i4)"  1169
"$r12 = org.mybatis.spring.MyBatisSpringTest.txManager"  1170
"org.mybatis.spring.transaction.SpringTransactionManagerTest.shouldManageWithNoTx()"  1171
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/springframework/dao/TransientDataAccessResourceException;\", $r6)"  1172
"specialinvoke r0.assertConfig($r3, \"\", class \"Lorg/mybatis/spring/transaction/SpringManagedTransactionFactory;\")"  1173
"i5 = 0"  1174
"org.mybatis.spring.batch.MyBatisPagingItemReader.setParameterValues(java.util.Map)"  1175
"org.mybatis.spring.sample.dao.UserDaoImpl.getSqlSession()"  1176
"r50 = (java.util.Map) $r27"  1177
"$r18 = r48.get(\"LAST_NAME\")"  1178
"$r2 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.support.SqlSessionDaoSupport)>($r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.springframework.dao.support.DaoSupport: void afterPropertiesSet()>, class \"()V\")"  1179
"$r1.clearCache()"  1180
"$r14.setEnvironment($r11)"  1181
"$i3 = $i2 + 1"  1182
"$i1 = r0.getPageSize()"  1183
"$r17.commit(r6)"  1184
"org.mockito.MockitoAnnotations.initMocks(java.lang.Object)"  1185
"$r4.getBean(\"annotatedMapper\")"  1186
"org.mybatis.spring.transaction.SpringManagedTransaction.rollback()"  1187
"$r34 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  1188
"org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(java.io.InputStream,org.apache.ibatis.session.Configuration,java.lang.String,java.util.Map)"  1189
"label2: $z0 = 1"  1190
"org.springframework.util.Assert.notNull(r1, \"Property \'sqlSessionFactory\' is required\")"  1191
"org.springframework.context.ConfigurableApplicationContext.getBeanFactory()"  1192
"org.mybatis.spring.SqlSessionFactoryBean.lambda$5(org.apache.ibatis.type.TypeHandler)"  1193
"$r4 = newarray (org.springframework.core.io.Resource)[1]"  1194
"$r10 = org.mybatis.spring.MyBatisSpringTest.txManager"  1195
"return \"batch_xml_config_user\""  1196
"$r16 = r0.sqlSession"  1197
"r2 = specialinvoke r0.getFoos()"  1198
"r2 = java.util.Collections.singletonList($r8)"  1199
"r25 = r1.getAttribute(\"base-package\")"  1200
"$r6 = java.time.Clock.fixed($r4, $r5)"  1201
"org.mybatis.spring.MyBatisSpringTest.testMyBatisAPI()"  1202
"r1 = $r6.getObjectFactory()"  1203
"$r63 = (org.assertj.core.api.AbstractIntegerAssert) $r62"  1204
"$r13 = (org.apache.ibatis.session.SqlSession) $r12"  1205
"org.mybatis.spring.sample.AbstractSampleTest.<init>()"  1206
"if $r76 == null goto label04"  1207
"r0.environment = r1"  1208
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.lambda$0(java.util.List)"  1209
"$r1 = r0.sqlSessionFactory"  1210
"$r9 = (org.springframework.transaction.support.TransactionSynchronization) $r8"  1211
"$r5 = $r4.build()"  1212
"$i2 = $r35.getNumberCommits()"  1213
"$r22 = r0.sqlSessionTemplate"  1214
"org.mybatis.spring.sample.domain.User.toString()"  1215
"org.junit.jupiter.api.Assertions.assertNull($r18)"  1216
"$r3 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1217
"$r31 = $r29.as(\"should not call rollback on Connection 1\", $r30)"  1218
"$r16 = $r15.getDataSource()"  1219
"$r14 = r2.get(0)"  1220
"r0.connection = null"  1221
"$r61 = r0.typeAliasesPackage"  1222
"$r3 = r0.getClassMetadata()"  1223
"java.util.concurrent.CopyOnWriteArrayList.<init>()"  1224
"$r4.registerBeanDefinition(\"sqlSessionFactory\", $r5)"  1225
"org.junit.jupiter.api.function.Executable.execute(org.mybatis.spring.support.SqlSessionDaoSupportTest)"  1226
"$r28 = $r27.selectList(\"selectFoo\", $r18)"  1227
"return $z0"  1228
"$r13 = $r12.build()"  1229
"return $r5"  1230
"$r13 = org.mybatis.spring.SqlSessionUtils.LOGGER"  1231
"$r27 = r2.get(2)"  1232
"$r10.setEnvironment($r6)"  1233
"$r26 = new org.springframework.batch.item.ExecutionContext"  1234
"$r10 = specialinvoke r0.getFoos()"  1235
"$r1 = class \"Lorg/apache/ibatis/session/SqlSessionFactory;\""  1236
"$r14 = r0.session"  1237
"org.apache.ibatis.session.SqlSession.getMapper(java.lang.Class)"  1238
"org.mybatis.spring.SqlSessionTemplateTest.testWithTxRequired()"  1239
"$r17 = (java.lang.Throwable) $r16"  1240
"$r3 = $r2.append(\"]\")"  1241
"$r1 = new org.mybatis.logging.Logger"  1242
"r1 = $r7.getTypeHandlerRegistry()"  1243
"$r8 = $r7.append($i1)"  1244
"$r30 = $r28.collect($r29)"  1245
"$r7 = $r6.getBean(\"mapperInterface\")"  1246
"$r16 = r48.get(\"PERSON_ID\")"  1247
"$r2 = r0.userMapperMaster"  1248
"$r13 = org.mybatis.spring.MyBatisSpringTest.txManager"  1249
"r0.addToConfig = 1"  1250
"$z0 = $r30.isCacheEnabled()"  1251
"r1 = $r5.getConfiguration()"  1252
"$r41 = $r40.getConfiguration()"  1253
"org.mybatis.spring.AbstractMyBatisSpringTest.exceptionTranslator = $r7"  1254
"label4: i0 = r29[i6]"  1255
"return"  1256
"$r9.isNull()"  1257
"$r7.registerBeanDefinition(r1, $r3)"  1258
"r1 = $r8.getEnvironment()"  1259
"org.apache.ibatis.executor.ErrorContext.reset()"  1260
"$r2 = r0.sqlSessionFactory"  1261
"org.mybatis.spring.SqlSessionTemplate.selectOne(java.lang.String, java.lang.Object)"  1262
"specialinvoke $r16.<init>(null, null)"  1263
"$r21.update(\"updateFoo\", $r22)"  1264
"$z0 = $r7.equals($r8)"  1265
"label2: return $r2"  1266
"$r20.close()"  1267
"org.junit.jupiter.api.Assertions.assertEquals(r3, $r39)"  1268
"$r6 = (org.mybatis.spring.SqlSessionTemplate) $r5"  1269
"$r12 = new org.springframework.dao.EmptyResultDataAccessException"  1270
"org.mybatis.spring.SqlSessionFactoryBean.setVfs(java.lang.Class)"  1271
"$r10.put(\"item\", $r16)"  1272
"specialinvoke r0.assertConfig($r3, class \"Lorg/mybatis/spring/transaction/SpringManagedTransactionFactory;\")"  1273
"r1.update($r11)"  1274
"org.mybatis.spring.MyBatisSpringTest.testSpringAPIWithCommit()"  1275
"$r9 = org.mybatis.spring.mapper.MapperFactoryBeanTest.dataSource"  1276
"org.mybatis.spring.sample.AbstractSampleJobTest$LocalContext.<init>()"  1277
"$r11 = (org.mybatis.spring.TestMapper) $r10"  1278
"i6 = 0"  1279
"org.mybatis.spring.sample.domain.User.setId(java.lang.String)"  1280
"org.mybatis.spring.annotation.MapperScanTest.testAnnotationScan()"  1281
"$r2 = r0.sqlSessionDaoSupport"  1282
"$r17 = r0.parameterValues"  1283
"$r49.isEqualTo(0)"  1284
"$r2 = new org.apache.ibatis.cache.impl.PerpetualCache"  1285
"r0.typeAliasesSuperType = r1"  1286
"org.mybatis.spring.SqlSessionUtils.closeSqlSession(r28, $r24)"  1287
"org.mybatis.spring.sample.SampleBatchTest.<init>()"  1288
"$r44 = org.mockito.Mockito.verify($r43)"  1289
"$r6 = r0.markerInterface"  1290
"$r14 = $r13.openSession($r12)"  1291
"r0.applicationContext = $r1"  1292
"org.mybatis.spring.SqlSessionFactoryBean.setTypeAliases(java.lang.Class[])"  1293
"$r3.setAddToConfig($z0)"  1294
"$r18.put(\"_pagesize\", $r23)"  1295
"r25 = null"  1296
"r0.resolveAlias(\"testAlias\")"  1297
"r101.setObjectFactory($r69)"  1298
"label1: $r2 = r0.connection"  1299
"$r14 = java.lang.Boolean.valueOf($z0)"  1300
"r0.commitCount = 0"  1301
"$r9.isEqualTo(\"Property \'configuration\' and \'configLocation\' can not specified with together\")"  1302
"$r3.getBean(\"mapperInterface\")"  1303
"label2: $r11 := @caughtexception"  1304
"$r9 = org.assertj.core.api.Assertions.assertThat($r8)"  1305
"$i1 = $r3.size()"  1306
"r0.sqlSessionFactoryBuilder = r1"  1307
"$r11 = r0.applicationContext"  1308
"specialinvoke $r5.<init>(\"cannot call Connection.isClosed() \")"  1309
"specialinvoke r0.assertDefaultConfig($r3)"  1310
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.<init>()"  1311
"$r14.removePropertyValue(\"configLocation\")"  1312
"org.mybatis.spring.SqlSessionFactoryBean.lambda$1(java.lang.String)"  1313
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.maxItemCount(int)"  1314
"$r2.setMapperLocations($r4)"  1315
"org.springframework.context.annotation.AnnotationConfigApplicationContext.getBean(java.lang.String)"  1316
"org.mybatis.spring.mapper.ClassPathMapperScanner.setResourceLoader(org.springframework.core.io.ResourceLoader)"  1317
"if r28 == null goto label7"  1318
"org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy.getTargetDataSource()"  1319
"$r17.isEqualTo(\"sa\")"  1320
"$r7[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithSqlSessionTemplate;\""  1321
"$r25 = (org.mybatis.spring.TestMapper) $r24"  1322
"$r4 = $r2.as(\"should not call commit on SqlSession\", $r3)"  1323
"org.mybatis.logging.Logger.<init>(org.apache.ibatis.logging.Log)"  1324
"$r24.isSameAs(class \"Lorg/mybatis/spring/transaction/SpringManagedTransactionFactory;\")"  1325
"org.springframework.context.support.ClassPathXmlApplicationContext.close()"  1326
"label1: $z0 = 0"  1327
"label5: $r8 = org.apache.ibatis.executor.ErrorContext.instance()"  1328
"$i0 = $r11.getNumberCommits()"  1329
"$r28 = org.mybatis.spring.MyBatisSpringTest.txManager"  1330
"$r61 = newarray (java.lang.Object)[0]"  1331
"$r1 = new org.springframework.jdbc.datasource.DataSourceTransactionManager"  1332
"$r5 = specialinvoke r0.getCustomSessionFactoryForClass()"  1333
"$r33 = java.util.Arrays.stream($r32)"  1334
"org.mybatis.spring.SqlSessionHolder.<init>(org.apache.ibatis.session.SqlSession, org.apache.ibatis.session.ExecutorType, org.springframework.dao.support.PersistenceExceptionTranslator)"  1335
"r0.addToConfig = z0"  1336
"org.junit.jupiter.api.Assertions.assertThrows(class \"Ljava/lang/IllegalArgumentException;\", $r4)"  1337
"$i0 = $r40.size()"  1338
"$r22[0] = $r23"  1339
"$r15 = r0.session"  1340
"org.mybatis.spring.transaction.SpringManagedTransaction.lambda$2()"  1341
"$r3 = new org.mybatis.spring.transaction.SpringManagedTransaction"  1342
"org.junit.jupiter.api.Assertions.assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable)"  1343
"$r11.isEqualTo(20000)"  1344
"$r48.setEnvironment(r1)"  1345
"org.junit.jupiter.api.Assertions.assertNotNull(r4)"  1346
"org.springframework.context.annotation.AnnotationConfigApplicationContext.close()"  1347
"i0 = lengthof r103"  1348
"$r2.setEnvironment($r3)"  1349
"$r73 = org.mybatis.spring.MyBatisSpringTest.dataSource"  1350
"$r14 = org.mybatis.spring.MyBatisSpringTest.exceptionTranslator"  1351
"r0.registerBeanDefinitionParser(\"scan\", $r1)"  1352
"$i1 = r6.getNumberRollbacks()"  1353
"r6 = null"  1354
"org.mybatis.spring.batch.MyBatisBatchItemWriter.<init>()"  1355
"$r12 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1356
"goto label23"  1357
"org.springframework.util.Assert.notNull($r2, \"A queryId is required.\")"  1358
"if $r2 != null goto label1"  1359
"$r5 = $r3.newTransaction($r4, null, 0)"  1360
"r2 := @parameter2"  1361
"$r18 = $r16.getName()"  1362
"r0.annotationClass = r1"  1363
"$r54 = r0.plugins"  1364
"$r4 = r1.get()"  1365
"specialinvoke $r2.<init>(null)"  1366
"return r8"  1367
"if $r16 == null goto label29"  1368
"org.mybatis.spring.submitted.xa.UserServiceImpl.saveWithNoFailure(org.mybatis.spring.submitted.xa.User)"  1369
"$r3 = r0.pagingNoNestedItemReader"  1370
"org.mybatis.spring.SqlSessionFactoryBean.lambda$0()"  1371
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.parameterValues(java.util.Map)"  1372
"$i0 = $r6.intValue()"  1373
"specialinvoke r0.assertConfig(r1, $r4, r2)"  1374
"java.lang.StringBuilder.toString()"  1375
"$r4.thenReturn($r5)"  1376
"if $z2 != 0 goto label1"  1377
"r6 = $r17.getTransaction($r19)"  1378
"org.mybatis.spring.batch.MyBatisCursorItemReader.doOpen()"  1379
"if $r1 == null goto label1"  1380
"$r12 = $r11.iterator()"  1381
"$r41.close()"  1382
"org.mybatis.spring.mapper.MapperImplementation.method()"  1383
"$r22 = $r9.getConnection()"  1384
"$r10 = r2.getConstructorArgumentValues()"  1385
"specialinvoke $r12.<init>(\"non-spring\", $r13, $r10)"  1386
"$r7 = r0.sqlSession"  1387
"$r15 = (java.lang.Integer) $r14"  1388
"org.mybatis.spring.SqlSessionHolder.getSqlSession()"  1389
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.testZeroBatchResultShouldThrowException()"  1390
"$i2 = r0.commitCount"  1391
"$r3 = org.assertj.core.api.Assertions.assertThat($z0)"  1392
"specialinvoke $r7.<init>($r8)"  1393
"label6: $r15 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  1394
"$r16 = new org.apache.ibatis.executor.BatchResult"  1395
"$r3 = $r2.selectOne(\"org.mybatis.spring.sample.mapper.UserMapper.getUser\", r1)"  1396
"$r2 = new org.mybatis.spring.submitted.xa.User"  1397
"$r51 = (org.assertj.core.api.AbstractIntegerAssert) $r50"  1398
"org.junit.jupiter.api.Assertions.assertEquals(r3, $r25)"  1399
"org.mybatis.spring.SqlSessionTemplate.rollback()"  1400
"$i0 = $r11.getInt(\"MyBatisPagingItemReader.read.count.max\")"  1401
"$r32 = org.mockito.Mockito.verify($r31)"  1402
"$r8.registerFilters()"  1403
"specialinvoke $r7.<init>(\"beanNameGenerator\")"  1404
"$r38 = org.assertj.core.api.Assertions.assertThat($r37)"  1405
"$r9 = org.apache.ibatis.session.ExecutorType.BATCH"  1406
"$i1 = $i0 + 1"  1407
"org.mybatis.spring.sample.config.SampleConfig.userMapperWithFactory()"  1408
"$r21 = r0.this$0"  1409
"$r9.close()"  1410
"$r28 = $r11.getConnection()"  1411
"org.springframework.util.Assert.notNull(r1, \"No ExecutorType specified\")"  1412
"$r25 = (org.assertj.core.api.AbstractIntegerAssert) $r24"  1413
"$r1 = r17.getCause()"  1414
"org.mybatis.spring.MyBatisSpringTest.testWithTxSupports()"  1415
"$r14 = $r12.as(\"should not call commit on Connection\", $r13)"  1416
"r27 = (java.lang.Object) $r4"  1417
"specialinvoke $r1.<init>(\"Scanned package: \'\")"  1418
"$r11 = $r10.iterator()"  1419
"$r2 = org.assertj.core.api.Assertions.assertThat($i0)"  1420
"org.mybatis.spring.AbstractMyBatisSpringTest.createMockConnection()"  1421
"$r3 = $r2.append(\"\' for type handlers\")"  1422
"org.junit.jupiter.api.function.Executable.execute(org.mybatis.spring.mapper.MapperFactoryBeanTest,org.apache.ibatis.session.SqlSessionFactory)"  1423
"org.mybatis.spring.MyBatisSpringTest.lambda$2()"  1424
"org.mybatis.spring.batch.domain.Employee.getSalary()"  1425
"r0.sqlSessionFactory = $r7"  1426
"$r21 = $r20.getEnvironment()"  1427
"org.springframework.util.Assert.notNull(r2, \"ExecutorType must not be null\")"  1428
"$r21.commit(r4)"  1429
"$r1 = r0.userMapperMaster"  1430
"$r25.afterPropertiesSet()"  1431
"$r2 = org.assertj.core.api.Assertions.assertThat($r1)"  1432
"label28: $r16 = r0.cache"  1433
"org.mybatis.spring.SqlSessionUtils.lambda$4(org.mybatis.spring.SqlSessionHolder)"  1434
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSpecifyConfigurationPropertiesOnly()"  1435
"$r10.rollback(r15)"  1436
"org.mybatis.spring.config.NamespaceTest.testNameGenerator()"  1437
"$r4 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  1438
"r23 = (org.mybatis.spring.batch.domain.Employee) $r8"  1439
"r0.exceptionTranslator = $r2"  1440
"$r31 = (java.util.Collection) $r30"  1441
"$r41 = r2.get(4)"  1442
"$r4 = $r2.getObject()"  1443
"$r28 = newarray (java.lang.Object)[0]"  1444
"$r12 = (java.lang.Integer) $r11"  1445
"label4: $r10 = r0.connection"  1446
"java.util.function.Supplier.get()"  1447
"$r19 = (org.apache.ibatis.session.SqlSession) $r18"  1448
"label1: $r2 = r17.getCause()"  1449
"$r39 = org.assertj.core.api.Assertions.assertThat($r38)"  1450
"label2: $z2 = r4.hasNext()"  1451
"$r25 = $r24.getVariables()"  1452
"org.junit.jupiter.api.Assertions.assertEquals(r4, $r33)"  1453
"$r36 = org.assertj.core.api.Assertions.assertThat($i2)"  1454
"$r4 = new org.springframework.context.support.GenericApplicationContext"  1455
"$r3 = r0.writer"  1456
"$r16 = $r15.next()"  1457
"$r40 = org.assertj.core.api.Assertions.assertThat($i3)"  1458
"org.mybatis.spring.transaction.SpringManagedTransaction.<init>(javax.sql.DataSource)"  1459
"throw $r24"  1460
"label1: $r13 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  1461
"goto label43"  1462
"label2: $r9 := @caughtexception"  1463
"$r16 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.session.SqlSession)>(r3) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$1(org.apache.ibatis.session.SqlSession)>, class \"()Ljava/lang/String;\")"  1464
"$r8 = org.assertj.core.api.Assertions.assertThat($r7)"  1465
"$r17.put(\"configLocationProperty\", \"classpath:org/mybatis/spring/mybatis-config.xml\")"  1466
"label5: $r20 = r0.cursorNoNestedItemReader"  1467
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.suspend()"  1468
"org.mybatis.spring.sample.service.FooService.doSomeBusinessStuff(java.lang.String)"  1469
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSearchATypeHandlerPackage()"  1470
"label3: $r34 = r0.session"  1471
"$r8 = org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER"  1472
"$r23 = new java.lang.RuntimeException"  1473
"r0.mapperFactoryBean = $r2"  1474
"$r1 = new org.mybatis.spring.ExecutorInterceptor"  1475
"label2: $r20 := @caughtexception"  1476
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$5()"  1477
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.testConfigurationUsingSqlSessionFactory()"  1478
"$r22 = r0.cursorNestedItemReader"  1479
"$r2 = newarray (java.lang.Class)[1]"  1480
"$r42 = java.lang.Integer.valueOf(4)"  1481
"$r36.hasCause($r37)"  1482
"$r12 = org.mybatis.spring.SqlSessionTemplate.access$2($r11)"  1483
"r0.afterPropertiesSet()"  1484
"if $r4 == null goto label2"  1485
"org.mybatis.spring.batch.MyBatisCursorItemReader.afterPropertiesSet()"  1486
"$r13 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1487
"$r17 = org.assertj.core.api.Assertions.assertThat($i0)"  1488
"$r23 = org.assertj.core.api.Assertions.assertThat($i2)"  1489
"$r6 = r0.saveState"  1490
"$r20.setBeanClass(class \"Lorg/springframework/beans/factory/config/PropertyPlaceholderConfigurer;\")"  1491
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest.testConfigurationSaveStateIsFalse()"  1492
"java.lang.Object.<init>()"  1493
"$i0 = $r1.getCommitCount()"  1494
"r0.assertNoCommit()"  1495
"org.mybatis.spring.SqlSessionFactoryBean.lambda$7(org.springframework.core.io.Resource)"  1496
"label3: $r8 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  1497
"$r12 = r0.queryId"  1498
"$r5 = new org.mybatis.spring.batch.domain.Employee"  1499
"$r2 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.apache.ibatis.session.SqlSession)>($r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.apache.ibatis.session.SqlSession: void close()>, class \"()V\")"  1500
"r0.userMapper = r1"  1501
"$r1.setMapperLocations(null)"  1502
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testScanWithExplicitSqlSessionFactory()"  1503
"org.mybatis.spring.mapper.MapperFactoryBean.<init>()"  1504
"org.mockito.BDDMockito$BDDMyOngoingStubbing.willReturn(java.lang.Object)"  1505
"$r17 = r0.connection"  1506
"$r1 = r0.jobBuilderFactory"  1507
"r101.setEnvironment($r18)"  1508
"r0.addIncludeFilter($r5)"  1509
"org.springframework.context.annotation.ClassPathBeanDefinitionScanner.<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)"  1510
"org.mybatis.spring.SqlSessionTemplate.flushStatements()"  1511
"$r47 = r0.connectionTwo"  1512
"$z0 = r0.holderActive"  1513
"$r44 = (org.springframework.beans.factory.support.BeanNameGenerator) $r43"  1514
"$r7.prepareResultSet(\"SELECT 1\", $r3)"  1515
"$r16 = r2.get(0)"  1516
"$r1 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionFactory"  1517
"java.util.Properties.<init>()"  1518
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testAddToConfigTrue()"  1519
"label44: if i11 < i10 goto label37"  1520
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.afterCompletion(int)"  1521
"$r7.isEqualTo(\"test-cache\")"  1522
"$r17.put(\"basePackageProperty\", \"org.mybatis.spring.mapper\")"  1523
"org.mybatis.spring.submitted.xa.User.<init>(java.lang.Integer, java.lang.String)"  1524
"label1: $r4 = new org.mybatis.spring.sample.domain.Person"  1525
"java.util.Arrays.asList(java.lang.Object[])"  1526
"org.mybatis.spring.SqlSessionFactoryBean.lambda$2(java.lang.Class)"  1527
"r1 = $r9.build()"  1528
"specialinvoke $r1.<init>(\"firstName: \")"  1529
"label1: $r4 = r0.configuration"  1530
"$r5 = r1.getClass()"  1531
"label2: org.springframework.util.Assert.isTrue($z0, \"SqlSessionTemplate\'s executor type must be BATCH\")"  1532
"$r21 = r1.getConfiguration()"  1533
"$r42 = newarray (java.lang.Object)[0]"  1534
"$z0 = r1.isSynchronizedWithTransaction()"  1535
"$r10 = $r8.as(\"should call commit on Connection\", $r9)"  1536
"label3: $z1 = r4 instanceof org.springframework.beans.factory.config.TypedStringValue"  1537
"$i2 = $r22.getNumberCommits()"  1538
"if $r2 == null goto label02"  1539
"$r4 = java.lang.Integer.valueOf(2)"  1540
"r0.sqlSessionFactoryBuilder = $r1"  1541
"$r9 = r0.session"  1542
"$i1 = r7.getNumberCommits()"  1543
"$r19 = org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER"  1544
"$r11.isEqualTo($r2)"  1545
"org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectWrapperFactory.<init>()"  1546
"r2 = specialinvoke r0.doScan(r1)"  1547
"$r20.update(\"updateFoo\", $r10)"  1548
"$r12 = java.time.ZoneId.systemDefault()"  1549
"$r1 = newarray (org.springframework.core.io.Resource)[1]"  1550
"$r6 = new org.mybatis.spring.batch.domain.Employee"  1551
"org.mybatis.spring.sample.domain.Person.getLastName()"  1552
"$r1 = r0.factoryBean"  1553
"$r5 = new java.lang.StringBuilder"  1554
"$r42 = (org.mybatis.spring.mapper.MapperFactoryBean) $r41"  1555
"$r4 = org.apache.ibatis.session.ExecutorType.SIMPLE"  1556
"$r2 = r0.userMapper"  1557
"org.mybatis.spring.support.SqlSessionDaoSupportTest.setupContext()"  1558
"$r6.removePropertyValue(\"basePackage\")"  1559
"$r10 = $r2.toString()"  1560
"$r3.registerBeanDefinition(\"mapperInterface\", $r2)"  1561
"specialinvoke $r3.<init>($r6, 1)"  1562
"$r3.debug($r5)"  1563
"label2: r5 = r1.getClass(\"markerInterface\")"  1564
"$r2 = $r1.flushStatements()"  1565
"$r8 = r0.holder"  1566
"org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection($r2, $r1)"  1567
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.testItemToParameterConverterIsNull()"  1568
"$r15 = org.assertj.core.api.Assertions.assertThat($i1)"  1569
"$r21 = $r20.toString()"  1570
"$r17 = r0.sqlSession"  1571
"r0.maxItemCount = $r1"  1572
"$r4 = $r3.addScript(\"org/mybatis/spring/sample/db/database-schema.sql\")"  1573
"label1: $r3 = r0.userMapperSlave"  1574
"$r31 = org.assertj.core.api.Assertions.assertThat($z0)"  1575
"$r10.put(\"now\", $r14)"  1576
"label4: r7 = r1.getClass(\"factoryBean\")"  1577
"$r6 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r5)"  1578
"$r17 = new java.util.ArrayList"  1579
"i2 = lengthof $r57"  1580
"$r17 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1581
"label1: $r10 = r5.getDataSource()"  1582
"specialinvoke $r7.<init>($r10)"  1583
"java.lang.UnsupportedOperationException.<init>(java.lang.String)"  1584
"$r4[1] = $r6"  1585
"org.mybatis.spring.PooledMockDataSource.getConnection()"  1586
"$r6 = r0.factoryBean"  1587
"org.springframework.beans.factory.annotation.AnnotatedBeanDefinition.getMetadata()"  1588
"$r34 = dynamicinvoke \"apply\" <java.util.function.Function ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)Ljava/lang/Object;\", handle: <org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.Class)>, class \"(Ljava/lang/Class;)Ljava/lang/String;\")"  1589
"$z2 = r0.assertUpdates"  1590
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.setUp()"  1591
"if r2 == null goto label4"  1592
"label36: $r18 = new org.apache.ibatis.mapping.Environment"  1593
"$r15 = org.assertj.core.api.Assertions.assertThat($z0)"  1594
"$r5 = java.lang.reflect.Proxy.newProxyInstance($r2, $r3, $r4)"  1595
"org.springframework.transaction.support.DefaultTransactionDefinition.<init>()"  1596
"$r13 = java.time.Clock.fixed($r11, $r12)"  1597
"org.springframework.util.Assert.notNull($r1, \"Property \'dataSource\' is required\")"  1598
"org.junit.jupiter.api.Assertions.assertEquals(r4, $r40)"  1599
"$r11.willReturn(r3)"  1600
"$r4 = $r3.append(\"\' and \'\")"  1601
"org.springframework.batch.item.ExecutionContext.<init>()"  1602
"org.mybatis.spring.SqlSessionFactoryBean.setTransactionFactory(org.apache.ibatis.transaction.TransactionFactory)"  1603
"$r24 = r49.get(\"LAST_NAME\")"  1604
"org.mybatis.spring.SqlSessionTemplate.update(java.lang.String, java.lang.Object)"  1605
"$r11.getBean(\"mapperSubinterface\")"  1606
"org.springframework.util.Assert.notNull(r0, \"No SqlSession specified\")"  1607
"$r58.registerAlias(r108)"  1608
"$r4.saveWithNoFailure($r2)"  1609
"org.junit.jupiter.api.Assertions.fail(java.lang.String)"  1610
"$r9.setBeanNameGenerator($r44)"  1611
"$r19 = java.util.Arrays.stream($r18)"  1612
"org.apache.ibatis.session.Configuration.getVariables()"  1613
"$r0 = new org.mybatis.spring.SqlSessionTemplate"  1614
"r1.afterPropertiesSet()"  1615
"$r8 = java.lang.reflect.Proxy.newProxyInstance($r5, $r6, $r7)"  1616
"org.mybatis.spring.MyBatisSpringTest.setupBatchStatements()"  1617
"r0.assertSingleConnection()"  1618
"$r9 = org.assertj.core.api.Assertions.assertThat($z0)"  1619
"$r12 = (org.assertj.core.api.ObjectAssert) $r10"  1620
"$r2.setTypeHandlersPackage(\"org/mybatis/spring/type\")"  1621
"org.mybatis.spring.mapper.MapperScannerConfigurer.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  1622
"$r7 = r2.getConfiguration()"  1623
"$r9 = new com.mockrunner.mock.jdbc.MockDataSource"  1624
"$r1 = r0.sqlSessionDaoSupport"  1625
"r2 = java.util.Collections.singletonList($r5)"  1626
"$r6 = $r2.getObject()"  1627
"org.mybatis.spring.mapper.MapperFactoryBean.getSqlSession()"  1628
"org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()"  1629
"org.mybatis.spring.SqlSessionFactoryBean.getCache()"  1630
"$r32.add(\"sqlSessionFactory\", $r33)"  1631
"org.mybatis.spring.SqlSessionUtils.lambda$5(org.apache.ibatis.session.SqlSession)"  1632
"goto label2"  1633
"$i0 = $r5.size()"  1634
"if $z0 == 0 goto label4"  1635
"$r7 = new org.springframework.beans.factory.config.RuntimeBeanReference"  1636
"r28.commit(1)"  1637
"$r9 = r0.sqlSessionTemplate"  1638
"$r9 = r0.sqlSessionTemplateBeanName"  1639
"$r25.findTest()"  1640
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r27, $r26)"  1641
"$r0 = org.mybatis.logging.LoggerFactory.getLogger(class \"Lorg/mybatis/spring/mapper/ClassPathMapperScanner;\")"  1642
"org.mybatis.spring.batch.domain.Employee.setSkills(java.util.List)"  1643
"$r20 = $r19.append(\"]\")"  1644
"$r5.saveWithNoFailure($r3)"  1645
"$z0 = specialinvoke r0.checkCandidate(r1, r2)"  1646
"$r4.getBean($r5)"  1647
"$r2 = r0.getBeanName()"  1648
"$r8 = r1.getMessage()"  1649
"$r2 = $r1.getExecutorType()"  1650
"return \"Property \'mapperLocations\' was not specified or no matching resources found\""  1651
"label7: if z2 != 0 goto label8"  1652
"org.springframework.core.type.AnnotationMetadata.isIndependent()"  1653
"$r0 = org.mybatis.logging.LoggerFactory.getLogger(class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\")"  1654
"org.mybatis.spring.batch.SpringBatchTest.checkCursorReadingWithoutNestedInResultMap()"  1655
"org.mybatis.spring.MyBatisSpringTest.testNonSpringTxFactoryNonSpringDSWithTx()"  1656
"$r5 = new java.sql.SQLException"  1657
"$r4 = $r3.queryId(\"org.mybatis.spring.sample.mapper.UserMapper.getUsers\")"  1658
"$r6 = $r5.openSession($r4)"  1659
"$r14 = r32.getPropertyValues()"  1660
"$r32.isTrue()"  1661
"$r2 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$0()>, class \"()Ljava/lang/String;\")"  1662
"$r21.isFalse()"  1663
"$r26 = org.mybatis.spring.MyBatisSpringTest.txManager"  1664
"label03: $r4 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  1665
"$r58 = r101.getTypeAliasRegistry()"  1666
"$r2.setStatementId($r5)"  1667
"org.mybatis.spring.SqlSessionFactoryBeanTest.testEmptyMapperLocations()"  1668
"org.mybatis.spring.SqlSessionTemplate.<init>(org.apache.ibatis.session.SqlSessionFactory, org.apache.ibatis.session.ExecutorType)"  1669
"r1 = $r2.getDefaultExecutorType()"  1670
"specialinvoke $r1.<init>()"  1671
"org.mybatis.spring.type.DummyMapperFactoryBean.LOGGER = $r0"  1672
"org.mybatis.spring.SqlSessionFactoryBeanTest.testAddATypeHandler()"  1673
"$z2 = $r2 instanceof java.sql.SQLException"  1674
"$r17 = (org.assertj.core.api.AbstractBooleanAssert) $r16"  1675
"$r65 = org.mybatis.spring.MyBatisSpringTest.executorInterceptor"  1676
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testScanWithPropertyPlaceholders()"  1677
"org.mybatis.spring.MyBatisSpringTest.lambda$1()"  1678
"$r1 = newarray (java.lang.Object)[3]"  1679
"label31: goto label34"  1680
"$z1 = r1 instanceof org.springframework.context.event.ContextRefreshedEvent"  1681
"$r27 = r0.sqlSession"  1682
"$r9 = r0.context"  1683
"$r4 = $r3.statementId(\"org.mybatis.spring.sample.mapper.PersonMapper.createPerson\")"  1684
"$r18.getBean($r19)"  1685
"$r4 = $r3.append(\"] from current transaction\")"  1686
"$r4 = $r3.selectMap(r1, r2)"  1687
"return 0"  1688
"org.mybatis.spring.MyBatisSpringTest.testBatchWithError()"  1689
"if $r10 == null goto label1"  1690
"$r26 = $r25.getResultMapNames()"  1691
"$r29.isFalse()"  1692
"org.apache.ibatis.session.SqlSession.clearCache()"  1693
"if $r3 != null goto label1"  1694
"$r3 = $r2.append(\"\'\")"  1695
"$r14 = specialinvoke r0.getFoos()"  1696
"org.mybatis.spring.mapper.MapperFactoryBean.setAddToConfig(boolean)"  1697
"$r18.put(\"_skiprows\", $r25)"  1698
"$r26.isEqualTo(1)"  1699
"r0.factoryBean = $r1"  1700
"$r2[0] = \"org/mybatis/spring/config/name-generator.xml\""  1701
"org.assertj.core.api.AbstractIntegerAssert.isEqualTo(int)"  1702
"$r3 = new org.mybatis.spring.submitted.xa.User"  1703
"r2 = org.assertj.core.util.Lists.emptyList()"  1704
"$r54 = org.assertj.core.api.Assertions.assertThat($i5)"  1705
"$r4.put(\"operationBy\", r0)"  1706
"$r12.put(\"_skiprows\", $r19)"  1707
"$r4 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo"  1708
"label3: $r4 = new org.mybatis.spring.MyBatisSystemException"  1709
"$r45 = org.assertj.core.api.Assertions.assertThat($i1)"  1710
"org.mybatis.spring.mapper.MapperFactoryBeanTest.assertCommit()"  1711
"label3: if r23 != null goto label2"  1712
"$r34 = org.assertj.core.api.Assertions.assertThat($i2)"  1713
"specialinvoke $r15.<init>()"  1714
"$r63 = r0.typeAliasesSuperType"  1715
"$r2 = r0.dataSource"  1716
"$r14 = r0.connection"  1717
"specialinvoke $r5.<init>($r7, $r6)"  1718
"$r31 = r1.getConfiguration()"  1719
"throw $r81"  1720
"$r3 = $r2.selectOne(r1)"  1721
"$r2 = newarray (org.springframework.core.io.Resource)[1]"  1722
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r9, $r8)"  1723
"specialinvoke $r27.<init>($r28)"  1724
"org.mybatis.spring.config.NamespaceTest.assertBeanNotLoaded(java.lang.String)"  1725
"specialinvoke $r7.<init>()"  1726
"throw $r3"  1727
"specialinvoke $r20.<init>()"  1728
"com.mockrunner.jdbc.PreparedStatementResultSetHandler.prepareThrowsSQLException(java.lang.String)"  1729
"org.assertj.core.api.Assertions.assertThat(int)"  1730
"$r21 = (org.assertj.core.api.AbstractBooleanAssert) $r20"  1731
"$r7 = newarray (java.lang.Class)[1]"  1732
"label2: $r37 := @caughtexception"  1733
"$r7 = r0.buildSqlSessionFactory()"  1734
"$z3 = $r3 instanceof org.springframework.transaction.TransactionException"  1735
"$r4 = $r3.toString()"  1736
"$r3.setDatabaseIdProvider(null)"  1737
"$r13 = $r12.getEnvironment()"  1738
"$r4 = dynamicinvoke \"get\" <java.util.function.Supplier (java.lang.String[])>(r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: java.lang.String lambda$2(java.lang.String[])>, class \"()Ljava/lang/String;\")"  1739
"$r1.clear()"  1740
"if r1 == null goto label2"  1741
"$r7 = $r6.toString()"  1742
"org.mybatis.spring.batch.domain.Employee.setId(int)"  1743
"label1: $r4 = org.mybatis.spring.SqlSessionUtils.LOGGER"  1744
"r0.session = $r8"  1745
"$r13 = org.mockito.Mockito.when($r12)"  1746
"$r14 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  1747
"org.mybatis.logging.Logger.error(java.util.function.Supplier, java.lang.Throwable)"  1748
"r0.session = $r21"  1749
"$r23 = r0.sqlSession"  1750
"$r10 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  1751
"$r7 = $r6.append(\", salary=\")"  1752
"$r9.isTrue()"  1753
"$i5 = $r53.getNumberRollbacks()"  1754
"$r20.doClose()"  1755
"org.springframework.beans.factory.support.GenericBeanDefinition.<init>()"  1756
"org.mybatis.spring.mapper.ClassPathMapperScanner$1.<init>(org.mybatis.spring.mapper.ClassPathMapperScanner, java.lang.Class)"  1757
"$r8.isFalse()"  1758
"label2: $r75 := @caughtexception"  1759
"$r4 = r0.dataSource"  1760
"specialinvoke $r1.<init>(\"Registered type alias: \'\")"  1761
"r0.transactionFactory = r1"  1762
"$r4 = new org.springframework.beans.factory.config.ConstructorArgumentValues"  1763
"r101.addInterceptor(r110)"  1764
"r2 = $r3.getClassName()"  1765
"$r43 = r52.get(\"PERSON_ID\")"  1766
"$r19 = $r17.getName()"  1767
"org.mybatis.spring.submitted.webapp_placeholder.WebappPlaceholderTest.testName()"  1768
"$r3.setAssertUpdates(0)"  1769
"$r14 = r3.getConfiguration()"  1770
"$r50 = r0.typeHandlersPackage"  1771
"org.springframework.context.support.GenericApplicationContext.getBean(java.lang.String)"  1772
"r0.assertCommitSession()"  1773
"$r3 = r0.sessionFactory"  1774
"$r22 = org.mybatis.spring.MyBatisSpringTest.txManager"  1775
"$r2.add(r18)"  1776
"label5: $r7 = r0.connection"  1777
"throw $r4"  1778
"$r2.setPageSize($i1)"  1779
"$r36.isEqualTo(0)"  1780
"org.mybatis.spring.MyBatisSpringTest.testBatchInTx()"  1781
"label2: if z0 == 0 goto label3"  1782
"$r32.reset()"  1783
"$r17 = class \"Lorg/mybatis/spring/mapper/child/MapperChildInterface;\""  1784
"org.mybatis.spring.batch.domain.Employee.toString()"  1785
"$r9 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.apache.ibatis.type.TypeAliasRegistry)>(r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.SqlSessionFactoryBeanTest: void lambda$0(org.apache.ibatis.type.TypeAliasRegistry)>, class \"()V\")"  1786
"specialinvoke $r5.<init>(\"unittest\", $r6, $r7)"  1787
"org.apache.ibatis.builder.xml.XMLConfigBuilder.<init>(java.io.InputStream,java.lang.String,java.util.Properties)"  1788
"$r4[0] = $r5"  1789
"org.mybatis.spring.annotation.MapperScannerRegistrar.<init>()"  1790
"r4 = $r13.get(\"OPERATION_AT\")"  1791
"$r30 = (org.assertj.core.api.AbstractIntegerAssert) $r29"  1792
"$r1.getBean(\"mapperInterface\")"  1793
"org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"  1794
"label3: $r39 = r0.sqlSessionTemplateBeanName"  1795
"$r11 = $r10.getVariables()"  1796
"java.lang.RuntimeException.getCause()"  1797
"if $z1 == 0 goto label1"  1798
"$r10 = org.mybatis.spring.SqlSessionTemplate.access$1($r9)"  1799
"specialinvoke $r11.<init>(\"non-spring\", $r12, $r9)"  1800
"$r5.thenReturn($r6)"  1801
"r1.executeFoo()"  1802
"$r15.isSameAs($r16)"  1803
"$r26.isSameAs(class \"Lorg/apache/ibatis/io/JBoss6VFS;\")"  1804
"$r13 = r0.applicationContext"  1805
"$r35 = r0.connection"  1806
"$r7.isEqualTo(r2)"  1807
"$r13 = (java.util.Map) $r12"  1808
"$r4.debug($r5)"  1809
"$r7 = new java.util.Properties"  1810
"label2: if r28 == null goto label3"  1811
"r3 = $r13.getTransaction($r12)"  1812
"specialinvoke $r26.<init>()"  1813
"r0.parameterValues = r1"  1814
"$r13 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.MyBatisSpringTest)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.MyBatisSpringTest: void lambda$0()>, class \"()V\")"  1815
"$r13.debug($r14)"  1816
"org.mybatis.spring.AbstractMyBatisSpringTest.assertNoCommitJdbc()"  1817
"org.apache.ibatis.session.SqlSession.selectCursor(java.lang.String,java.lang.Object)"  1818
"r3 := @parameter2"  1819
"$r4 = org.assertj.core.api.Assertions.assertThat($r3)"  1820
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSearchATypeAliasPackage()"  1821
"$r2 = new org.springframework.beans.factory.support.GenericBeanDefinition"  1822
"label4: return"  1823
"org.mybatis.spring.config.NamespaceTest.testScanWithExplicitSqlSessionTemplate()"  1824
"$r16.isEqualTo($i2)"  1825
"$r15.insertTest(\"test3\")"  1826
"$r5 = r0.itemToParameterConverter"  1827
"$r9 = $r8.getPersistenceExceptionTranslator()"  1828
"$z0 = r17 instanceof org.apache.ibatis.exceptions.PersistenceException"  1829
"r7 = org.mybatis.spring.SqlSessionUtils.sessionHolder(r1, r3)"  1830
"$r2.append(\"}\")"  1831
"label5: $r18 := @caughtexception"  1832
"label1: $r7 = r0.maxItemCount"  1833
"r101.setVariables($r79)"  1834
"specialinvoke $r3.<init>(\"unittest\", $r4, $r5)"  1835
"org.mybatis.spring.ExecutorInterceptor.plugin(java.lang.Object)"  1836
"$r22 = org.mybatis.spring.MyBatisSpringTest.dataSource"  1837
"specialinvoke $r87.<init>(\"Failed getting a databaseId\", $r86)"  1838
"$r3.setPropagationBehaviorName(\"PROPAGATION_REQUIRED\")"  1839
"$r8 = r0.session"  1840
"$r4 = new org.springframework.beans.factory.support.GenericBeanDefinition"  1841
"r0.id = i0"  1842
"org.springframework.util.StringUtils.tokenizeToStringArray(java.lang.String,java.lang.String)"  1843
"org.apache.ibatis.builder.xml.XMLConfigBuilder.getConfiguration()"  1844
"com.mockrunner.mock.jdbc.MockConnection.close()"  1845
"if $r6 == null goto label1"  1846
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithMarkerInterfaceAndAnnotation.<init>()"  1847
"org.mybatis.spring.AbstractMyBatisSpringTest.assertRollback()"  1848
"$r11 = org.springframework.transaction.support.TransactionSynchronizationManager.getResource($r10)"  1849
"$r13 = r0.this$0"  1850
"label1: r1.requested()"  1851
"$r11 = new com.mockrunner.mock.jdbc.MockDataSource"  1852
"org.mybatis.spring.SqlSessionTemplate.selectMap(java.lang.String, java.lang.Object, java.lang.String)"  1853
"$r24 = r1.getConfiguration()"  1854
"$r29 = java.util.stream.Collectors.toList()"  1855
"org.mybatis.spring.sample.SampleSqlSessionTest.testFooService()"  1856
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$1()"  1857
"$r64.debug($r65)"  1858
"r1 = $r10.build()"  1859
"$r11.setupConnection($r12)"  1860
"$r4 = $r2.transactionManager($r3)"  1861
"$r10.put(\"username\", \"dev\")"  1862
"java.util.LinkedList.clear()"  1863
"org.mybatis.spring.SqlSessionFactoryBean.lambda$8()"  1864
"org.springframework.transaction.support.TransactionSynchronizationManager.bindResource($r4, $r3)"  1865
"r1 = java.util.Arrays.asList($r3)"  1866
"$r15.rollback(r22)"  1867
"java.util.LinkedList.add(java.lang.Object)"  1868
"label3: return"  1869
"label1: r17 = r1.getAttribute(\"annotation\")"  1870
"org.mybatis.spring.submitted.xa.UserServiceTest.testCommit()"  1871
"$r2 = class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\""  1872
"$z0 = $r2.equals($r4)"  1873
"$r6 = r0.userTransaction"  1874
"$r51.isEqualTo(1)"  1875
"org.junit.jupiter.api.Assertions.assertEquals(\"Pocoyo\", $r17)"  1876
"$r2 = new org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo"  1877
"$r32 = $r30.as(\"should call DataSource.getConnection() twice\", $r31)"  1878
"$r21 = class \"Lorg/mybatis/spring/mapper/AnnotatedMapper;\""  1879
"java.lang.StringBuilder.append(java.lang.Object)"  1880
"$r25 = org.mybatis.spring.MyBatisSpringTest.dataSource"  1881
"r0.connectionTwo = $r3"  1882
"org.springframework.beans.factory.xml.NamespaceHandlerSupport.<init>()"  1883
"$r2 = org.mybatis.spring.MyBatisSpringTest.executorInterceptor"  1884
"$r6 = (org.springframework.batch.core.job.builder.FlowJobBuilder) $r5"  1885
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r51, $r50)"  1886
"$r29 = org.apache.ibatis.session.ExecutorType.REUSE"  1887
"if $r22 == null goto label5"  1888
"org.springframework.util.Assert.notNull(r0, \"No SqlSessionFactory specified\")"  1889
"label1: $r12 = org.mybatis.spring.MyBatisSpringTest.txManager"  1890
"$r10 = $r9.getName()"  1891
"$r15 = org.mybatis.spring.SqlSessionUtils.LOGGER"  1892
"$r4 = $r3.selectList(r1, r2)"  1893
"org.mybatis.spring.sample.AbstractSampleTest.testFooService()"  1894
"$r10.addGenericArgumentValue(r5)"  1895
"r4 = $r13.iterator()"  1896
"org.mybatis.spring.sample.SampleNamespaceTest.<init>()"  1897
"$r6 = new org.apache.ibatis.session.Configuration"  1898
"$r7.write($r2)"  1899
"org.mybatis.spring.sample.AbstractSampleJobTest$LocalContext.jobLauncherTestUtils()"  1900
"r0.sqlSessionTemplate = r1"  1901
"$r20 = (org.assertj.core.api.AbstractIntegerAssert) $r19"  1902
"if $z5 != 0 goto label45"  1903
"$r18 = $r11.iterator()"  1904
"$r5 = new org.mybatis.spring.SqlSessionTemplate"  1905
"$r5 = $r4.getVariables()"  1906
"$r7 = $r4.as(\"should have executed %d SQL statements\", $r5)"  1907
"specialinvoke r0.assertBeanNotLoaded(\"annotatedMapper\")"  1908
"$r8.register($r7)"  1909
"$r59.debug($r60)"  1910
"$r3 = new org.springframework.context.support.ClassPathXmlApplicationContext"  1911
"$r1 = r0.databaseIdProvider"  1912
"org.mybatis.spring.mapper.ClassPathMapperScanner$1.matchClassName(java.lang.String)"  1913
"$z0 = r0.isAddToConfig()"  1914
"return r1"  1915
"$r4 = r0.applicationContext"  1916
"org.apache.ibatis.session.Configuration.<init>()"  1917
"label08: r105 = r103[i1]"  1918
"org.springframework.util.Assert.notNull($r4, \"Property \'mapperInterface\' is required\")"  1919
"r2.executeBar()"  1920
"label2: $r23 := @caughtexception"  1921
"$r4 = $r2.append($r3)"  1922
"$r3 = new org.mybatis.spring.type.DummyTypeHandler"  1923
"$r24 = newarray (java.lang.Object)[0]"  1924
"r2.commit()"  1925
"$r17 = org.assertj.core.api.Assertions.assertThat($i1)"  1926
"$r8.isEqualTo(2)"  1927
"$r22 = r1.read()"  1928
"java.util.function.Supplier.get(java.lang.String)"  1929
"label7: return"  1930
"specialinvoke r0.assertConfig(r2, class \"Lorg/mybatis/spring/transaction/SpringManagedTransactionFactory;\")"  1931
"$r2.setMaxItemCount($i0)"  1932
"if $r8 == null goto label3"  1933
"org.mybatis.spring.sample.domain.Person.setFirstName(java.lang.String)"  1934
"$i0 = $r1.getNumberCommits()"  1935
"$r3 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo"  1936
"$r4 = r0.session"  1937
"$r4.rollback()"  1938
"$r17.thenReturn($r18)"  1939
"$r2 = dynamicinvoke \"convert\" <org.springframework.core.convert.converter.Converter (java.lang.String,java.time.LocalDateTime)>(r0, r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)Ljava/lang/Object;\", handle: <org.mybatis.spring.sample.config.SampleJobConfig: java.util.Map lambda$0(java.lang.String,java.time.LocalDateTime,java.lang.Object)>, class \"(Ljava/lang/Object;)Ljava/util/Map;\")"  1940
"$r5 = r0.holder"  1941
"r1 = $r9.getTransaction($r8)"  1942
"org.apache.ibatis.session.Configuration.setEnvironment(org.apache.ibatis.mapping.Environment)"  1943
"org.mybatis.spring.SqlSessionTemplate.update(java.lang.String)"  1944
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/springframework/beans/factory/BeanCreationException;\", $r1)"  1945
"$r27 = $r26.getVfsImpl()"  1946
"return 999"  1947
"if $z0 == 0 goto label1"  1948
"$r10.put(\"item\", $r26)"  1949
"$r26 = $r25.get(\"username\")"  1950
"org.springframework.core.io.ClassPathResource.<init>(java.lang.String)"  1951
"$r4.setBeanClass(class \"Lorg/mybatis/spring/SqlSessionTemplate;\")"  1952
"org.mybatis.spring.config.NamespaceTest.testMarkerInterfaceScan()"  1953
"$r64 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  1954
"$r14 = java.time.LocalDateTime.now($r13)"  1955
"$r5 = new org.springframework.beans.factory.support.GenericBeanDefinition"  1956
"$r4 = \"getConfiguration\""  1957
"$r5 = $r4.addScript(\"org/springframework/batch/core/schema-drop-hsqldb.sql\")"  1958
"$r6.getBean(\"mapperSubinterface\")"  1959
"goto label11"  1960
"$r6 = r1.getExitStatus()"  1961
"specialinvoke $r36.<init>($r37)"  1962
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.testConfigurationSaveStateIsFalse()"  1963
"$r10 = $r9.getConfiguration()"  1964
"r4 = $r10.getClassLoader()"  1965
"$r2 = r0.sqlSessionFactoryBuilder"  1966
"$r23 = org.mybatis.spring.transaction.SpringTransactionManagerTest.txManager"  1967
"java.util.function.Supplier.get(org.apache.ibatis.plugin.Interceptor)"  1968
"$r10 = r0.resourceLoader"  1969
"$r10 = java.lang.Boolean.valueOf(1)"  1970
"$r13 = r0.sqlSessionFactory"  1971
"$r33 = r50.get(\"OPERATION_AT\")"  1972
"$r19 = $r17.as(\"should call DataSource.getConnection() twice\", $r18)"  1973
"org.apache.ibatis.session.Configuration.getEnvironment()"  1974
"r0 := @parameter0"  1975
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testNonSpringTxMgrWithTx()"  1976
"if $r10 != null goto label2"  1977
"$r34 = $r33.getSqlFragments()"  1978
"$z3 = org.springframework.util.StringUtils.hasLength($r13)"  1979
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithSqlSessionFactory;\""  1980
"java.lang.Boolean.booleanValue()"  1981
"org.mybatis.spring.SqlSessionUtils.closeSqlSession(r28, $r16)"  1982
"$r6 = r0.applicationContext"  1983
"org.mybatis.spring.type.DummyMapperFactoryBean.getObject()"  1984
"$z0 = $r3.getAutoCommit()"  1985
"org.springframework.context.support.ClassPathXmlApplicationContext.<init>(java.lang.String)"  1986
"$z1 = r0.addToConfig"  1987
"org.mybatis.spring.type.DummyMapperFactoryBean.lambda$0()"  1988
"org.mybatis.spring.SqlSessionFactoryBeanTest.lambda$0(org.apache.ibatis.type.TypeAliasRegistry)"  1989
"$r2 = java.util.Arrays.toString(r0)"  1990
"r5.error($r14, $r15, $r16)"  1991
"$r5 = (org.mybatis.spring.sample.mapper.UserMapper) $r4"  1992
"specialinvoke $r11.<init>()"  1993
"$r9 = r31.getPropertyValues()"  1994
"$r1 = java.lang.Integer.valueOf(i0)"  1995
"$r5 = $r3.newTransaction($r4, null, 1)"  1996
"$r3 = r0.cursorNoNestedItemReader"  1997
"$r12 = r0.parameterValues"  1998
"$r4 = r0.cursor"  1999
"$z0 = $r2.isTraceEnabled()"  2000
"$r37 = $r35.collect($r36)"  2001
"$r8[0] = 1"  2002
"$r35 = r2.getPropertyValues()"  2003
"$r11 = r0.writer()"  2004
"$r30.isEqualTo(\"foo1\")"  2005
"$r19 = new org.springframework.transaction.support.DefaultTransactionDefinition"  2006
"$r2.isNotNull()"  2007
"$r10 = r0.holder"  2008
"$r3.setConfigLocation($r2)"  2009
"$r2 = org.mybatis.spring.SqlSessionUtils.access$0()"  2010
"java.util.Map.isEmpty()"  2011
"$r10 = $r8.as(\"should not call rollback on SqlSession\", $r9)"  2012
"$r11 = org.assertj.core.api.Assertions.assertThat($r10)"  2013
"$r21 = $r20.getClass()"  2014
"$r7 = new org.springframework.transaction.support.DefaultTransactionDefinition"  2015
"specialinvoke $r1.<init>(\"Registered type handler: \'\")"  2016
"$i1 = $r7.getNumberRollbacks()"  2017
"$r3 = $r2.getObject()"  2018
"$r32.isNull()"  2019
"org.apache.ibatis.logging.Log.debug(java.lang.String)"  2020
"$r6 = java.lang.Integer.valueOf(i0)"  2021
"$r23 = $r21.collect($r22)"  2022
"label26: goto label28"  2023
"$r10 = $r8.getName()"  2024
"$r2 = new java.util.ArrayList"  2025
"$r5 = $r4.selectMap(r1, r2, r3)"  2026
"r1 = $r6.getEnvironment()"  2027
"org.mybatis.spring.sample.config.SampleConfig.fooService()"  2028
"$r3 = specialinvoke r0.setupSqlSessionFactory()"  2029
"$r19 = $r18.next()"  2030
"$r62 = r101.getTypeAliasRegistry()"  2031
"org.springframework.beans.MutablePropertyValues.add(java.lang.String,java.lang.Object)"  2032
"$r1 = java.lang.Boolean.valueOf(z0)"  2033
"$r4 = class \"Lorg/mybatis/spring/annotation/MapperScans;\""  2034
"specialinvoke $r6.<init>(\"sqlSessionFactory\")"  2035
"$r4 = org.springframework.transaction.support.TransactionSynchronizationManager.getResource(r0)"  2036
"$r2 = new org.mybatis.spring.mapper.MapperFactoryBean"  2037
"$r11 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  2038
"$r4 = org.mybatis.spring.transaction.SpringTransactionManagerTest.dataSource"  2039
"org.mybatis.spring.mapper.ClassPathMapperScanner.addIncludeFilter(org.springframework.core.type.filter.TypeFilter)"  2040
"$z2 = $r8.equals($r10)"  2041
"$r5 = $r4.toString()"  2042
"r8 = r0.openSession(r1)"  2043
"$r2 = new org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectFactory"  2044
"$r19.isNotSameAs(r4)"  2045
"$r42 = $r40.as(\"should not call DataSource.getConnection()\", $r41)"  2046
"$r2 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r1)"  2047
"label1: $r2 = r0.sqlSessionFactory"  2048
"$r20 = dynamicinvoke \"get\" <java.util.function.Supplier (org.springframework.beans.factory.config.BeanDefinitionHolder)>(r3) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: java.lang.String lambda$6(org.springframework.beans.factory.config.BeanDefinitionHolder)>, class \"()Ljava/lang/String;\")"  2049
"$r13 = r0.connection"  2050
"if $r75 != null goto label01"  2051
"org.mybatis.spring.AbstractMyBatisSpringTest.resetExecutorInterceptor()"  2052
"org.junit.jupiter.api.Assertions.assertEquals($r42, $r43)"  2053
"$r15 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  2054
"label2: $r18 := @caughtexception"  2055
"org.springframework.util.Assert.notNull($r2, \"Property \'sqlSessionFactoryBuilder\' is required\")"  2056
"$r5 = $r4.getCache()"  2057
"$r28 = java.lang.Integer.valueOf(2)"  2058
"label6: $i3 = lengthof r29"  2059
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.testSetItemToParameterConverter()"  2060
"$r11 = r0.createMockConnection()"  2061
"org.mybatis.spring.SqlSessionUtils.LOGGER = $r0"  2062
"org.mybatis.spring.support.SqlSessionDaoSupportTest$MockSqlSessionDao.<init>()"  2063
"$r24.isEqualTo(0)"  2064
"org.mybatis.spring.config.NamespaceHandler.init()"  2065
"org.mybatis.spring.batch.MyBatisCursorItemReader.doRead()"  2066
"$r1 = r0.cache"  2067
"$r8.debug($r9)"  2068
"$r15 = r0.this$0"  2069
"$r16 = org.mybatis.spring.SqlSessionFactoryBeanTest.dataSource"  2070
"$r4 = $r3.getObject()"  2071
"$r20 = org.mybatis.spring.MyBatisSpringTest.txManager"  2072
"org.mybatis.spring.ExecutorInterceptor.getRollbackCount()"  2073
"$r8.getBean(\"mapperChildInterface\")"  2074
"org.mybatis.spring.type.DummyTypeHandler.<init>()"  2075
"specialinvoke $r12.<init>($r13)"  2076
"$r23 = $r22.getClass()"  2077
"r1.resolveAlias(\"dummyTypeHandler\")"  2078
"$r23 = newarray (java.lang.Object)[0]"  2079
"org.springframework.util.Assert.notNull(r1, \"No DataSource specified\")"  2080
"$r27 = new org.springframework.beans.factory.config.RuntimeBeanReference"  2081
"$r18 = r1.get(i6)"  2082
"$r15.error($r19, $r13)"  2083
"$r9.isEqualTo(1)"  2084
"$r10 = $r7.parameterValues($r9)"  2085
"$r20 = r0.connection"  2086
"org.mybatis.spring.sample.AbstractSampleJobTest.<init>()"  2087
"$r10.getBean(\"annotatedMapper\")"  2088
"z0 := @parameter0"  2089
"$r4 = class \"Lorg/mybatis/spring/mapper/MapperInterface;\""  2090
"org.mybatis.spring.SqlSessionTemplateTest.testGetConnectionInTx()"  2091
"$r3.isTrue()"  2092
"$r5 = $r4.getName()"  2093
"$r6.setAutoCommit(1)"  2094
"$r6 = new org.springframework.beans.factory.config.RuntimeBeanReference"  2095
"$r70 = r0.configurationProperties"  2096
"org.mybatis.spring.type.DummyMapperFactoryBean.checkDaoConfig()"  2097
"label1: $r3 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionTemplate"  2098
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$3()"  2099
"org.mybatis.spring.ExecutorInterceptor.isExecutorClosed()"  2100
"org.mybatis.spring.SqlSessionFactoryBean.getObject()"  2101
"$r5 = org.apache.ibatis.session.ExecutorType.BATCH"  2102
"$r2.setSaveState($z0)"  2103
"if $i0 != 1 goto label1"  2104
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r14, $r13)"  2105
"$i2 = r28.size()"  2106
"$r10 = $r8.as(\"should call rollback on Connection\", $r9)"  2107
"r2 = $r9.getBeanDefinition($r10)"  2108
"$r12.isEqualTo(0)"  2109
"specialinvoke r0.<init>(r1)"  2110
"label3: $r4 := @caughtexception"  2111
"r1 = specialinvoke r0.setupSqlSessionFactory()"  2112
"$i0 = $r1.getConnectionCount()"  2113
"$r15 = specialinvoke r0.updatePropertyValue(\"basePackage\", r19)"  2114
"org.mybatis.spring.batch.MyBatisBatchItemWriter.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  2115
"$r15 = $r13.getName()"  2116
"specialinvoke $r3.<init>(\"foo2\")"  2117
"$r10 = r0.beanName"  2118
"org.apache.ibatis.logging.Log.isDebugEnabled()"  2119
"org.mybatis.spring.sample.domain.User.getId()"  2120
"$i1 = $r7.getRollbackCount()"  2121
"$r2[0] = \"org/mybatis/spring/config/annotation.xml\""  2122
"$r37 = new java.lang.RuntimeException"  2123
"org.apache.ibatis.session.Configuration.getObjectFactory()"  2124
"$r12 = $r11.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  2125
"$r18 = newarray (java.lang.Object)[0]"  2126
"$r8 = org.mockito.BDDMockito.given($r7)"  2127
"$r5 = r0.cursorNestedItemReader"  2128
"$r21 = r0.environment"  2129
"r0.commitCount = $i3"  2130
"$r2 = org.mybatis.spring.MyBatisSpringTest.exceptionTranslator"  2131
"r0.plugins = r1"  2132
"$r35 = $r34.getDefaultExecutorType()"  2133
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r39, $r38)"  2134
"$r7 = (org.mybatis.spring.TestMapper) $r6"  2135
"org.mybatis.spring.annotation.MapperScannerRegistrar$RepeatingRegistrar.registerBeanDefinitions(org.springframework.core.type.AnnotationMetadata, org.springframework.beans.factory.support.BeanDefinitionRegistry)"  2136
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest.testCloseBeforeOpen()"  2137
"goto label10"  2138
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithMarkerInterface.<init>()"  2139
"$r2 = r0.createMockConnection()"  2140
"$r18 = new org.springframework.transaction.support.DefaultTransactionDefinition"  2141
"$r3 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  2142
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$4()"  2143
"org.mybatis.spring.transaction.SpringManagedTransaction.close()"  2144
"$r37 = $r36.getDefaultExecutorType()"  2145
"$r1 = r0.mapper"  2146
"org.apache.ibatis.mapping.Environment.<init>(java.lang.String,org.apache.ibatis.transaction.TransactionFactory,javax.sql.DataSource)"  2147
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.pageSize(int)"  2148
"$r6 = $r5.append(\"be managed by Spring\")"  2149
"r4 = $r16.getTransaction($r15)"  2150
"org.mybatis.spring.AbstractMyBatisSpringTest.validateConnectionClosed()"  2151
"r2 = $r4.getTransaction($r3)"  2152
"$r6 = new org.apache.ibatis.mapping.Environment"  2153
"$r37 = $r35.as(\"should call commit on Connection 2\", $r36)"  2154
"org.junit.jupiter.api.Assertions.assertEquals(5, $i0)"  2155
"$r5 = $r4.getObject()"  2156
"$r5 = new com.mockrunner.mock.ejb.MockUserTransaction"  2157
"$r30 = org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER"  2158
"$r29 = r4.getConfiguration()"  2159
"$r4.setConstructorArgumentValues($r5)"  2160
"$r6.setPropagationBehaviorName(\"PROPAGATION_REQUIRED\")"  2161
"$r11 = $r10.getPersistenceExceptionTranslator()"  2162
"goto label20"  2163
"org.mockito.MockitoAnnotations.initMocks(r0)"  2164
"$r5 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  2165
"$r5 = $r4.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  2166
"$r56 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.plugin.Interceptor)>(r110) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$3(org.apache.ibatis.plugin.Interceptor)>, class \"()Ljava/lang/String;\")"  2167
"$r6.setItemToParameterConverter($r7)"  2168
"$r21 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.springframework.transaction.TransactionStatus)>(r2) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.MyBatisSpringTest: void lambda$3(org.springframework.transaction.TransactionStatus)>, class \"()V\")"  2169
"throw $r6"  2170
"$r12 = r1.read()"  2171
"specialinvoke $r3.<init>(\"SELECT 1\")"  2172
"org.mybatis.spring.SqlSessionUtils.access$0()"  2173
"$r6 = org.assertj.core.api.Assertions.assertThat($i0)"  2174
"$r28 = $r26.filter($r27)"  2175
"$r12.isEqualTo($r11)"  2176
"org.junit.jupiter.api.Assertions.assertNull($r24)"  2177
"$r8 = java.util.Collections.singletonMap(\"id\", $r7)"  2178
"r5 = $r8.getEnvironment()"  2179
"$r15 = new org.springframework.transaction.support.DefaultTransactionDefinition"  2180
"$r6.put(\"username\", \"sa\")"  2181
"$r3 = $r2.getPropertyValues()"  2182
"org.mybatis.spring.SqlSessionHolder.getExecutorType()"  2183
"$r1 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  2184
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest$Foo.getName()"  2185
"$r21 = $r10.getConnection()"  2186
"$r2.begin()"  2187
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithMapperScans;\""  2188
"$r6 = $r5.getId()"  2189
"$r36 = org.assertj.core.api.Assertions.assertThat($r35)"  2190
"$r2.addPreparedStatement($r3)"  2191
"org.mybatis.spring.mapper.ClassPathMapperScanner.setAddToConfig(boolean)"  2192
"if r3 == null goto label1"  2193
"$r25 = new org.mybatis.spring.batch.MyBatisCursorItemReader"  2194
"$r3.select(r1, r2)"  2195
"org.mybatis.spring.ExecutorInterceptor.setProperties(java.util.Properties)"  2196
"$r17 = $r16.append(\" did not update any rows: [\")"  2197
"org.mybatis.spring.mapper.MapperFactoryBeanTest.find()"  2198
"$r22 = $r21.getConfiguration()"  2199
"$r0 = org.mybatis.spring.type.DummyMapperFactoryBean.mapperInstanceCount"  2200
"r0.sqlSessionTemplateBeanName = $r17"  2201
"$r38 = r51.get(\"LAST_NAME\")"  2202
"$r4.commit()"  2203
"$r4 = dynamicinvoke \"get\" <java.util.function.Supplier (java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r1, r2) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: java.lang.String lambda$7(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>, class \"()Ljava/lang/String;\")"  2204
"label27: $r86 := @caughtexception"  2205
"$r6 = (org.springframework.transaction.TransactionException) $r5"  2206
"$r23 = new java.lang.StringBuilder"  2207
"$r1.reset()"  2208
"org.mybatis.spring.batch.MyBatisCursorItemReader.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  2209
"r49 = (java.util.Map) $r20"  2210
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r17, $r16)"  2211
"$r9 = $r8.getSqlSession()"  2212
"$r30 = org.assertj.core.api.Assertions.assertThat($i1)"  2213
"$r9 = $r1.getObject()"  2214
"org.mybatis.spring.support.SqlSessionDaoSupport.getSqlSessionTemplate()"  2215
"$r39 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionFactoryBean)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$6()>, class \"()Ljava/lang/String;\")"  2216
"r101.addCache($r42)"  2217
"$r7 = r0.cursorNestedItemReader"  2218
"$r2.put(\"_page\", $r4)"  2219
"$r6 = r1.getAnnotationAttributes($r5)"  2220
"$r5.put(\"username\", \"sa\")"  2221
"org.apache.ibatis.logging.Log.error(java.lang.String)"  2222
"r0.applicationContext = $r2"  2223
"$r5 = org.apache.ibatis.session.ExecutorType.SIMPLE"  2224
"java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)"  2225
"$r9 = newarray (java.lang.Object)[0]"  2226
"$r6 = $r5.append(r1)"  2227
"org.mybatis.spring.batch.domain.Employee.setName(java.lang.String)"  2228
"org.mybatis.spring.MyBatisSpringTest.testSuspendAndResume()"  2229
"$r18 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r17)"  2230
"$r8 = newarray (java.lang.Object)[0]"  2231
"specialinvoke $r23.<init>(\"Batch execution returned invalid results. Expected 1 but number of BatchResult objects returned was \")"  2232
"$r2 = r0.barService"  2233
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.<init>()"  2234
"label3: $r9 = r0.session"  2235
"label41: $r97 := @caughtexception"  2236
"$r4 = $r3.getSimpleName()"  2237
"$r21.rollback(r1)"  2238
"org.mybatis.spring.batch.MyBatisCursorItemReader.setQueryId(java.lang.String)"  2239
"$r11 = r0.sqlSession"  2240
"org.apache.ibatis.logging.Log.warn(java.lang.String)"  2241
"$r2 = r0.fooService"  2242
"r103 = org.springframework.util.StringUtils.tokenizeToStringArray($r61, \",; \t\n\")"  2243
"$r98 = org.apache.ibatis.executor.ErrorContext.instance()"  2244
"$r15 = $r14.getEnvironment()"  2245
"org.mybatis.spring.MyBatisSpringTest.testSpringAPI()"  2246
"$r41.setEnvironment(r1)"  2247
"if $r7 == null goto label04"  2248
"$z1 = r0.autoCommit"  2249
"org.mybatis.spring.mapper.MapperScannerConfigurer.updatePropertyValue(java.lang.String, org.springframework.beans.PropertyValues)"  2250
"$r7 = $r6.getSqlSessionFactory()"  2251
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.<init>(org.mybatis.spring.SqlSessionHolder, org.apache.ibatis.session.SqlSessionFactory)"  2252
"org.mybatis.spring.batch.MyBatisPagingItemReader.setSaveState(boolean)"  2253
"$r1 = org.mybatis.spring.support.SqlSessionDaoSupportTest.sqlSessionFactory"  2254
"org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionTemplate = $r0"  2255
"$r66 = org.assertj.core.api.Assertions.assertThat($i7)"  2256
"org.mybatis.spring.SqlSessionFactoryBeanTest.testFragmentsAreReadWithMapperLocations()"  2257
"org.springframework.batch.item.database.AbstractPagingItemReader.afterPropertiesSet()"  2258
"$r31 = (org.assertj.core.api.AbstractIntegerAssert) $r30"  2259
"$r15 = r32.getPropertyValues()"  2260
"$r6 = new org.springframework.transaction.support.DefaultTransactionDefinition"  2261
"$r9.add(\"sqlSessionTemplateBeanName\", \"sqlSessionTemplate\")"  2262
"org.apache.ibatis.logging.LogFactory.getLog(java.lang.Class)"  2263
"$r2.put(\"_pagesize\", $r6)"  2264
"r0.typeAliases = r1"  2265
"$r31 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r30"  2266
"specialinvoke r0.setupSqlSessionFactory(\"factory2\")"  2267
"label1: $r8 = \" not \""  2268
"org.mybatis.spring.submitted.webapp_placeholder.WebappPlaceholderTest.<init>()"  2269
"$r3 = new org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo"  2270
"r1 = $r5.getEnvironment()"  2271
"$r51 = r101.getTypeHandlerRegistry()"  2272
"$r30 = $r29.getParameterMapNames()"  2273
"$r3 = r0.sqlSession"  2274
"$r36.isSameAs($r37)"  2275
"$r21 = $r20.getConfiguration()"  2276
"org.mybatis.spring.mapper.MapperFactoryBean.getObjectType()"  2277
"if $r102 == null goto label05"  2278
"$r6 = r0.assertUpdates"  2279
"org.mybatis.spring.mapper.MapperScannerConfigurer.setBasePackage(java.lang.String)"  2280
"$r6 = $r5.queryId(\"selectFoo\")"  2281
"org.mybatis.spring.SqlSessionTemplate.commit(boolean)"  2282
"r25 = $r12.getTransaction($r14)"  2283
"org.mybatis.spring.SqlSessionTemplateTest.testRollback()"  2284
"$r15 = org.assertj.core.api.Assertions.assertThat($r14)"  2285
"label3: $r34 := @caughtexception"  2286
"$r25 = r0.this$0"  2287
"r0.dataSource = $r3"  2288
"$r5 = java.time.ZoneId.systemDefault()"  2289
"org.mybatis.spring.SqlSessionUtils.registerSessionHolder(org.apache.ibatis.session.SqlSessionFactory, org.apache.ibatis.session.ExecutorType, org.springframework.dao.support.PersistenceExceptionTranslator, org.apache.ibatis.session.SqlSession)"  2290
"org.mybatis.spring.batch.SpringBatchTest.shouldDuplicateSalaryOfAllEmployees()"  2291
"specialinvoke $r22.<init>($r25)"  2292
"$r4.isEqualTo(\"Pocoyo\")"  2293
"$r11.isNotNull()"  2294
"$r2 = org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType.HSQL"  2295
"org.mybatis.spring.SqlSessionFactoryBean.setConfigurationProperties(java.util.Properties)"  2296
"label2: goto label6"  2297
"$r19 = newarray (java.lang.Object)[0]"  2298
"org.mybatis.spring.type.DummyTypeHandler2.getResult(java.sql.CallableStatement, int)"  2299
"throw r2"  2300
"$r72 = r0.connectionTwo"  2301
"$r2 = new org.mybatis.spring.batch.MyBatisCursorItemReaderTest$Foo"  2302
"$r18 = r0.this$0"  2303
"r11 = $r4.getTransaction($r3)"  2304
"$r4.setStatementId(\"updateEmployee\")"  2305
"if $z0 != 0 goto label2"  2306
"specialinvoke $r1.<init>(\"Manual close is not allowed over a Spring managed SqlSession\")"  2307
"org.mybatis.spring.mapper.MapperFactoryBean.getObject()"  2308
"$r22 = $r20.as(\"should call rollback on SqlSession\", $r21)"  2309
"$r6 = r0.mapperInterface"  2310
"$r2.setTransactionFactory($r1)"  2311
"org.mybatis.spring.mapper.ClassPathMapperScanner.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  2312
"r1 = $r6.build()"  2313
"$r2 = r0.userMapper()"  2314
"$i0 = $r2.delete(r1)"  2315
"org.springframework.transaction.support.TransactionSynchronizationManager.unbindResource(java.lang.Object)"  2316
"org.mybatis.spring.SqlSessionFactoryBeanTest.testOtherTransactionFactoryClass()"  2317
"org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(java.sql.Connection,javax.sql.DataSource)"  2318
"$z0 = r1 instanceof org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy"  2319
"$r3.scan($r13)"  2320
"$r7 = class \"Lorg/mybatis/spring/mapper/MapperSubinterface;\""  2321
"$r2 = new java.lang.StringBuilder"  2322
"$r55 = newarray (java.lang.Object)[0]"  2323
"org.mybatis.spring.transaction.SpringManagedTransaction.<clinit>()"  2324
"label1: $r6 = r4.next()"  2325
"$r17.insertTest(\"test3\")"  2326
"org.mybatis.spring.type.DummyTypeAlias.<init>()"  2327
"org.mybatis.spring.SqlSessionTemplateTest.testGetConnection()"  2328
"$r21.add(\"sqlSessionTemplate\", $r22)"  2329
"$r0 = org.mybatis.logging.LoggerFactory.getLogger(class \"Lorg/mybatis/spring/transaction/SpringManagedTransaction;\")"  2330
"$r9 = org.assertj.core.api.Assertions.assertThat($i0)"  2331
"r0.isConnectionTransactional = $z1"  2332
"org.mybatis.spring.sample.SampleJobXmlConfigTest.<init>()"  2333
"r0.sqlSessionTemplate = $r2"  2334
"r101 = $r71.getConfiguration()"  2335
"$r6.commit(1)"  2336
"$r71 = new org.apache.ibatis.builder.xml.XMLConfigBuilder"  2337
"$r2 = r0.fooServiceWithMapperFactoryBean"  2338
"$r14.getBean($r15)"  2339
"return $r10"  2340
"$r2.setSqlSessionFactory($r3)"  2341
"$r4.refresh()"  2342
"$r2.setBeanClass(class \"Lorg/mybatis/spring/mapper/MapperScannerConfigurerTest$BeanNameGenerator;\")"  2343
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$0()"  2344
"$r53.setEnvironment(r1)"  2345
"label1: $r11 = new org.mybatis.spring.SqlSessionTemplate"  2346
"$r25 = r1.getStringArray(\"basePackages\")"  2347
"$r35.isEqualTo(0)"  2348
"$r6 = java.util.Collections.emptyList()"  2349
"$r23 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r22"  2350
"$r1 = r0.applicationContext"  2351
"org.springframework.jdbc.datasource.DataSourceTransactionManager.setDataSource(javax.sql.DataSource)"  2352
"specialinvoke $r5.<init>(r0, $r6)"  2353
"r0.log = r1"  2354
"org.mybatis.spring.mapper.MapperScannerConfigurer.setApplicationContext(org.springframework.context.ApplicationContext)"  2355
"$r1 = newarray (org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo)[3]"  2356
"$r10 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  2357
"specialinvoke $r8.<init>()"  2358
"r0.results = $r16"  2359
"org.mybatis.spring.support.SqlSessionDaoSupportTest$MockSqlSessionDao.<init>(org.mybatis.spring.support.SqlSessionDaoSupportTest$MockSqlSessionDao)"  2360
"org.junit.jupiter.api.Assertions.assertThrows(class \"Ljava/lang/UnsupportedOperationException;\", $r2)"  2361
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithNameGenerator;\""  2362
"$z0 = r1.isClosed()"  2363
"$r46 = r52.get(\"OPERATION_BY\")"  2364
"r101.setVfsImpl($r67)"  2365
"$r15 = (org.apache.ibatis.session.SqlSession) $r14"  2366
"$r3.add(\"markerInterface\", class \"Lorg/mybatis/spring/mapper/MapperInterface;\")"  2367
"$r15.isEqualTo(\"foo1\")"  2368
"org.mybatis.spring.submitted.xa.UserServiceTest.testCommitWithExistingTx()"  2369
"label1: $r3 = org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER"  2370
"$r22.commit(r3)"  2371
"$r4 = r0.name"  2372
"org.mybatis.spring.mapper.MapperScannerConfigurer.<init>()"  2373
"org.mybatis.spring.sample.SampleJavaConfigTest.<init>()"  2374
"z0 := @parameter1"  2375
"$i0 = $r8.size()"  2376
"$r37 = r0.sqlSessionFactoryBeanName"  2377
"label2: $r49 := @caughtexception"  2378
"r0.environment = $r3"  2379
"$r2 = r0.connection"  2380
"$r26 = java.util.Arrays.stream($r25)"  2381
"$r6 = $r5.append(39)"  2382
"$r4 = new org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo"  2383
"r4 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r16, $r15, $r14)"  2384
"org.mybatis.spring.batch.MyBatisPagingItemReader.afterPropertiesSet()"  2385
"$i0 = r6.getNumberCommits()"  2386
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest.<init>()"  2387
"$r38 = $r36.as(\"should call commit on Connection 1\", $r37)"  2388
"org.junit.jupiter.api.Assertions.assertNull($r31)"  2389
"org.mybatis.spring.SqlSessionTemplate.selectMap(java.lang.String, java.lang.String)"  2390
"r4.add($r7)"  2391
"$r17.setEnvironment(r1)"  2392
"$r5 = $r4.getSqlSessionFactory()"  2393
"$r9 = $r8.selectOne(\"checkEmployeeCount\")"  2394
"$r3 = newarray (java.lang.Object)[0]"  2395
"$r6[0] = class \"Lorg/apache/ibatis/session/SqlSession;\""  2396
"$r13 = new java.lang.Thread"  2397
"$r10.close()"  2398
"label1: $r7 = org.mybatis.spring.MyBatisSpringTest.txManager"  2399
"label1: $r3 = new org.mybatis.spring.mapper.ClassPathMapperScanner"  2400
"r0.nameGenerator = r1"  2401
"specialinvoke $r7.<init>(null, null)"  2402
"label1: r0.dataSource = r1"  2403
"$r10 = org.mockito.Mockito.verify($r9)"  2404
"return $r13"  2405
"$r8.commit(r2)"  2406
"org.apache.ibatis.cursor.Cursor.close()"  2407
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.setupContext()"  2408
"org.mybatis.spring.MyBatisSpringTest.validateSessionClose()"  2409
"$r8 = (org.mybatis.spring.TestMapper) $r7"  2410
"org.springframework.util.Assert.notNull(r1, \"Parameter \'holder\' must be not null\")"  2411
"java.time.LocalDateTime.now()"  2412
"r0.close()"  2413
"$r5 = org.mybatis.spring.AbstractMyBatisSpringTest.dataSource"  2414
"org.mybatis.spring.annotation.MapperScanTest.testMarkerInterfaceAndAnnotationScan()"  2415
"$r7 = r0.reader()"  2416
"$r20.commit(r5)"  2417
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r12, $r11)"  2418
"$r3.registerFilters()"  2419
"$r5 = org.mockito.Mockito.when($r4)"  2420
"specialinvoke r0.assertBeanNotLoaded(\"mapperInterface\")"  2421
"$r5 = r1.getName()"  2422
"org.mybatis.spring.type.DummyTypeHandler2.setParameter(java.sql.PreparedStatement, int, java.lang.Object, org.apache.ibatis.type.JdbcType)"  2423
"$r3 = newarray (org.mybatis.spring.batch.domain.Employee)[2]"  2424
"$r13 = org.mybatis.spring.AbstractMyBatisSpringTest.executorInterceptor"  2425
"$r16 = new org.mybatis.spring.SqlSessionTemplate"  2426
"$r78 = r0.configurationProperties"  2427
"$r43 = (org.assertj.core.api.AbstractIntegerAssert) $r42"  2428
"org.springframework.util.Assert.notNull($r1, \"Property \'sqlSessionFactory\' or \'sqlSessionTemplate\' are required\")"  2429
"r1 = $r6.getObjectWrapperFactory()"  2430
"$r29 = r120.getInputStream()"  2431
"org.junit.jupiter.api.Assertions.assertEquals($r19, r3)"  2432
"$r6.findTest()"  2433
"$r20 = $r18.as(\"should not close the Connection\", $r19)"  2434
"$r1 = r0.getSqlSession()"  2435
"specialinvoke r0.assertDefaultConfig($r2)"  2436
"goto label7"  2437
"org.mybatis.spring.submitted.xa.User.setId(java.lang.Integer)"  2438
"$r35 = dynamicinvoke \"get\" <java.util.function.Supplier (org.springframework.core.io.Resource)>(r120) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$7(org.springframework.core.io.Resource)>, class \"()Ljava/lang/String;\")"  2439
"org.apache.ibatis.cache.impl.PerpetualCache.<init>(java.lang.String)"  2440
"$r7.insertTest(\"test1\")"  2441
"specialinvoke r0.find()"  2442
"r0.session = $r6"  2443
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$5()"  2444
"$r3 = $r2.getSimpleName()"  2445
"$r3[0] = $r4"  2446
"org.apache.ibatis.logging.Log.trace(java.lang.String)"  2447
"r0.sqlSession = r1"  2448
"$r10 = r0.skills"  2449
"label3: org.springframework.util.Assert.state($z0, \"Property \'configuration\' and \'configLocation\' can not specified with together\")"  2450
"r2 = (org.mybatis.spring.submitted.autowire.BarMapper) $r10"  2451
"$r9 = new org.mybatis.spring.SqlSessionTemplate"  2452
"$r11.update(\"updateFoo\", $r12)"  2453
"$i4 = lengthof r29"  2454
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest.getFoos()"  2455
"$r29 = $r28.getName()"  2456
"$z2 = $r13.equals(r6)"  2457
"$r2 = org.apache.ibatis.session.ExecutorType.BATCH"  2458
"$r5.addConnection($r4)"  2459
"$r46 = r0.connection"  2460
"$r3.save(r1)"  2461
"label3: $r11 = r1.proceed()"  2462
"r0.cursor = $r9"  2463
"$r24 = org.mybatis.spring.SqlSessionTemplate.access$0($r23)"  2464
"$i0 = $r7.intValue()"  2465
"$r9 = $r8.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  2466
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithCustomMapperFactoryBean.<init>()"  2467
"$r17 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r16"  2468
"$r10 = $r9.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  2469
"$r13 = org.assertj.core.api.Assertions.assertThat($r12)"  2470
"$r14 = (java.sql.SQLException) $r13"  2471
"r0.lastName = r2"  2472
"$r4 = $r3.selectCursor(r1, r2)"  2473
"$r5.isEqualTo(0)"  2474
"java.sql.Connection.rollback()"  2475
"if $r1 != null goto label1"  2476
"$r14 = (org.mybatis.spring.TestMapper) $r13"  2477
"$r1 = new org.springframework.context.support.ClassPathXmlApplicationContext"  2478
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo.<init>(java.lang.String)"  2479
"$r9.update(\"updateEmployee\", $r5)"  2480
"$r10.thenReturn($r4)"  2481
"org.mybatis.spring.batch.MyBatisPagingItemReader.setPageSize(int)"  2482
"org.mybatis.spring.AbstractMyBatisSpringTest.assertExecuteCount(int)"  2483
"specialinvoke $r1.<init>(0)"  2484
"$r6 = r0.mockSqlSessionTemplate"  2485
"org.mybatis.spring.batch.MyBatisPagingItemReader.doReadPage()"  2486
"java.util.List.clear()"  2487
"$r6 = org.assertj.core.api.Assertions.assertThat($z0)"  2488
"$r5.isEqualTo(1)"  2489
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.getFoos()"  2490
"org.mybatis.spring.MyBatisSpringTest.testWithJtaTxManager()"  2491
"org.mybatis.spring.SqlSessionFactoryBean.setObjectWrapperFactory(org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory)"  2492
"label1: $r2 = r0.sqlSession"  2493
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.maxItemCount(int)"  2494
"$r2 = org.apache.ibatis.plugin.Plugin.wrap(r1, r0)"  2495
"$i2 = $r20.getNumberRollbacks()"  2496
"$r2.setItemToParameterConverter($r8)"  2497
"r4 := @parameter3"  2498
"$r21 = (org.apache.ibatis.session.SqlSession) $r20"  2499
"label1: $r14 = r4.next()"  2500
"org.mybatis.spring.MyBatisSpringTest.<init>()"  2501
"specialinvoke r0.find($r16)"  2502
"$r37 = r51.get(\"FIRST_NAME\")"  2503
"$z0 = r2.isEmpty()"  2504
"org.mybatis.spring.mapper.MapperFactoryBean.isSingleton()"  2505
"$r16 = org.mybatis.spring.MyBatisSpringTest.dataSource"  2506
"$r5 = r2[1]"  2507
"label2: r0.cursorIterator = null"  2508
"$r9.setMarkerInterface(r5)"  2509
"org.mybatis.spring.config.NamespaceTest$BeanNameGenerator.<init>()"  2510
"$r22 = java.util.stream.Collectors.toList()"  2511
"i11 = 0"  2512
"$i1 = $i0 * 2"  2513
"label1: $r4 = new java.util.ArrayList"  2514
"throw $r2"  2515
"$r1 = org.springframework.util.ClassUtils.getShortName(class \"Lorg/mybatis/spring/batch/MyBatisPagingItemReader;\")"  2516
"$r9 = new org.mybatis.spring.mapper.ClassPathMapperScanner"  2517
"org.mybatis.spring.SqlSessionTemplate.select(java.lang.String, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler)"  2518
"$r11 = r0.nameGenerator"  2519
"$r27 = org.assertj.core.api.Assertions.assertThat($r26)"  2520
"$r45.isEqualTo(0)"  2521
"$r2 = r0.sqlSessionFactory()"  2522
"specialinvoke $r1.<init>(\"Registering transaction synchronization for SqlSession [\")"  2523
"$r7 = $r6.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  2524
"throw $r1"  2525
"$r15.isEqualTo(0)"  2526
"$r4 = java.lang.Integer.valueOf($i0)"  2527
"$r11 = (org.assertj.core.api.AbstractIntegerAssert) $r10"  2528
"org.mybatis.spring.sample.service.BarService.<init>(org.mybatis.spring.sample.dao.UserDao)"  2529
"$r11 = java.time.Instant.ofEpochMilli(0L)"  2530
"$z0 = r1.hasTypeHandler(class \"Ljava/math/BigInteger;\")"  2531
"$r4.setVariables($r5)"  2532
"$r19 = $r18.flushStatements()"  2533
"r1 = $r14.build()"  2534
"$r19.isEqualTo($r20)"  2535
"$r5 = r0.lastName"  2536
"org.mybatis.spring.batch.MyBatisCursorItemReader.setMaxItemCount(int)"  2537
"r0.session = $r12"  2538
"$r21.add(\"properties\", $r17)"  2539
"$r3 = org.springframework.transaction.support.TransactionSynchronizationManager.getResource(r1)"  2540
"$r7.isInstanceOf(class \"Lorg/mybatis/spring/SqlSessionFactoryBeanTest$TestObjectFactory;\")"  2541
"label09: $r106 = r0.typeAliasesSuperType"  2542
"$r21 = java.lang.Integer.valueOf(0)"  2543
"r2 = (org.mybatis.spring.SqlSessionHolder) $r3"  2544
"$r3.setUseGeneratedKeys(1)"  2545
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r22, $r21)"  2546
"$r17 = r0.session"  2547
"$i3 = r0.getPageSize()"  2548
"org.mybatis.spring.SqlSessionTemplate.<init>(org.apache.ibatis.session.SqlSessionFactory)"  2549
"org.mybatis.spring.MyBatisSpringTest.testWithTxRequired()"  2550
"$i0 = r0.commitCount"  2551
"goto label9"  2552
"$r1.setSqlSessionFactoryBuilder(null)"  2553
"$r31 = r50.get(\"LAST_NAME\")"  2554
"$r13 = class \"Lorg/springframework/beans/factory/support/BeanNameGenerator;\""  2555
"org.mybatis.spring.SqlSessionTemplate.getSqlSessionFactory()"  2556
"$r7.findTest()"  2557
"org.mybatis.spring.support.SqlSessionDaoSupport.checkDaoConfig()"  2558
"$r13 = r1.values()"  2559
"$r21 = java.util.Collections.singletonList($r16)"  2560
"$r23 = org.assertj.core.api.Assertions.assertThat($i0)"  2561
"$r9.setAnnotationClass(r4)"  2562
"$r1 = r0.id"  2563
"org.mybatis.spring.mapper.MapperScannerConfigurer.setSqlSessionTemplateBeanName(java.lang.String)"  2564
"$r12 = $r11.append(125)"  2565
"org.springframework.context.support.ClassPathXmlApplicationContext.<init>(java.lang.String[],org.springframework.context.ApplicationContext)"  2566
"$r6.incrementAndGet()"  2567
"specialinvoke $r37.<init>(\"error.\")"  2568
"org.springframework.util.Assert.notNull(r2, \"Parameter \'sessionFactory\' must be not null\")"  2569
"$r2.append(\", \")"  2570
"org.mybatis.spring.sample.dao.UserDaoImpl.getUser(java.lang.String)"  2571
"$r2 = $r1.getBeanDefinition(\"mapperScanner\")"  2572
"$r10 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  2573
"$r26 = r2.getConfiguration()"  2574
"$r17 = org.springframework.transaction.support.TransactionSynchronizationManager.getResource($r16)"  2575
"$r25 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r24"  2576
"if $r2 == null goto label1"  2577
"$r3 = dynamicinvoke \"get\" <java.util.function.Supplier (java.util.List)>(r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.batch.MyBatisBatchItemWriter: java.lang.String lambda$0(java.util.List)>, class \"()Ljava/lang/String;\")"  2578
"$r5.add(\"sqlSessionFactoryBeanName\", \"${sqlSessionFactoryBeanNameProperty}\")"  2579
"$r8 = new org.mybatis.spring.batch.domain.Employee"  2580
"label2: $r34 := @caughtexception"  2581
"$r3.getBean(\"annotatedMapper\")"  2582
"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.<init>(javax.sql.DataSource)"  2583
"org.mybatis.spring.type.DummyTypeHandler.setParameter(java.sql.PreparedStatement, int, java.lang.Object, org.apache.ibatis.type.JdbcType)"  2584
"$r7 = $r4.itemToParameterConverter($r6)"  2585
"label1: return 0"  2586
"label06: $r9 = r0.vfs"  2587
"org.mybatis.spring.transaction.SpringManagedTransactionFactory.setProperties(java.util.Properties)"  2588
"org.mybatis.spring.annotation.MapperScanTest.assertNoMapperClass()"  2589
"$r16 = $r14.as(\"should not call commit on SqlSession\", $r15)"  2590
"org.apache.ibatis.cursor.Cursor.iterator()"  2591
"$r13.setConfigurationProperties($r10)"  2592
"label2: $r11 = r0.results"  2593
"$r16 = r0.mapperInterface"  2594
"org.mybatis.spring.sample.SampleJavaConfigTest.test()"  2595
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithAnnotation;\""  2596
"$r9.getBean(\"annotatedMapper\")"  2597
"$r9 = $r7.newTransaction($r8, null, 0)"  2598
"$r13.start()"  2599
"r0 := @this"  2600
"$r7 = r0.session"  2601
"$r19.isEqualTo(\"foo2\")"  2602
"return r0"  2603
"$r33 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r32"  2604
"specialinvoke r0.openConnection()"  2605
"org.mybatis.spring.sample.SampleEnableTest$AppConfig.<init>()"  2606
"$r96 = $r95.toString()"  2607
"$r11 = r5.getResourceLoader()"  2608
"$r23.isEqualTo(1)"  2609
"org.mybatis.spring.type.DummyTypeAlias2.<init>()"  2610
"label11: if i1 < i0 goto label08"  2611
"r0.basePackage = r1"  2612
"$r3 = r0.transactionalManager()"  2613
"$z0 = $r5.checkUserExists($i0)"  2614
"throw $r42"  2615
"r1 = $r11.build()"  2616
"$r27.isEqualTo(0)"  2617
"$z0 = $r7.checkUserExists($i0)"  2618
"$r8 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  2619
"if $z1 != 0 goto label15"  2620
"label5: $r13 := @caughtexception"  2621
"$r3 = $r2.append(\"] was not registered for synchronization because DataSource is not transactional\")"  2622
"$r8 = newarray (int)[2]"  2623
"$r13 = r0.sqlSession"  2624
"org.mybatis.spring.batch.MyBatisPagingItemReader.getPage()"  2625
"$r21 = newarray (java.lang.Object)[0]"  2626
"$r3 = new org.mybatis.spring.SqlSessionFactoryBean"  2627
"org.mybatis.spring.SqlSessionFactoryBeanTest.lambda$1(org.apache.ibatis.type.TypeAliasRegistry)"  2628
"org.mybatis.spring.SqlSessionFactoryBean.lambda$3(org.apache.ibatis.plugin.Interceptor)"  2629
"$r3.setResourceLoader($r10)"  2630
"$r2 = $r1.openSession()"  2631
"org.mybatis.spring.mapper.MapperScannerConfigurer.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"  2632
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.setUp()"  2633
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$6()"  2634
"org.mybatis.spring.mapper.ClassPathMapperScanner.checkCandidate(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"  2635
"$r30 = (org.apache.ibatis.session.SqlSession) $r29"  2636
"org.springframework.util.Assert.notNull($r1, \"Property \'basePackage\' is required\")"  2637
"$r10 = r2.get(0)"  2638
"$r9 = $r8.getConfiguration()"  2639
"$r50 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  2640
"$r8.willReturn(r2)"  2641
"org.springframework.context.annotation.AnnotationConfigApplicationContext.refresh()"  2642
"$r11.setEnvironment($r7)"  2643
"$r4.setAssertUpdates(0)"  2644
"$r1 = org.mybatis.spring.type.DummyMapperFactoryBean.LOGGER"  2645
"r0.databaseIdProvider = r1"  2646
"$r6 = r0.dataSource()"  2647
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testNameGenerator()"  2648
"label1: $r2 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionTemplate"  2649
"org.mybatis.spring.type.DummyTypeHandler2.getResult(java.sql.ResultSet, java.lang.String)"  2650
"$r41 = org.springframework.beans.BeanUtils.instantiateClass(r7)"  2651
"$r2 = $r1.getPreparedStatementResultSetHandler()"  2652
"label3: $r22 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  2653
"$r6 = $r5.build()"  2654
"r0.assertNoCommitJdbc()"  2655
"org.junit.jupiter.api.Assertions.fail(\"SqlSession is not closed\")"  2656
"$r20.isEqualTo(2)"  2657
"$r7.setUpdateCounts($r8)"  2658
"if $z1 != 0 goto label6"  2659
"$r6 = $r5.addScript(\"org/springframework/batch/core/schema-hsqldb.sql\")"  2660
"org.mybatis.spring.mapper.MapperFactoryBeanTest.find(org.mybatis.spring.SqlSessionTemplate)"  2661
"r7 = (com.mockrunner.mock.jdbc.MockConnection) $r28"  2662
"specialinvoke $r4.<init>(r17)"  2663
"$r6 = r0.configLocation"  2664
"$r11 = (org.apache.ibatis.executor.BatchResult) $r10"  2665
"$r5 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r4, $r3, $r2)"  2666
"$r6 = $r4.append($r5)"  2667
"org.springframework.transaction.support.TransactionSynchronizationManager.unbindResource($r4)"  2668
"$r21 = $r20.get(\"url\")"  2669
"$r18 = $r17.getName()"  2670
"$r57.isEqualTo(0)"  2671
"$r2 = r0.holder"  2672
"$z0 = $r10.containsKey(\"MyBatisCursorItemReader.read.count.max\")"  2673
"$r14 = java.time.Clock.fixed($r12, $r13)"  2674
"$r3 = org.mybatis.spring.mapper.ClassPathMapperScanner.LOGGER"  2675
"if $z0 != 0 goto label4"  2676
"$r3 = $r2.append(\" items.\")"  2677
"java.lang.StringBuilder.append(java.lang.String)"  2678
"$r7.add(\"annotationClass\", class \"Lorg/springframework/stereotype/Component;\")"  2679
"specialinvoke $r6.<init>(\"non-spring\", $r7, $r8)"  2680
"org.apache.ibatis.session.SqlSession.update(java.lang.String)"  2681
"throw $r34"  2682
"$r8 = org.mybatis.spring.SqlSessionTemplate.access$0($r7)"  2683
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.saveState(boolean)"  2684
"$r1 = r0.mockSqlSessionTemplate"  2685
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.sqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)"  2686
"$r2.setSqlSessionFactory($r1)"  2687
"$r6 = $r5.getPreparedStatementResultSetHandler()"  2688
"$r8 = r0.annotationClass"  2689
"$r26 = (org.assertj.core.api.AbstractIntegerAssert) $r25"  2690
"r0.itemToParameterConverter = $r1"  2691
"$r21 = org.mockito.Mockito.when($r20)"  2692
"i3 = 0"  2693
"if $r18 == null goto label7"  2694
"$r3 = new org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo"  2695
"$r4.getBean(\"mapperInterface\")"  2696
"java.util.ArrayList.<init>()"  2697
"$r8 = $r5.convert(r27)"  2698
"$r13.getBean($r14)"  2699
"$r17 = $r14.append($r16)"  2700
"$r1 = new org.mybatis.spring.SqlSessionFactoryBean"  2701
"java.util.List.isEmpty()"  2702
"$z0 = $r1.hasNext()"  2703
"$r31.isFalse()"  2704
"$r12 = org.apache.ibatis.session.ExecutorType.BATCH"  2705
"org.mybatis.spring.batch.MyBatisBatchItemWriter$PassThroughConverter.<init>()"  2706
"$r1 = org.mybatis.spring.AbstractMyBatisSpringTest.dataSource"  2707
"org.mybatis.spring.MyBatisSpringTest.testNonSpringTxFactoryWithTx()"  2708
"$r5.setConfiguration($r8)"  2709
"$r2 = new org.springframework.context.support.GenericApplicationContext"  2710
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$1(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory)"  2711
"org.mybatis.spring.sample.batch.UserToPersonItemProcessor.process(java.lang.Object)"  2712
"org.junit.jupiter.api.Assertions.assertEquals(r3, $r32)"  2713
"$r3 = r0.factoryBean"  2714
"$r4 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r3, $r2, $r1)"  2715
"org.mybatis.spring.sample.batch.UserToPersonItemProcessor.<init>()"  2716
"$r18 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r17"  2717
"$r1 = newarray (java.lang.Class)[1]"  2718
"$r18 = r1.getStringArray(\"value\")"  2719
"$z0 = $r14.isClosed()"  2720
"$r6.rollback(1)"  2721
"$r11 = $r9.as(\"scanner should not overwrite existing bean definition\", $r10)"  2722
"$r5 = r17.getCause()"  2723
"org.mybatis.spring.SqlSessionTemplate.selectList(java.lang.String, java.lang.Object)"  2724
"$r4 = r0.queryId"  2725
"$r56 = $r54.as(\"should not call rollback on Connection 2\", $r55)"  2726
"org.springframework.util.ObjectUtils.isEmpty(java.lang.Object[])"  2727
"org.mybatis.spring.SqlSessionFactoryBeanTest.testNullDataSource()"  2728
"$r23 = java.lang.Integer.valueOf(10)"  2729
"$r4 = r2.getSqlSession()"  2730
"java.lang.Boolean.valueOf(boolean)"  2731
"$r6 = $r5.statementId(\"updateFoo\")"  2732
"$r25.update(\"updateFoo\", $r10)"  2733
"org.junit.jupiter.api.Assertions.fail()"  2734
"$r39 = (org.assertj.core.api.AbstractIntegerAssert) $r38"  2735
"$r48.debug($r49)"  2736
"r0.skills = r1"  2737
"$r12 = $r8.sqlSessionTemplate($r9)"  2738
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo.<init>(java.lang.String)"  2739
"$r1 = new java.lang.StringBuilder"  2740
"org.mybatis.spring.mapper.MapperScannerConfigurer.getNameGenerator()"  2741
"org.mybatis.spring.type.DummyMapperFactoryBean.getCustomSessionFactoryForClass()"  2742
"$r3.setCacheEnabled(0)"  2743
"$r25 = $r24.getVfsImpl()"  2744
"r0.configurationProperties = r1"  2745
"$r9 = r0.sqlSession"  2746
"$r20 = org.mockito.Mockito.verify($r19)"  2747
"$r1 = org.mybatis.spring.MyBatisSpringTest.txManager"  2748
"$r8 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.session.SqlSession)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$5(org.apache.ibatis.session.SqlSession)>, class \"()Ljava/lang/String;\")"  2749
"$r24 = (org.mybatis.spring.TestMapper) $r23"  2750
"$r4 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  2751
"org.mybatis.spring.sample.SampleJobJavaConfigTest.<init>()"  2752
"$r26 = r49.get(\"OPERATION_AT\")"  2753
"$r18 = r2.get(2)"  2754
"org.springframework.context.support.ClassPathXmlApplicationContext.getBean(java.lang.String)"  2755
"org.mybatis.spring.MyBatisSpringTest.testSqlSessionCommitWithTx()"  2756
"label2: $r9 = r0.target"  2757
"org.mockito.BDDMockito.given(java.lang.Object)"  2758
"if r4 != null goto label2"  2759
"label1: $r3 = org.mybatis.spring.SqlSessionUtils.access$0()"  2760
"$r5 = $r3.sqlSessionFactory($r4)"  2761
"$r11 = r0.sqlSessionFactory"  2762
"$r7 = $r6.flushStatements()"  2763
"javax.transaction.UserTransaction.begin()"  2764
"$r16 = $r15.getConfiguration()"  2765
"$r3 = $r2.getDefaultExecutorType()"  2766
"$r4.close()"  2767
"$z0 = $r1.isOpen()"  2768
"org.mybatis.spring.MyBatisSpringTest.lambda$0()"  2769
"$z0 = org.springframework.util.StringUtils.hasText(r17)"  2770
"$r3 = $r2.getSqlSession()"  2771
"$r17 = (java.lang.Integer) $r16"  2772
"$r13 = java.lang.Integer.valueOf(1)"  2773
"$r77.setDataSource($r76)"  2774
"org.assertj.core.api.ObjectAssert.isNull()"  2775
"$r29 = newarray (java.lang.Object)[0]"  2776
"$r25.setSqlSessionFactory($r26)"  2777
"org.mybatis.spring.annotation.MapperScanTest.testCustomMapperFactoryBean()"  2778
"label1: $r3 = r0.createSqlSessionTemplate(r1)"  2779
"$r10 = org.mockito.Mockito.when($r9)"  2780
"java.util.Iterator.hasNext()"  2781
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithPackageClasses.<init>()"  2782
"org.mybatis.spring.SqlSessionFactoryBeanTest.setupFactoryBean()"  2783
"r0.assertRollback()"  2784
"if z2 == 0 goto label4"  2785
"$r18 = r0.cursor"  2786
"java.util.Map.putAll(java.util.Map)"  2787
"r0.session = $r4"  2788
"$r13 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.batch.MyBatisBatchItemWriterTest,java.util.List)>(r0, r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.batch.MyBatisBatchItemWriterTest: void lambda$1(java.util.List)>, class \"()V\")"  2789
"$r9 = $r7.as(\"scanner should not overwrite existing bean definition\", $r8)"  2790
"$r16 = r0.applicationContext"  2791
"specialinvoke $r13.<init>($r14)"  2792
"$r42 = org.assertj.core.api.Assertions.assertThat($i3)"  2793
"org.mybatis.spring.batch.MyBatisBatchItemWriter.<clinit>()"  2794
"r0.typeAliasesPackage = r1"  2795
"$r4 = $r2.as(\"should call commit on Connection\", $r3)"  2796
"$z0 = org.springframework.util.StringUtils.hasLength($r10)"  2797
"$r27 = org.assertj.core.api.Assertions.assertThat($i1)"  2798
"$r3.willReturn($r4)"  2799
"$r7 = r0.cursorNoNestedItemReader"  2800
"return $r4"  2801
"specialinvoke $r14.<init>()"  2802
"$r13 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r12"  2803
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.testItemToParameterConverterIsDefault()"  2804
"$r10 = $r8.as(\"should store the Factory\", $r9)"  2805
"i4 = lengthof $r54"  2806
"$r8 = org.mybatis.spring.transaction.SpringTransactionManagerTest.dataSource"  2807
"$r32 = r1.getClassArray(\"basePackageClasses\")"  2808
"r1 = $r5.getBeansOfType(class \"Lorg/springframework/beans/factory/config/PropertyResourceConfigurer;\")"  2809
"$r40 = r0.connectionTwo"  2810
"$r30.update(\"updateFoo\", $r10)"  2811
"$r3.selectOne(\"org.mybatis.spring.TestMapper.findFail\")"  2812
"org.mybatis.spring.AbstractMyBatisSpringTest.<clinit>()"  2813
"r0.objectFactory = r1"  2814
"$r4.add(r23)"  2815
"label2: return $r3"  2816
"$r33.setEnvironment(r1)"  2817
"$r14 = new java.lang.StringBuilder"  2818
"$r1 = new java.util.concurrent.atomic.AtomicInteger"  2819
"$r1.debug($r2)"  2820
"$r12 = $r11.getSimpleName()"  2821
"$r8.setSqlSessionFactoryBeanName(r24)"  2822
"$r32 = org.assertj.core.api.Assertions.assertThat($r31)"  2823
"label01: $r76 = r0.configurationProperties"  2824
"$r15 = r4.getConfiguration()"  2825
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r20, $r19)"  2826
"$z0 = $r10.booleanValue()"  2827
"$r6 = $r5.getObject()"  2828
"$r8.setResourceLoader($r11)"  2829
"$r2 = org.springframework.jdbc.datasource.DataSourceUtils.getConnection($r1)"  2830
"org.springframework.util.ClassUtils.getShortName(java.lang.Class)"  2831
"r0.assertUpdates = z0"  2832
"java.sql.Connection.getAutoCommit()"  2833
"$r9.update(\"updateFoo\", $r10)"  2834
"org.springframework.core.convert.converter.Converter.convert()"  2835
"org.mybatis.spring.MyBatisSpringTest.testBatch()"  2836
"$r2.setBeanClass(class \"Ljava/lang/Object;\")"  2837
"org.mybatis.spring.SqlSessionFactoryBeanTest.testDefaultConfigurationWithConfigurationProperties()"  2838
"$r3 = r1"  2839
"$r5 = newarray (java.lang.Object)[1]"  2840
"label6: $r8 = r0.connection"  2841
"$r8.close()"  2842
"$z1 = r31 instanceof org.apache.ibatis.exceptions.PersistenceException"  2843
"$r11 = $r9.append($r10)"  2844
"$r3 = $r2.append(\", name=\'\")"  2845
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithMarkerInterfaceAndAnnotation;\""  2846
"$r5 = r0.sqlSession"  2847
"r0.resolveAlias(\"dummyTypeHandler\")"  2848
"$r4.getBean(\"mapperSubinterface\")"  2849
"label21: $r14 = r0.typeHandlers"  2850
"$r4 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  2851
"org.mybatis.spring.type.DummyMapperFactoryBean.getMapperCount()"  2852
"$r7 = $r3.sqlSessionTemplate($r4)"  2853
"$r6.write(r2)"  2854
"$r1 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionTemplate"  2855
"$r4 = r0.sessionFactory"  2856
"$r25.isEqualTo(\"foo3\")"  2857
"$r19 = $r18.getConfiguration()"  2858
"$r3 = class \"Lorg/mybatis/spring/mapper/MapperInterface;\""  2859
"$r45.close()"  2860
"$r2 = r0.dataSource()"  2861
"org.mybatis.spring.support.SqlSessionDaoSupportTest.testAutowireWithNoFactoryOrSession()"  2862
"$r24.isEqualTo(\"foo3\")"  2863
"$r8 = $r7.toString()"  2864
"org.mybatis.spring.sample.SampleMapperTest.<init>()"  2865
"$r11.reset()"  2866
"$r3.setSqlSessionFactoryBeanName($r8)"  2867
"$r38 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  2868
"$r6 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  2869
"org.mybatis.spring.support.SqlSessionDaoSupport.afterPropertiesSet()"  2870
"org.mybatis.spring.sample.service.BarService.doSomeBusinessStuff(java.lang.String)"  2871
"org.mybatis.spring.transaction.SpringTransactionManagerTest.shouldNotCommitWithNoTxAndAutocommitIsOn()"  2872
"$r13 = class \"Lorg/mybatis/spring/mapper/MapperSubinterface;\""  2873
"$r4 = newarray (java.lang.Object)[1]"  2874
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/apache/ibatis/binding/BindingException;\", $r5)"  2875
"specialinvoke $r1.<init>(\"Fetched SqlSession [\")"  2876
"r0.sqlSessionTemplateBeanName = r1"  2877
"label34: $r40 = org.apache.ibatis.executor.ErrorContext.instance()"  2878
"org.mybatis.spring.submitted.xa.UserServiceImpl.saveWithFailure(org.mybatis.spring.submitted.xa.User)"  2879
"$r0 = org.mybatis.spring.SqlSessionUtils.LOGGER"  2880
"$r39 = r0.session"  2881
"$r16 = r0.sqlSessionFactoryBeanName"  2882
"$r19 = r0.getExpectedOperationBy()"  2883
"org.apache.ibatis.session.Configuration.addInterceptor(org.apache.ibatis.plugin.Interceptor)"  2884
"specialinvoke $r1.<init>(\"Releasing transactional SqlSession [\")"  2885
"org.mybatis.spring.config.NamespaceTest.testAnnotationScan()"  2886
"$r39 = r51.get(\"OPERATION_BY\")"  2887
"r0.registerBeanDefinitions(r2, r1)"  2888
"$r17 = $r15.getName()"  2889
"$r22 = new org.springframework.dao.InvalidDataAccessResourceUsageException"  2890
"specialinvoke $r2.<init>(\"Skipping MapperFactoryBean with name \'\")"  2891
"r0.rollbackCount = 0"  2892
"label3: $r13 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  2893
"$r9 = $r7.getName()"  2894
"$r3 = r0.parameterValues"  2895
"$r22 = r0.connection"  2896
"org.mybatis.spring.SqlSessionUtils.lambda$0()"  2897
"r1.resolveAlias(\"testAlias\")"  2898
"org.mybatis.spring.mapper.MapperFactoryBean.<init>(java.lang.Class)"  2899
"label5: $r18 = r0.sqlSessionTemplate"  2900
"$r41 = newarray (java.lang.Object)[0]"  2901
"org.springframework.transaction.jta.JtaTransactionManager.<init>(javax.transaction.UserTransaction)"  2902
"i5 = i5 + 1"  2903
"z0 := @parameter2"  2904
"$r10 = (java.lang.Integer) $r9"  2905
"$r5 = org.mybatis.spring.support.SqlSessionDaoSupportTest.dataSource"  2906
"$r1 = r0.basePackage"  2907
"specialinvoke $r3.<init>($r4, \"INSERT ? INTO test\")"  2908
"$r13.join()"  2909
"label3: $r19 = r0.session"  2910
"org.mybatis.spring.mapper.ClassPathMapperScanner.setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)"  2911
"$r38 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r37"  2912
"$r16 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.MyBatisSpringTest)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.MyBatisSpringTest: void lambda$2()>, class \"()V\")"  2913
"$r10.rollback(r11)"  2914
"$r6 = $r5.chunk(10)"  2915
"r0.saveState = $r1"  2916
"if $z1 == 0 goto label5"  2917
"if $z3 == 0 goto label21"  2918
"$z0 = org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()"  2919
"specialinvoke $r1.<init>(\"Closing non transactional SqlSession [\")"  2920
"r2.setAutowireMode(2)"  2921
"$i1 = $r16.getConnectionCount()"  2922
"$r25 = $r23.as(\"should call commit on Connection\", $r24)"  2923
"org.mybatis.spring.transaction.SpringManagedTransactionFactory.newTransaction(javax.sql.DataSource, org.apache.ibatis.session.TransactionIsolationLevel, boolean)"  2924
"$r3 = org.mybatis.spring.support.SqlSessionDaoSupportTest.sqlSessionFactory"  2925
"$r17 = $r15.as(\"should call commit on Connection\", $r16)"  2926
"org.mybatis.spring.SqlSessionFactoryBean.<init>()"  2927
"$r26 = r0.sqlSessionFactory"  2928
"org.mybatis.spring.MyBatisSpringTest.testBatchInTxWithError()"  2929
"org.mybatis.spring.PooledMockDataSource.addConnection(java.sql.Connection)"  2930
"$r4 = r0.sqlSessionDaoSupport"  2931
"org.springframework.jdbc.datasource.DataSourceUtils.getConnection(javax.sql.DataSource)"  2932
"$r3 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$5()>, class \"()Ljava/lang/String;\")"  2933
"$r4 = $r3.flushStatements()"  2934
"r0.applicationContext = r1"  2935
"org.mybatis.spring.SqlSessionFactoryBean.setConfigLocation(org.springframework.core.io.Resource)"  2936
"$r8 = org.mybatis.spring.AbstractMyBatisSpringTest.dataSource"  2937
"$r9 = r0.assertUpdates"  2938
"org.junit.jupiter.api.Assertions.assertEquals($r21, $r22)"  2939
"org.mybatis.spring.SqlSessionTemplate.selectCursor(java.lang.String, java.lang.Object)"  2940
"$r9.setBeanClass(class \"Lorg/springframework/beans/factory/config/PropertyPlaceholderConfigurer;\")"  2941
"$r3 = new org.springframework.transaction.support.DefaultTransactionDefinition"  2942
"r1 = org.junit.jupiter.api.Assertions.assertThrows(class \"Ljava/lang/IllegalStateException;\", $r7)"  2943
"r6 = r1.getSqlSession()"  2944
"$r29 = org.assertj.core.api.Assertions.assertThat($i1)"  2945
"$i1 = r5.getNumberRollbacks()"  2946
"z0 = 0"  2947
"$r26.rollback(r29)"  2948
"org.mybatis.spring.batch.MyBatisBatchItemWriter.afterPropertiesSet()"  2949
"$r17.addAll($r38)"  2950
"org.mybatis.spring.sample.SampleSqlSessionTest.<init>()"  2951
"org.apache.ibatis.session.SqlSession.insert(java.lang.String)"  2952
"r2 := @parameter1"  2953
"org.mybatis.spring.mapper.ClassPathMapperScanner.setSqlSessionTemplateBeanName(java.lang.String)"  2954
"$r8 = $r7.getClass()"  2955
"org.mybatis.spring.mapper.ClassPathMapperScanner.scan(java.lang.String[])"  2956
"return \"batch_java_config_user\""  2957
"org.springframework.jdbc.datasource.DataSourceTransactionManager.getTransaction(org.springframework.transaction.TransactionDefinition)"  2958
"$r9 = org.mybatis.spring.MyBatisSpringTest.txManager"  2959
"org.mybatis.spring.transaction.SpringManagedTransaction.LOGGER = $r0"  2960
"org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.<init>()"  2961
"$r1 = r0.connections"  2962
"org.mybatis.spring.SqlSessionTemplate.selectList(java.lang.String)"  2963
"org.mockito.Mockito.verify(java.lang.Object)"  2964
"label1: $r7 = r0.itemToParameterConverter"  2965
"org.mybatis.spring.mapper.MapperFactoryBean.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  2966
"$i3 = $r41.getNumberRollbacks()"  2967
"$r26 = org.assertj.core.api.Assertions.assertThat($r25)"  2968
"$r21 = r2.get(1)"  2969
"r3 := @parameter3"  2970
"$r43.isEqualTo(0)"  2971
"$r1 = new org.mybatis.spring.config.MapperScannerBeanDefinitionParser"  2972
"$r9 = r0.factoryBean"  2973
"$r24 = org.assertj.core.api.Assertions.assertThat($r23)"  2974
"$r12 = class \"Ljava/lang/Class;\""  2975
"r3 = (org.springframework.beans.factory.config.BeanDefinitionHolder) $r6"  2976
"$r6 = r2.invoke($r5, r3)"  2977
"$r13 = r0.sqlSessionTemplate"  2978
"$r4.commit(r1)"  2979
"org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.<init>()"  2980
"$r21 = org.assertj.core.api.Assertions.assertThat($i2)"  2981
"$r4 = new org.springframework.core.io.support.PathMatchingResourcePatternResolver"  2982
"$r11 = r0.cursor"  2983
"if r2 == null goto label1"  2984
"org.junit.jupiter.api.Assertions.assertEquals($r28, $r29)"  2985
"$r3 = $r1.setType($r2)"  2986
"$r1 = new org.apache.ibatis.session.SqlSessionFactoryBuilder"  2987
"$r6.commit()"  2988
"$r2 = r0.sqlSessionTemplate"  2989
"org.apache.ibatis.executor.ErrorContext.instance()"  2990
"$r9 = (org.mybatis.spring.TestMapper) $r8"  2991
"$r77.putAll($r78)"  2992
"org.apache.ibatis.reflection.factory.DefaultObjectFactory.<init>()"  2993
"$r8 = $r7.getEnvironment()"  2994
"org.mybatis.spring.batch.MyBatisPagingItemReader.<init>()"  2995
"org.mybatis.spring.support.SqlSessionDaoSupportTest.setup()"  2996
"org.springframework.util.Assert.notNull(r2, \"Property \'executorType\' is required\")"  2997
"$r10 = $r8.processor($r9)"  2998
"$z2 = org.springframework.util.StringUtils.hasText(r21)"  2999
"$r11 = r0.this$0"  3000
"r48 = (java.util.Map) $r14"  3001
"org.apache.ibatis.mapping.DatabaseIdProvider.getDatabaseId(javax.sql.DataSource)"  3002
"specialinvoke $r9.<init>(r2)"  3003
"$r2[0] = class \"Lorg/mybatis/spring/type/DummyTypeAlias;\""  3004
"java.util.Map.put(java.lang.Object,java.lang.Object)"  3005
"$r76 = org.mybatis.spring.MyBatisSpringTest.dataSource"  3006
"$r8 = java.util.Arrays.stream($r7)"  3007
"$r32 = r1.read()"  3008
"org.junit.jupiter.api.function.Executable.execute(org.mybatis.spring.SqlSessionFactoryBean)"  3009
"$r29 = new org.springframework.batch.item.ExecutionContext"  3010
"$r11.isEqualTo(1)"  3011
"$r5 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.session.SqlSession)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$6(org.apache.ibatis.session.SqlSession)>, class \"()Ljava/lang/String;\")"  3012
"$r2.setTypeAliasesPackage(\"org/mybatis/spring/type\")"  3013
"$r6.registerBeanDefinition(\"mapperScanner\", $r3)"  3014
"$r7 = $r6.getSqlSession()"  3015
"$r8 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  3016
"$r12 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  3017
"$r16 = $r15.selectOne(\"checkEmployeeCount\")"  3018
"org.mybatis.spring.sample.config.SampleConfig.transactionalManager()"  3019
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.testConfigurationAssertUpdatesIsFalse()"  3020
"$i0 = $r3.insert(r1, r2)"  3021
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.testConfigurationPageSize()"  3022
"org.mybatis.spring.SqlSessionTemplateTest.testExceptionTranslationShouldThrowMyBatisSystemException()"  3023
"r2 = (org.mybatis.spring.transaction.SpringManagedTransaction) $r5"  3024
"$r6 = $r5.read()"  3025
"$r7 = new java.lang.StringBuilder"  3026
"$r4 = r0.mapperInterface"  3027
"org.apache.ibatis.session.Configuration.getMappedStatementNames()"  3028
"$r7 = $r6.getId()"  3029
"org.mybatis.spring.SqlSessionUtils.getSqlSession(org.apache.ibatis.session.SqlSessionFactory)"  3030
"label4: $r25.close()"  3031
"org.mybatis.spring.SqlSessionTemplate.getConfiguration()"  3032
"$r7 = new org.mybatis.spring.SqlSessionTemplate"  3033
"r29 = $r11.getUpdateCounts()"  3034
"$r8 = \" \""  3035
"org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet()"  3036
"i10 = lengthof $r27"  3037
"org.mybatis.spring.sample.SampleJobXmlConfigTest$LocalContext.<init>()"  3038
"specialinvoke $r1.<init>(\"SqlSession [\")"  3039
"$r29 = r50.get(\"PERSON_ID\")"  3040
"$r24 = org.mybatis.spring.SqlSessionTemplateTest.txManager"  3041
"org.mybatis.spring.annotation.MapperScannerRegistrar$RepeatingRegistrar.<init>()"  3042
"label1: $i0 = r0.connectionCount"  3043
"$r9 = $r8.getPropertyValues()"  3044
"org.mybatis.spring.SqlSessionTemplateTest.testCommit()"  3045
"org.mybatis.spring.asyncsynchronization.SqlSessionTemplateAsyncAfterCompletionTest.<init>()"  3046
"r0.beanName = r1"  3047
"$r26 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3048
"r2.setBeanClass($r12)"  3049
"$r6.setVariables($r70)"  3050
"i7 = i7 + 1"  3051
"$r35 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3052
"org.junit.jupiter.api.function.Executable.execute(org.apache.ibatis.session.SqlSession)"  3053
"org.mybatis.spring.mapper.MapperFactoryBeanTest.setupSqlTemplate()"  3054
"$r69 = r0.objectFactory"  3055
"org.mybatis.spring.batch.MyBatisBatchItemWriter.write(java.util.List)"  3056
"$i4 = $r32.getRollbackCount()"  3057
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.lambda$3()"  3058
"$r7.setDataSource($r6)"  3059
"$r34.isTrue()"  3060
"$r28.isSameAs(class \"Lorg/apache/ibatis/io/JBoss6VFS;\")"  3061
"$r18.isEqualTo(1)"  3062
"$r4 = org.apache.ibatis.session.ExecutorType.REUSE"  3063
"$r37.isEqualTo(0)"  3064
"$r50 = $r48.as(\"should call commit on Connection 2\", $r49)"  3065
"$r15 = java.lang.Integer.valueOf(0)"  3066
"$r8 = new org.mybatis.spring.mapper.ClassPathMapperScanner"  3067
"$r6 = $r5.getConfiguration()"  3068
"$r32 = org.mybatis.spring.MyBatisSpringTest.executorInterceptor"  3069
"r28 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r8, $r10, $r12)"  3070
"$r19 = r0.session"  3071
"$r5 = new org.springframework.dao.TransientDataAccessResourceException"  3072
"org.mybatis.spring.annotation.MapperScannerRegistrar.registerBeanDefinitions(org.springframework.core.annotation.AnnotationAttributes, org.springframework.beans.factory.support.BeanDefinitionRegistry)"  3073
"org.mybatis.spring.SqlSessionUtils.lambda$2(org.apache.ibatis.session.SqlSession)"  3074
"$r4 = $r3.append(\"]\")"  3075
"$r16 = specialinvoke r0.updatePropertyValue(\"sqlSessionFactoryBeanName\", r19)"  3076
"$r5 = r0.dataSource"  3077
"$r10.put(\"password\", \"Passw0rd\")"  3078
"org.mybatis.spring.batch.MyBatisBatchItemWriter.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)"  3079
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.saveState(boolean)"  3080
"$z0 = r0.addToConfig"  3081
"$r77 = org.mybatis.spring.MyBatisSpringTest.txManager"  3082
"$r12 = $r11.toString()"  3083
"org.mybatis.spring.annotation.MapperScanTest.setupContext()"  3084
"$r2 = r0.userDao"  3085
"$i3 = $r34.size()"  3086
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/apache/ibatis/exceptions/PersistenceException;\", $r16)"  3087
"$r10 = r0.session"  3088
"$r8 = $r7.append(\". Bean already defined with the same name!\")"  3089
"org.springframework.jdbc.datasource.DataSourceUtils.isConnectionTransactional(java.sql.Connection,javax.sql.DataSource)"  3090
"specialinvoke $r3.<init>(\"classpath:org/mybatis/spring/submitted/autowire/spring.xml\")"  3091
"$r15.thenReturn($r16)"  3092
"org.mybatis.spring.AbstractMyBatisSpringTest.sqlSessionFactory = $r9"  3093
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.testConfiguration()"  3094
"org.mybatis.spring.support.SqlSessionDaoSupportTest.testAutowireWithTwoFactories()"  3095
"org.mybatis.spring.SqlSessionHolder.isOpen()"  3096
"$r6 = r2.getSqlSession()"  3097
"$r12 = org.assertj.core.api.Assertions.assertThat($i0)"  3098
"label1: $r20 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3099
"$r11 = $r10.pageSize(2)"  3100
"$r9.setResourceLoader($r45)"  3101
"$r15 = class \"Lorg/mybatis/spring/mapper/AnnotatedMapper;\""  3102
"$r57 = r0.typeAliases"  3103
"$r5 = $r4.selectCursor(r1, r2, r3)"  3104
"$r2.debug($r3)"  3105
"$r18 = r1.getConfiguration()"  3106
"$r23 = $r21.as(\"should not call rollback on Connection\", $r22)"  3107
"org.mybatis.spring.SqlSessionFactoryBeanTest.testDefaultConfiguration()"  3108
"$r15 = r0.applicationContext"  3109
"$r24 = (java.util.Collection) $r23"  3110
"if $r2 == r0 goto label1"  3111
"$r29 = $r27.as(\"should not call rollback on Connection\", $r28)"  3112
"org.apache.ibatis.session.SqlSession.commit()"  3113
"throw $r97"  3114
"$r45 = (org.apache.ibatis.session.SqlSession) $r44"  3115
"$r2 = (org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy) r1"  3116
"$r11.clear()"  3117
"$r4 = class \"Lorg/apache/ibatis/session/SqlSessionFactory;\""  3118
"$r21.thenThrow($r22)"  3119
"$r17 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r16"  3120
"r1 = $r2.getConnection()"  3121
"$r9.isFalse()"  3122
"specialinvoke $r10.<init>()"  3123
"org.apache.ibatis.session.Configuration.getTypeHandlerRegistry()"  3124
"$r34 = r0.connectionTwo"  3125
"specialinvoke $r4.<init>($r6, $r5)"  3126
"$r7 = r3.getAnnotationArray(\"value\")"  3127
"$r7 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.transaction.SpringManagedTransaction)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.transaction.SpringManagedTransaction: java.lang.String lambda$0()>, class \"()Ljava/lang/String;\")"  3128
"$r13.thenReturn($r15)"  3129
"$r3 = new org.mybatis.spring.transaction.SpringManagedTransactionFactory"  3130
"org.mybatis.spring.SqlSessionFactoryBean.setMapperLocations(org.springframework.core.io.Resource[])"  3131
"$r6 = r0.writer"  3132
"org.mybatis.spring.SqlSessionHolder.getPersistenceExceptionTranslator()"  3133
"r1 = $r10.getEnvironment()"  3134
"r5 = r2.getBeanClassName()"  3135
"org.mybatis.spring.batch.MyBatisCursorItemReader.setName(java.lang.String)"  3136
"$r8.insertTest(\"test1\")"  3137
"specialinvoke $r1.<init>(\"Rolling back JDBC Connection [\")"  3138
"$r15.rollback(r29)"  3139
"$r10 = java.lang.reflect.Proxy.getInvocationHandler(r1)"  3140
"$r11 = $r10.getConfiguration()"  3141
"$r1.commit(r0)"  3142
"org.springframework.batch.test.JobLauncherTestUtils.launchJob()"  3143
"$r2[0] = \"org/mybatis/spring/config/factory-ref.xml\""  3144
"$r10 = r0.applicationContext"  3145
"$r83 = $r82.append(r120)"  3146
"$r4 = $r1.append($r3)"  3147
"specialinvoke r0.assertBeanNotLoaded(\"mapperSubinterface\")"  3148
"$r2 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3149
"$r8 = r0.connection"  3150
"com.mockrunner.mock.jdbc.MockConnection.setAutoCommit(boolean)"  3151
"if $z0 != 0 goto label1"  3152
"r101.setObjectWrapperFactory($r68)"  3153
"$r30 = r1.read()"  3154
"$r8 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  3155
"$r25 = r0.session"  3156
"org.junit.jupiter.api.Assertions.assertEquals(r4, $r47)"  3157
"specialinvoke $r2.<init>($r3)"  3158
"$r2.put(\"_skiprows\", $r8)"  3159
"$r12 = class \"Lorg/mybatis/spring/mapper/child/MapperChildInterface;\""  3160
"$r20 = r2.get(1)"  3161
"$r8 = org.assertj.core.api.Assertions.assertThat($i1)"  3162
"$r17 = java.lang.Integer.valueOf(2)"  3163
"org.springframework.batch.core.configuration.annotation.JobBuilderFactory.get(java.lang.String)"  3164
"$r13.insertTest(\"test3\")"  3165
"label4: $r10 := @caughtexception"  3166
"specialinvoke $r1.<init>(\"Enabling autowire by type for MapperFactoryBean with name \'\")"  3167
"$r20 = $r19.getVariables()"  3168
"$r5 = r0.session"  3169
"org.junit.jupiter.api.Assertions.assertThrows(class \"Ljava/lang/IllegalArgumentException;\", $r2)"  3170
"org.apache.ibatis.plugin.Plugin.wrap(java.lang.Object,org.apache.ibatis.plugin.Interceptor)"  3171
"if $r8 == null goto label06"  3172
"org.springframework.batch.core.configuration.annotation.StepBuilderFactory.get(java.lang.String)"  3173
"$z1 = $r12.equals(r5)"  3174
"label2: org.junit.jupiter.api.Assertions.assertTrue($z0)"  3175
"r0.userDao = r1"  3176
"$r4 = new java.util.HashMap"  3177
"specialinvoke r0.setupContext()"  3178
"$r3 = $r1.getMapper($r2)"  3179
"$r22 = r0.applicationContext"  3180
"label4: throw $r7"  3181
"org.mybatis.spring.mapper.MapperFactoryBeanTest.<init>()"  3182
"org.mybatis.spring.sample.AbstractSampleJobTest.testJob()"  3183
"org.mybatis.spring.sample.domain.User.setName(java.lang.String)"  3184
"$r5 = (java.lang.String) $r4"  3185
"org.mybatis.spring.mapper.MapperScannerConfigurer.afterPropertiesSet()"  3186
"$r4 = new org.apache.ibatis.session.Configuration"  3187
"org.mybatis.spring.mapper.ClassPathMapperScanner.addExcludeFilter(org.springframework.core.type.filter.TypeFilter)"  3188
"$r4 = $r3.select(i0)"  3189
"$r5 = $r4.getBeanDefinition(\"mapperScanner\")"  3190
"org.mybatis.spring.sample.config.SampleConfig.fooServiceWithMapperFactoryBean()"  3191
"org.mybatis.spring.SqlSessionFactoryBeanTest.testAddCache()"  3192
"$r9 = $r8.selectOne(\"checkSalarySum\")"  3193
"$r6 = r0.sqlSessionTemplate"  3194
"r0.assertCommit()"  3195
"$r4.setVariables(null)"  3196
"label17: if i5 < i4 goto label16"  3197
"$r2.setDataSource(null)"  3198
"r0.mapperLocations = r1"  3199
"org.mybatis.spring.sample.dao.UserDao.getUser(java.lang.String)"  3200
"org.mybatis.spring.batch.domain.Employee.getSkills()"  3201
"org.mybatis.spring.sample.config.SampleJobConfig.sqlSessionFactory()"  3202
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.lambda$0(org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo)"  3203
"org.mybatis.spring.sample.config.SampleJobConfig.<init>()"  3204
"org.mybatis.spring.submitted.xa.User.setName(java.lang.String)"  3205
"$r3.setBeanClass(class \"Lorg/mybatis/spring/mapper/MapperScannerConfigurer;\")"  3206
"$r27 = dynamicinvoke \"test\" <java.util.function.Predicate ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)Z\", handle: <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>, class \"(Ljava/lang/String;)Z\")"  3207
"$r1 = org.mybatis.spring.AbstractMyBatisSpringTest.executorInterceptor"  3208
"org.mybatis.spring.batch.MyBatisPagingItemReader.read()"  3209
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithSqlSessionFactory.<init>()"  3210
"label35: $r17 = r0.transactionFactory"  3211
"$r31 = $r30.get(\"password\")"  3212
"org.mybatis.spring.sample.domain.Person.<init>(java.lang.String, java.lang.String)"  3213
"if $r3 == null goto label03"  3214
"$r5 = newarray (org.apache.ibatis.plugin.Interceptor)[1]"  3215
"$r7 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$4()>, class \"()Ljava/lang/String;\")"  3216
"org.mybatis.spring.annotation.MapperScanTest.testScanWithNameConflict()"  3217
"specialinvoke $r2.<init>(\"foo1\")"  3218
"$r10 = (org.mybatis.spring.TestMapper) $r9"  3219
"$r2 = new org.apache.ibatis.session.Configuration"  3220
"label1: $r5 = r0.userService"  3221
"specialinvoke $r4.<init>($r5)"  3222
"org.mybatis.spring.config.NamespaceTest.setupSqlSessionTemplate()"  3223
"label1: $r4 = r26.next()"  3224
"$r43 = r0.sqlSession"  3225
"$r7 = r0.sqlSessionTemplate"  3226
"$r19 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  3227
"return \"Creating a new SqlSession\""  3228
"$r3 = org.apache.ibatis.session.ExecutorType.BATCH"  3229
"$r8.scan($r26)"  3230
"return $r8"  3231
"$r1 = r0.executorType"  3232
"$z0 = $r2.isExecutorClosed()"  3233
"$r20 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3234
"r17 = (org.apache.ibatis.exceptions.PersistenceException) $r16"  3235
"org.mybatis.spring.config.MapperScannerBeanDefinitionParser.<init>()"  3236
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testMarkerInterfaceScan()"  3237
"$r41 = org.assertj.core.api.Assertions.assertThat($i5)"  3238
"r18 = (org.mybatis.spring.batch.domain.Employee) $r6"  3239
"r0.testInterfaceScan()"  3240
"org.mybatis.spring.config.NamespaceTest.testInterfaceScan()"  3241
"r0.assertUpdates = 1"  3242
"if $r3 == null goto label1"  3243
"org.mybatis.spring.submitted.autowire.AutowireTest.shouldReturnMapper()"  3244
"$r3.setObjectFactory($r2)"  3245
"$r3 = r0.holder"  3246
"$r28 = r0.sqlSession"  3247
"org.mybatis.spring.MyBatisSpringTest.testChangeExecutorTypeInTxRequiresNew()"  3248
"org.springframework.batch.item.database.AbstractPagingItemReader.<init>()"  3249
"r4.getConnection()"  3250
"org.junit.jupiter.api.Assertions.assertEquals(\"Taro\", $r44)"  3251
"$r43 = org.springframework.beans.BeanUtils.instantiateClass(r6)"  3252
"$r4 = $r3.getBean(class \"Lorg/mybatis/spring/support/SqlSessionDaoSupportTest$MockSqlSessionDao;\")"  3253
"if $z1 == 0 goto label4"  3254
"$r29.thenReturn($r30)"  3255
"$r1 = new org.springframework.context.annotation.AnnotationConfigApplicationContext"  3256
"org.mybatis.spring.SqlSessionFactoryBeanTest.assertConfig(org.apache.ibatis.session.SqlSessionFactory, java.lang.String, java.lang.Class)"  3257
"$r6 = $r5.getClassLoader()"  3258
"$r26 = org.springframework.util.StringUtils.tokenizeToStringArray(r25, \",; \t\n\")"  3259
"$z0 = java.lang.reflect.Proxy.isProxyClass($r3)"  3260
"$r6 = $r5.getPropertyValues()"  3261
"$r8 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder"  3262
"$r16 = $r13.getCause()"  3263
"$r20.thenReturn($r21)"  3264
"$r5 = $r4.getBean(\"fooMapper\")"  3265
"$r26 = org.assertj.core.api.Assertions.assertThat($i0)"  3266
"$r28.parse()"  3267
"$r10.isSameAs(class \"Ljava/lang/Object;\")"  3268
"$r14 = r0.applicationContext"  3269
"org.junit.jupiter.api.function.Executable.execute(org.mybatis.spring.support.SqlSessionDaoSupport)"  3270
"$r25 = $r24.toString()"  3271
"$r7 = $r6.getPreparedStatementResultSetHandler()"  3272
"org.mybatis.spring.annotation.MapperScanTest.testNameGenerator()"  3273
"$r77 = r101.getVariables()"  3274
"$r18 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3275
"label1: r0.session = null"  3276
"r0.id = r1"  3277
"$r4.setSqlSessionTemplate($r2)"  3278
"org.mybatis.spring.MyBatisSpringTest.testWithJtaTxManagerAndNonSpringTxManager()"  3279
"$r5 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  3280
"r2.getConnection()"  3281
"$r47.register(r115)"  3282
"r18.postProcessBeanFactory($r11)"  3283
"label42: $r32 = org.apache.ibatis.executor.ErrorContext.instance()"  3284
"org.mybatis.spring.annotation.MapperScanTest.testInterfaceScanWithPackageClasses()"  3285
"$r8 = $r7.getBeanDefinition(\"mapperScanner\")"  3286
"$r8 = $r3.getId()"  3287
"specialinvoke $r23.<init>(\"error.\")"  3288
"$r18 = $r17.getClass()"  3289
"r18 = (org.mybatis.spring.batch.domain.Employee) $r4"  3290
"$r12 = r1.getConfiguration()"  3291
"org.mybatis.spring.SqlSessionFactoryBeanTest.dataSource = $r0"  3292
"r0.closed = 1"  3293
"$r24 = $r23.append($i5)"  3294
"i1 = i1 + 1"  3295
"r0.basePackage = $r15"  3296
"$r8.isEqualTo(i0)"  3297
"java.util.function.Supplier.get(org.apache.ibatis.type.TypeHandler)"  3298
"$r6 = new com.mockrunner.mock.jdbc.MockConnection"  3299
"throw $r21"  3300
"$r12 = r0.beanName"  3301
"$r3.setDataSource($r4)"  3302
"org.mybatis.spring.sample.config.SampleConfig.userMapper()"  3303
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithPackageScan.<init>()"  3304
"org.mybatis.spring.MyBatisSpringTest.testMyBatisAPIWithCommit()"  3305
"specialinvoke $r13.<init>(\"non-spring\", $r14, $r11)"  3306
"$r27 = java.lang.Integer.valueOf(1)"  3307
"$r6 = dynamicinvoke \"get\" <java.util.function.Supplier ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$0()>, class \"()Ljava/lang/String;\")"  3308
"label29: if r100 == null goto label35"  3309
"specialinvoke r0.setupSqlSessionFactory(\"sqlSessionFactory2\")"  3310
"$r3.isNotNull()"  3311
"$i0 = r0.size()"  3312
"r1 = $r9.getEnvironment()"  3313
"$r5 = $r3.append($r4)"  3314
"org.mybatis.spring.batch.SpringBatchTest.<init>()"  3315
"$r43 = r1.getConfiguration()"  3316
"specialinvoke $r18.<init>()"  3317
"$r14 = $r13.getMessage()"  3318
"$r14.rollback(r15)"  3319
"$r45 = (org.assertj.core.api.AbstractIntegerAssert) $r44"  3320
"label6: r23 = r1.getAttribute(\"template-ref\")"  3321
"$r4 = r0.userService"  3322
"$r15 = (org.assertj.core.api.AbstractIntegerAssert) $r14"  3323
"$r22 = newarray (java.lang.Throwable)[1]"  3324
"$r2 = r1.getMetadata()"  3325
"java.util.HashMap.<init>()"  3326
"$r1 = r0.annotationClass"  3327
"i1 = 0"  3328
"$r7 = r3.getBeanDefinition()"  3329
"label25: $r44 = r0.databaseIdProvider"  3330
"$r3 = $r2.getConfiguration()"  3331
"$r17.addAll($r24)"  3332
"$r3 = new org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder"  3333
"$r4.add(\"basePackage\", \"org.mybatis.spring.mapper\")"  3334
"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.<init>()"  3335
"$r9 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  3336
"r18.setSalary($i1)"  3337
"org.apache.ibatis.type.TypeAliasRegistry.registerAliases(java.lang.String,java.lang.Class)"  3338
"label2: $z0 = r4 instanceof java.lang.String"  3339
"r3 = $r2.next()"  3340
"$r9.setConfiguration($r5)"  3341
"java.lang.StringBuilder.append(int)"  3342
"$r20 = $r17.selectCursor(\"selectFoo\", $r19)"  3343
"goto label5"  3344
"$r3 = (org.mybatis.spring.TestMapper) $r2"  3345
"$r5 = r0.pagingNestedItemReader"  3346
"label1: $r1 = r0.holder"  3347
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/springframework/dao/DataAccessException;\", $r21)"  3348
"org.mybatis.spring.AbstractMyBatisSpringTest.setupBase()"  3349
"return $r19"  3350
"$r14 = $r13.assertUpdates(0)"  3351
"$r4 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3352
"$r3.add(\"annotationClass\", class \"Lorg/springframework/stereotype/Component;\")"  3353
"label1: r29 = r2.invoke(r28, r3)"  3354
"org.mybatis.spring.SqlSessionFactoryBean.getDatabaseIdProvider()"  3355
"$r14.insertTest(\"test2\")"  3356
"$r47 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3357
"org.mybatis.spring.annotation.MapperScannerRegistrar.setResourceLoader(org.springframework.core.io.ResourceLoader)"  3358
"if $r7 == null goto label2"  3359
"$r5 = r0.cursorNoNestedItemReader"  3360
"$r3.getBean(\"mapperSubinterface\")"  3361
"$r14 = new org.apache.ibatis.transaction.managed.ManagedTransactionFactory"  3362
"$r24 = r0.applicationContext"  3363
"label3: $r8 := @caughtexception"  3364
"$z0 = 1"  3365
"$r10 = $r9.getBean(\"barMapper\")"  3366
"$r20 = dynamicinvoke \"test\" <java.util.function.Predicate ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Ljava/lang/Object;)Z\", handle: <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>, class \"(Ljava/lang/String;)Z\")"  3367
"$r49 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.type.TypeHandler)>(r115) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$5(org.apache.ibatis.type.TypeHandler)>, class \"()Ljava/lang/String;\")"  3368
"label40: $r80 := @caughtexception"  3369
"$r1 = r0.getObject()"  3370
"$r7 = $r6.getExitCode()"  3371
"org.mybatis.spring.sample.config.SampleConfig.dataSource()"  3372
"$r28.isFalse()"  3373
"org.mybatis.spring.SqlSessionTemplate.close()"  3374
"r101 = $r6"  3375
"specialinvoke $r3.<init>()"  3376
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSetConfiguration()"  3377
"$r4 = r0.sqlSessionProxy"  3378
"org.junit.jupiter.api.Assertions.assertThrows(class \"Ljava/lang/IllegalArgumentException;\", $r8, \"A itemToParameterConverter is required.\")"  3379
"$r2 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.apache.ibatis.session.SqlSession)>($r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.apache.ibatis.session.SqlSession: void commit()>, class \"()V\")"  3380
"$r8 = new org.springframework.transaction.support.DefaultTransactionDefinition"  3381
"r3 = r2.getPropertyValue(r1)"  3382
"specialinvoke $r1.<init>(\"Registered plugin: \'\")"  3383
"$r3 = new com.mockrunner.mock.jdbc.MockResultSet"  3384
"org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory.<init>()"  3385
"$r7 = new com.mockrunner.mock.jdbc.MockDataSource"  3386
"$r3 = newarray (java.lang.Class)[1]"  3387
"r0.dataSource = r1"  3388
"$r4 = new org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo"  3389
"org.mybatis.spring.sample.config.SampleJobConfig.step1()"  3390
"$i2 = $r4.size()"  3391
"return $r0"  3392
"$r10.setupConnection($r11)"  3393
"$r5 = (org.mybatis.spring.TestMapper) $r4"  3394
"$r2.setSqlSessionTemplate($r3)"  3395
"$z1 = $r5.equals($r7)"  3396
"label3: r21 = r1.getAttribute(\"name-generator\")"  3397
"$r13 = r2.getPropertyValues()"  3398
"org.mybatis.spring.annotation.MapperScanTest.assertBeanNotLoaded(java.lang.String)"  3399
"$r6.getBean(\"mapperChildInterface\")"  3400
"throw $r49"  3401
"$r41 = r0.connection"  3402
"$r51 = r0.session"  3403
"$r11 = class \"Ljava/lang/annotation/Annotation;\""  3404
"specialinvoke r0.<init>()"  3405
"$r19.debug($r20)"  3406
"org.springframework.util.Assert.notNull($r1, \"A SqlSessionFactory or a SqlSessionTemplate is required.\")"  3407
"$r11 = $r9.as(\"should not call commit on a Connection with autocommit\", $r10)"  3408
"specialinvoke $r7.<init>(r2)"  3409
"$r2 = r0.log"  3410
"label1: $r25.open($r29)"  3411
"org.springframework.core.io.support.PathMatchingResourcePatternResolver.<init>()"  3412
"$r4 = $r3.append(\"\'\")"  3413
"$i3 = $r19.getRollbackCount()"  3414
"$r14.setEnvironment(r1)"  3415
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.build()"  3416
"$r3.setDataSource($r2)"  3417
"$r4 = $r3.append(\", lastName: \")"  3418
"$r1 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionTemplate"  3419
"org.mybatis.spring.annotation.MapperScanTest.testScanWithMapperScanIsRepeat()"  3420
"$r31 = $r29.as(\"should call commit on Connection\", $r30)"  3421
"org.springframework.context.annotation.AnnotationConfigUtils.registerAnnotationConfigProcessors($r5)"  3422
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.assertNoMapperClass()"  3423
"$r22 = $r21.selectList(\"selectFoo\", $r12)"  3424
"org.mybatis.spring.ExecutorInterceptor.reset()"  3425
"$r12 = r0.createMockConnection()"  3426
"$r10.isEqualTo($r12)"  3427
"java.sql.Connection.commit()"  3428
"$r20 = r2.getConfiguration()"  3429
"$r2.error($r4)"  3430
"$r75 = r101.getVariables()"  3431
"org.mybatis.spring.support.SqlSessionDaoSupportTest.testWithBothFactoryAndTemplate()"  3432
"org.mybatis.spring.batch.MyBatisBatchItemWriter.setStatementId(java.lang.String)"  3433
"$r0 = org.mybatis.logging.LoggerFactory.getLogger(class \"Lorg/mybatis/spring/type/DummyMapperFactoryBean;\")"  3434
"$r10 = r3.getConfiguration()"  3435
"$r13 = r0.session"  3436
"$r3 = r0.sqlSessionFactory"  3437
"$r60 = dynamicinvoke \"get\" <java.util.function.Supplier (java.lang.Class)>(r108) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$2(java.lang.Class)>, class \"()Ljava/lang/String;\")"  3438
"$r7 = java.lang.Integer.valueOf(1)"  3439
"$r3.setBeanClass(class \"Lorg/mybatis/spring/SqlSessionTemplate;\")"  3440
"$r26 = org.mybatis.spring.MyBatisSpringTest.executorInterceptor"  3441
"$r3.registerBeanDefinition(\"beanNameGenerator\", $r2)"  3442
"$r44 = r52.get(\"FIRST_NAME\")"  3443
"$r19.setEnvironment(r1)"  3444
"org.junit.jupiter.api.Assertions.fail(\"SqlSessionTemplate should translate MyBatis PersistenceExceptions\")"  3445
"$r3.setCache($r2)"  3446
"$r30 = r50.get(\"FIRST_NAME\")"  3447
"$r21 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3448
"$r33 = (org.assertj.core.api.AbstractIntegerAssert) $r32"  3449
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo.<init>(java.lang.String)"  3450
"$r5.setMapperLocations($r7)"  3451
"$r37 = r1.read()"  3452
"$r36 = java.util.stream.Collectors.toList()"  3453
"org.apache.ibatis.session.Configuration.getDefaultExecutorType()"  3454
"org.mybatis.spring.SqlSessionFactoryBeanTest.testNotSpecifyVariableAndConfigurationProperties()"  3455
"specialinvoke $r1.<init>(\"Manual rollback is not allowed over a Spring managed SqlSession\")"  3456
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest.testConfigurationMaxItemCount()"  3457
"if $r15 == null goto label28"  3458
"$r8 = java.lang.reflect.Proxy.newProxyInstance($r6, $r4, $r7)"  3459
"$r2.setSqlSessionFactory($r4)"  3460
"$r2.setAssertUpdates($z0)"  3461
"$r3 = r1.getMethod()"  3462
"$z1 = org.springframework.util.StringUtils.hasText($r16)"  3463
"$r23 = r49.get(\"FIRST_NAME\")"  3464
"r0.resourceLoader = r1"  3465
"org.mybatis.spring.type.DummyTypeHandler2.getResult(java.sql.ResultSet, int)"  3466
"label2: $r5 = $r4.append($r8)"  3467
"$r52 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  3468
"$r38 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3469
"$r5 = $r4.selectList(r1, r2, r3)"  3470
"$r85 = $r84.toString()"  3471
"r23 = (org.mybatis.spring.batch.domain.Employee) $r6"  3472
"$r67 = r0.vfs"  3473
"$r2.warn($r4)"  3474
"$r12 = (org.assertj.core.api.ClassAssert) $r11"  3475
"$r5.setStatementId(\"updateEmployee\")"  3476
"label3: $r9 := @caughtexception"  3477
"org.mybatis.spring.SqlSessionTemplate.select(java.lang.String, org.apache.ibatis.session.ResultHandler)"  3478
"$r8 = java.lang.Integer.valueOf(1)"  3479
"org.mybatis.spring.SqlSessionTemplate.selectCursor(java.lang.String, java.lang.Object, org.apache.ibatis.session.RowBounds)"  3480
"$r9.doScan($r39)"  3481
"r4 = (org.mybatis.spring.transaction.SpringManagedTransaction) $r9"  3482
"$r3 = r0.cursorNestedItemReader"  3483
"$r3.setSqlSessionTemplate($r7)"  3484
"org.mybatis.spring.type.DummyTypeHandler.getResult(java.sql.ResultSet, int)"  3485
"$r74 = r0.configurationProperties"  3486
"org.springframework.dao.support.DaoSupport.<init>()"  3487
"specialinvoke $r36.<init>()"  3488
"$r3.setBeanNameGenerator($r11)"  3489
"$r26 = org.mybatis.spring.SqlSessionTemplate.access$2($r25)"  3490
"org.mybatis.spring.type.DummyTypeHandler.getResult(java.sql.ResultSet, java.lang.String)"  3491
"r0.session = $r5"  3492
"$r16 = class \"Lorg/mybatis/spring/mapper/AnnotatedMapper;\""  3493
"$r10 = r0.createMockConnection()"  3494
"$r1.close()"  3495
"$r9 = class \"Lorg/mybatis/spring/mapper/MapperInterface;\""  3496
"$r17[0] = 1"  3497
"$r17 = org.assertj.core.api.Assertions.assertThat($r16)"  3498
"r0.connectionCount = $i1"  3499
"$r34 = $r33.getName()"  3500
"$r10 = (org.assertj.core.api.ClassAssert) $r9"  3501
"goto label6"  3502
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSpecifyConfigurationAndConfigLocation()"  3503
"$r36 = newarray (java.lang.Object)[0]"  3504
"$r3.setMarkerInterface($r5)"  3505
"if $z2 == 0 goto label6"  3506
"specialinvoke $r4.<init>()"  3507
"org.mybatis.spring.config.NamespaceTest.testScanWithExplicitSqlSessionFactory()"  3508
"org.junit.jupiter.api.Assertions.fail(\"exception not thrown when expected\")"  3509
"$r89.reset()"  3510
"$r22 = r0.mapperLocations"  3511
"org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"  3512
"$r7 = $r4.getResources(\"org/mybatis/spring/sample/mapper/*.xml\")"  3513
"java.util.function.Supplier.get(java.util.List)"  3514
"$r16 = $r15.get(\"username\")"  3515
"$r17.getBean($r18)"  3516
"$r12 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r11)"  3517
"org.mybatis.spring.transaction.SpringManagedTransaction.openConnection()"  3518
"org.apache.ibatis.session.SqlSession.flushStatements()"  3519
"$r21.setEnvironment(r1)"  3520
"label3: $r10 = r28.get(0)"  3521
"if r120 != null goto label38"  3522
"$i0 = r0.salary"  3523
"$r7 = r0.this$0"  3524
"$r4 = java.time.Instant.ofEpochMilli(0L)"  3525
"$z0 = r0.isConnectionTransactional"  3526
"$r25 = org.assertj.core.api.Assertions.assertThat($r24)"  3527
"specialinvoke $r11.<init>($r12)"  3528
"r2.released()"  3529
"if $z0 == 0 goto label3"  3530
"$r1 = r0.lastName"  3531
"r111 = org.springframework.util.StringUtils.tokenizeToStringArray($r50, \",; \t\n\")"  3532
"if $r6 != r0 goto label1"  3533
"$r22 = r49.get(\"PERSON_ID\")"  3534
"$r8 = (org.springframework.context.ConfigurableApplicationContext) $r7"  3535
"org.mybatis.spring.AbstractMyBatisSpringTest.assertConnectionClosed(com.mockrunner.mock.jdbc.MockConnection)"  3536
"$r4 = dynamicinvoke \"match\" <org.springframework.core.type.filter.TypeFilter ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: boolean lambda$0(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)>, class \"(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z\")"  3537
"$r67 = newarray (java.lang.Object)[0]"  3538
"org.mybatis.spring.AbstractMyBatisSpringTest.txManager = $r10"  3539
"org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(java.lang.RuntimeException)"  3540
"org.mybatis.spring.type.DummyTypeHandler.getResult(java.sql.CallableStatement, int)"  3541
"r7 = (org.springframework.beans.factory.support.BeanNameGenerator) $r12"  3542
"$r2 = new org.mybatis.spring.SqlSessionTemplate"  3543
"specialinvoke $r12.<init>()"  3544
"r5 = r2.getReaderContext()"  3545
"$r8 = r0.sqlSessionFactory"  3546
"$r10.add(\"properties\", $r7)"  3547
"$r30 = specialinvoke r0.getFoos()"  3548
"$r29 = org.mockito.Mockito.verify($r28)"  3549
"$r5.findTest()"  3550
"$r38 = (java.util.Collection) $r37"  3551
"r0.processPropertyPlaceHolders = z0"  3552
"$r11 = new org.apache.ibatis.mapping.Environment"  3553
"$r2.save(r1)"  3554
"java.util.Collections.emptyList()"  3555
"$i3 = $r26.getCommitCount()"  3556
"$r10 = newarray (java.lang.Object)[0]"  3557
"label6: return"  3558
"org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectFactory.<init>(org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectFactory)"  3559
"$r4[0] = class \"Lorg/springframework/transaction/support/TransactionSynchronization;\""  3560
"r22 = $r12.getTransaction($r11)"  3561
"r2.close()"  3562
"r2 = $r3.getObject()"  3563
"$r9 = r0.this$0"  3564
"specialinvoke $r2.<init>($r3, \"Pocoyo\")"  3565
"$r5 = r0.connection"  3566
"r3 = $r4.getTransaction($r6)"  3567
"org.mybatis.spring.SqlSessionFactoryBean.setFailFast(boolean)"  3568
"$r6 = r0.getSqlSession()"  3569
"$r7 = $r6.append(\"\' mapperInterface\")"  3570
"$r28 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r27"  3571
"$r3 = r0.sqlSessionTemplate"  3572
"$r3 = $r2.getSqlSessionFactory()"  3573
"$r24 = $r23.getName()"  3574
"r0.addIncludeFilter($r4)"  3575
"org.mybatis.spring.SqlSessionFactoryBean.lambda$4(java.lang.String)"  3576
"$r5 = new java.util.Properties"  3577
"r101.setDatabaseId($r45)"  3578
"$r4 = r0.connectionTwo"  3579
"$r18 = new com.mockrunner.mock.ejb.MockUserTransaction"  3580
"$r34 = r2.get(3)"  3581
"$r5.getBean(\"ds2Mapper\")"  3582
"$r3 = specialinvoke r0.setupSqlSessionTemplate()"  3583
"$r3 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r2)"  3584
"$r40 = r51.get(\"OPERATION_AT\")"  3585
"$r6 = $r5.selectMap(r1, r2, r3, r4)"  3586
"$r3 = r0.process($r2)"  3587
"$r19 = r4.getConfiguration()"  3588
"r0.assertExecuteCount(0)"  3589
"r0.context = $r3"  3590
"org.mybatis.spring.submitted.autowire.AutowireTest.<init>()"  3591
"$r2 = new org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo"  3592
"$r5 = r0.sqlSessionProxy"  3593
"$r5 = org.mybatis.spring.MyBatisSpringTest.exceptionTranslator"  3594
"$r14 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.session.SqlSession)>(r3) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$2(org.apache.ibatis.session.SqlSession)>, class \"()Ljava/lang/String;\")"  3595
"org.mybatis.spring.sample.domain.Person.getFirstName()"  3596
"$r12.close()"  3597
"specialinvoke $r13.<init>()"  3598
"org.springframework.core.type.AnnotationMetadata.isInterface()"  3599
"org.mybatis.spring.support.SqlSessionDaoSupport.setSqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  3600
"$r9 = r1.getMethod()"  3601
"specialinvoke $r0.<init>($r1)"  3602
"org.mybatis.spring.SqlSessionTemplateTest.sqlSessionTemplate = $r0"  3603
"com.mockrunner.mock.jdbc.MockConnection.getNumberCommits()"  3604
"$r14 = $r13.getName()"  3605
"$r7 = new org.apache.ibatis.executor.BatchResult"  3606
"$r1 = r0.exceptionTranslator"  3607
"org.mybatis.logging.Logger.warn(java.util.function.Supplier)"  3608
"$r3.getBean(\"sqlSessionFactory\")"  3609
"$i4 = $r34.getNumberCommits()"  3610
"$r4 = r0.getMapperInterface()"  3611
"r0.queryId = r1"  3612
"org.mybatis.spring.SqlSessionUtils.<init>()"  3613
"org.mybatis.spring.SqlSessionTemplate.<init>(org.apache.ibatis.session.SqlSessionFactory, org.apache.ibatis.session.ExecutorType, org.springframework.dao.support.PersistenceExceptionTranslator)"  3614
"label23: if i9 < i8 goto label22"  3615
"org.mybatis.spring.SqlSessionTemplate.selectCursor(java.lang.String)"  3616
"r0.setupFactoryBean()"  3617
"$r38.debug($r39)"  3618
"r6 = r4.loadClass(r21)"  3619
"org.mybatis.spring.mapper.MapperScannerConfigurer.setMarkerInterface(java.lang.Class)"  3620
"org.mybatis.spring.transaction.SpringTransactionManagerTest.<init>()"  3621
"org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper.<init>()"  3622
"$r18 = org.assertj.core.api.Assertions.assertThat($z0)"  3623
"$r1.setPlugins($r5)"  3624
"$r9 = new org.springframework.beans.factory.support.DefaultListableBeanFactory"  3625
"throw $r9"  3626
"$r4 = (java.sql.Connection) $r3"  3627
"$r2 = r0.writer"  3628
"org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>()"  3629
"org.mybatis.spring.SqlSessionHolder.reset()"  3630
"$r6.isEqualTo(0)"  3631
"$r4.add(\"dataSource\", $r5)"  3632
"$r2 = (org.mybatis.spring.sample.domain.User) r1"  3633
"if z2 == 0 goto label6"  3634
"java.util.concurrent.atomic.AtomicInteger.get()"  3635
"goto label8"  3636
"$r5 = $r4.getPropertyValues()"  3637
"specialinvoke r0.find($r1, 1)"  3638
"org.mybatis.spring.type.DummyMapperFactoryBean.lambda$1(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"  3639
"$r5 = r0.statementId"  3640
"specialinvoke $r16.<init>($r17)"  3641
"return $r15"  3642
"$r1 = new org.mybatis.spring.sample.batch.UserToPersonItemProcessor"  3643
"specialinvoke $r4.<init>(\"foo3\")"  3644
"return r2"  3645
"$r8 = $r7.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  3646
"specialinvoke $r5.<init>(\"Cannot change the ExecutorType when there is an existing transaction\")"  3647
"$r20 = org.mockito.Mockito.when($r19)"  3648
"org.springframework.transaction.support.TransactionSynchronizationManager.unbindResourceIfPossible(java.lang.Object)"  3649
"$r13.isEqualTo(20000)"  3650
"$r19 = $r18.getEnvironment()"  3651
"$r7 = org.mybatis.spring.AbstractMyBatisSpringTest.executorInterceptor"  3652
"label14: if i3 < i2 goto label13"  3653
"$z0 = $r4.equals($r5)"  3654
"$i0 = $r9.intValue()"  3655
"$r3 = $r2.removeLast()"  3656
"r24 = r1.getAttribute(\"factory-ref\")"  3657
"org.mybatis.spring.SqlSessionFactoryBeanTest.testNullTransactionFactoryClass()"  3658
"$r23.isEqualTo(0)"  3659
"$r37 = (org.assertj.core.api.AbstractIntegerAssert) $r36"  3660
"$r8 = r0.exceptionTranslator"  3661
"$r6 = (org.mybatis.spring.TestMapper) $r5"  3662
"$r22 = newarray (java.lang.Object)[0]"  3663
"$r5 = $r4.getSqlSession()"  3664
"org.mybatis.spring.transaction.SpringManagedTransactionFactory.<init>()"  3665
"$r45 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3666
"$z1 = org.springframework.util.StringUtils.hasText(r19)"  3667
"goto label44"  3668
"$r17.isEqualTo(3)"  3669
"$r1 = r0.nameGenerator"  3670
"org.mybatis.spring.sample.domain.User.getName()"  3671
"specialinvoke $r3.<init>($r4, \"Pocoyo\")"  3672
"$i1 = $r26.size()"  3673
"$r12 = $r11.getClass()"  3674
"$z0 = org.mybatis.spring.SqlSessionUtils.isSqlSessionTransactional(r28, $r14)"  3675
"label05: $r8 = r0.objectWrapperFactory"  3676
"$r82 = new java.lang.StringBuilder"  3677
"$r9 = (org.mybatis.spring.SqlSessionTemplate) $r8"  3678
"org.mybatis.spring.SqlSessionFactoryBean.setDataSource(javax.sql.DataSource)"  3679
"$z1 = $r1 instanceof org.apache.ibatis.exceptions.PersistenceException"  3680
"$r5.register($r4)"  3681
"r0.lastName = r1"  3682
"java.util.List.iterator()"  3683
"if $r9 == null goto label4"  3684
"$r6 = $r5.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  3685
"$r5.afterPropertiesSet()"  3686
"$r9 = r0.writer"  3687
"r13.setSalary($i1)"  3688
"$r3.setConstructorArgumentValues($r4)"  3689
"org.mybatis.spring.type.DummyMapperFactoryBean.isAddToConfig()"  3690
"$r23 = r0.applicationContext"  3691
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSetConfigLocation()"  3692
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$4()"  3693
"org.junit.jupiter.api.Assertions.fail(\"Connection is not closed\")"  3694
"$r13 = newarray (java.lang.Object)[0]"  3695
"r0.sqlSession = $r6"  3696
"specialinvoke r0.find($r7, 1)"  3697
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSpecifyVariablesOnly()"  3698
"org.springframework.core.type.filter.AnnotationTypeFilter.<init>(java.lang.Class)"  3699
"label2: return r6"  3700
"$r2 = $r1.getConnection()"  3701
"$r1 = r0.skills"  3702
"$r19 = org.mybatis.spring.SqlSessionTemplate.access$0($r18)"  3703
"$r28 = r0.sqlSessionTemplateBeanName"  3704
"r1.open($r10)"  3705
"$r6 = r0.sqlSessionFactory"  3706
"$r47 = r101.getTypeHandlerRegistry()"  3707
"$r1 = r0.connection"  3708
"$r39 = org.apache.ibatis.session.ExecutorType.REUSE"  3709
"$r15.findTest()"  3710
"$r5.getBean($r6)"  3711
"org.mybatis.spring.annotation.MapperScanTest$BeanNameGenerator.generateBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry)"  3712
"$r9.thenReturn($r11)"  3713
"org.mybatis.spring.sample.config.SampleJobConfig.lambda$0(java.lang.String, java.time.LocalDateTime, java.lang.Object)"  3714
"r0.mapperInterface = r1"  3715
"$r27.isEqualTo(\"dev\")"  3716
"$r45 = r52.get(\"LAST_NAME\")"  3717
"$r2 = r0.applicationContext"  3718
"$r22 = org.mybatis.spring.SqlSessionTemplate.access$2($r21)"  3719
"$r8.thenReturn($r2)"  3720
"r2 = $r6.getObject()"  3721
"$r8 = $r5.getExecutorType()"  3722
"$r23 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r22"  3723
"$r12 = r0.applicationContext"  3724
"$r3.error($r5, r2)"  3725
"specialinvoke $r5.<init>(\"Spring bean should not be defined for class \")"  3726
"$z1 = org.springframework.jdbc.datasource.DataSourceUtils.isConnectionTransactional($r5, $r4)"  3727
"$r11 = org.mockito.BDDMockito.given($r10)"  3728
"throw $r20"  3729
"$r13 = (org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilderTest$Foo) $r12"  3730
"org.mybatis.spring.SqlSessionTemplate.getMapper(java.lang.Class)"  3731
"$r18.put(\"id\", $r19)"  3732
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.testConfigurationSetItemToParameterConverter()"  3733
"label6: $r21 = r2.getPropertyValues()"  3734
"$r1.setMapperLocations($r2)"  3735
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r8, $r7)"  3736
"$r1 = r0.holder"  3737
"$r3 = r0.dataSource"  3738
"$r10.put(\"item\", $r21)"  3739
"$r4.registerBeanDefinition(\"dao\", $r3)"  3740
"org.mybatis.spring.MyBatisSystemException.<init>(java.lang.Throwable)"  3741
"$r6 = r0.itemToParameterConverter"  3742
"$r2.start()"  3743
"$r10 = $r9.getEnvironment()"  3744
"$r7 = r0.name"  3745
"org.mybatis.spring.SqlSessionFactoryBean.setTypeAliasesSuperType(java.lang.Class)"  3746
"$r8.setMarkerInterface(r20)"  3747
"$r7 = r0.configurationProperties"  3748
"$r7 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3749
"$r2 = r0.cursorIterator"  3750
"$r22 = org.assertj.core.api.Assertions.assertThat($r21)"  3751
"$r22.setEnvironment(r1)"  3752
"$r14.commit(1)"  3753
"org.apache.ibatis.session.Configuration.setObjectFactory(org.apache.ibatis.reflection.factory.ObjectFactory)"  3754
"specialinvoke $r1.<init>(\"JDBC Connection [\")"  3755
"label2: $r8 = r0.maxItemCount"  3756
"$r7 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  3757
"$i2 = $r2.size()"  3758
"label2: goto label5"  3759
"$z0 = r1.isEmpty()"  3760
"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.setType(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType)"  3761
"$r8 = $r7.getConfiguration()"  3762
"org.mybatis.spring.AbstractMyBatisSpringTest.assertCommit()"  3763
"label5: $r20 = r0.cursorNestedItemReader"  3764
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.parameterValues(java.util.Map)"  3765
"specialinvoke r0.find(r1, 1)"  3766
"$r14 = org.assertj.core.api.Assertions.assertThat($z0)"  3767
"label1: $r3 = r0.applicationContext"  3768
"$r17 = $r16.getConfiguration()"  3769
"$r4 = $r3.getName()"  3770
"java.util.Iterator.next()"  3771
"$r27 = r0.session"  3772
"$r4 = org.apache.ibatis.session.ExecutorType.BATCH"  3773
"label18: $r13 = r0.typeHandlersPackage"  3774
"$r13 = r0.factoryBean"  3775
"org.mybatis.spring.AbstractMyBatisSpringTest.executorInterceptor = $r1"  3776
"$r7.getBean(\"annotatedMapper\")"  3777
"$r6.registerBeanDefinition(\"sqlSessionTemplate\", $r3)"  3778
"$r17 = newarray (java.lang.Object)[0]"  3779
"$r4 = new org.springframework.core.io.ClassPathResource"  3780
"if i6 < $i3 goto label4"  3781
"$r29 = $r27.as(\"should call commit on SqlSession\", $r28)"  3782
"$r10 = $r9.flushStatements()"  3783
"org.mybatis.spring.config.NamespaceTest.<init>()"  3784
"specialinvoke r0.<init>(r1, r2, $r3)"  3785
"$r8 = r0.itemToParameterConverter"  3786
"$z1 = $r3.isIndependent()"  3787
"$r22 = r2.get(1)"  3788
"$r3.setTypeAliases($r2)"  3789
"$r7.isTrue()"  3790
"$r49 = org.assertj.core.api.Assertions.assertThat($i2)"  3791
"$r4 = $r2.flow($r3)"  3792
"$r3 = org.springframework.transaction.support.TransactionSynchronizationManager.getResource($r2)"  3793
"$r13 = (org.assertj.core.api.ObjectAssert) $r12"  3794
"$r5.setConfigurationProperties($r3)"  3795
"$r13.add(\"addToConfig\", $r14)"  3796
"$r9.registerFilters()"  3797
"r0.salary = i0"  3798
"org.mybatis.spring.mapper.ClassPathMapperScanner.setSqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)"  3799
"specialinvoke $r7.<init>(r1)"  3800
"$r35 = org.assertj.core.api.Assertions.assertThat($i3)"  3801
"$r2[0] = \"org/mybatis/spring/config/marker-and-annotation.xml\""  3802
"$r1.afterPropertiesSet()"  3803
"$r3 = new org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder"  3804
"$r9.write(r2)"  3805
"java.lang.Class.getSimpleName()"  3806
"$z0 = r0.closed"  3807
"$r24.isEqualTo(\"SqlSessionFactory must be using a SpringManagedTransactionFactory in order to use Spring transaction synchronization\")"  3808
"$r8 = org.mockito.Mockito.verify($r7)"  3809
"java.util.concurrent.atomic.AtomicInteger.<init>(int)"  3810
"label2: $i0 = r23.getSalary()"  3811
"org.mybatis.spring.AbstractMyBatisSpringTest.<init>()"  3812
"r22 = null"  3813
"r1 = $r5.getTypeAliasRegistry()"  3814
"label1: return r3"  3815
"org.mybatis.spring.config.NamespaceTest.assertNoMapperClass()"  3816
"$r0 = new org.mybatis.spring.PooledMockDataSource"  3817
"$r6 = r0.pageSize"  3818
"$r19 = org.mybatis.spring.AbstractMyBatisSpringTest.executorInterceptor"  3819
"org.springframework.context.support.GenericApplicationContext.close()"  3820
"$r20 = (org.apache.ibatis.session.SqlSession) $r19"  3821
"com.mockrunner.mock.jdbc.MockResultSet.<init>(java.lang.String)"  3822
"org.mybatis.spring.SqlSessionTemplateTest.setupSqlTemplate()"  3823
"org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory()"  3824
"$r3 = r0.sqlSessionFactory()"  3825
"label04: $r102 = r0.objectFactory"  3826
"$r3.getBean(\"ds1Mapper\")"  3827
"java.util.Arrays.toString(java.lang.Object[])"  3828
"$r16 = org.assertj.core.api.Assertions.assertThat($r15)"  3829
"org.mybatis.spring.SqlSessionTemplate.clearCache()"  3830
"org.mybatis.spring.MyBatisSpringTest.testMyBatisAPIWithRollback()"  3831
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest.<init>()"  3832
"org.mybatis.spring.sample.config.SampleJobConfig.writer()"  3833
"$r5.setConfiguration($r3)"  3834
"specialinvoke $r1.<init>(\"Parsed mapper file: \'\")"  3835
"$r0 = org.mybatis.logging.LoggerFactory.getLogger(class \"Lorg/mybatis/spring/batch/MyBatisBatchItemWriter;\")"  3836
"label7: $r11 := @caughtexception"  3837
"$r1 = new java.lang.UnsupportedOperationException"  3838
"$z1 = r1.hasTypeHandler(class \"Ljava/math/BigDecimal;\")"  3839
"$r5 = r2.getName()"  3840
"$r2 = org.apache.ibatis.logging.LogFactory.getLog(r0)"  3841
"r0.holder = r1"  3842
"throw $r23"  3843
"$r33 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  3844
"$r5 = $r4.getClassLoader()"  3845
"$r12 = org.assertj.core.api.Assertions.assertThat($r11)"  3846
"$r6.add(\"nameGenerator\", $r7)"  3847
"$r24 = r1.read()"  3848
"$r6 = $r5.getClass()"  3849
"$r3.findTest()"  3850
"org.mybatis.spring.SqlSessionTemplate.insert(java.lang.String, java.lang.Object)"  3851
"$r7 = java.time.LocalDateTime.now($r6)"  3852
"org.mybatis.spring.MyBatisExceptionTranslator.initExceptionTranslator()"  3853
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.getOrder()"  3854
"$r12.isSameAs(class \"Ljava/lang/Object;\")"  3855
"$r2.selectOne(\"undefined\")"  3856
"r3 = java.util.Collections.singletonList($r7)"  3857
"$r9.setupConnection($r10)"  3858
"$r4 = r0.id"  3859
"$r17.isEqualTo(0)"  3860
"org.mybatis.spring.sample.domain.Person.<init>()"  3861
"$r9 = r0.processor()"  3862
"$r2.put(\"item\", r0)"  3863
"$r13 = $r12.toString()"  3864
"r0.sqlSessionFactoryBeanName = $r16"  3865
"$r3.setPropagationBehaviorName(\"PROPAGATION_SUPPORTS\")"  3866
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithAnnotation.<init>()"  3867
"$r5 = r0.getSqlSession()"  3868
"$r16 = $r15.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  3869
"$r53 = r0.connectionTwo"  3870
"$r5 = new org.apache.ibatis.mapping.Environment"  3871
"$r17 = (org.apache.ibatis.session.SqlSession) $r16"  3872
"$r31 = r0.sqlSession"  3873
"org.mybatis.spring.SqlSessionUtils.closeSqlSession(org.apache.ibatis.session.SqlSession, org.apache.ibatis.session.SqlSessionFactory)"  3874
"org.assertj.core.api.Assertions.assertThat(java.lang.Object)"  3875
"$r6 = $r5.getDataSource()"  3876
"z2 = 1"  3877
"specialinvoke r0.<init>($r2)"  3878
"$r2.register($r1)"  3879
"$r14 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  3880
"specialinvoke $r93.<init>(\"Failed to parse config resource: \")"  3881
"$r6 = java.lang.Integer.valueOf($i1)"  3882
"$r13 = $r12.getName()"  3883
"specialinvoke $r1.<init>(\"Transaction synchronization deregistering SqlSession [\")"  3884
"label2: return"  3885
"$r11 = (org.apache.ibatis.session.SqlSession) $r10"  3886
"$r4 = $r3.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  3887
"r0.holderActive = 0"  3888
"org.mybatis.spring.sample.config.SampleJobConfig.processor()"  3889
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo.getName()"  3890
"$r15 = r1.getConfiguration()"  3891
"r13 = (org.mybatis.spring.batch.domain.Employee) $r6"  3892
"r11 = null"  3893
"label1: return"  3894
"$r12 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  3895
"java.util.function.Supplier.get(org.mybatis.spring.SqlSessionFactoryBean)"  3896
"$r15.add(\"configLocation\", \"${configLocationProperty}\")"  3897
"$r8 = org.assertj.core.api.Assertions.assertThat($i0)"  3898
"specialinvoke $r13.<init>(\"Item \")"  3899
"$r20 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  3900
"label37: r120 = $r27[i11]"  3901
"$r7 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$6()>, class \"()Ljava/lang/String;\")"  3902
"label5: $r6 := @caughtexception"  3903
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/apache/ibatis/type/TypeException;\", $r9)"  3904
"$i0 = $r7.getNumberCommits()"  3905
"$r8 = class \"Lorg/mybatis/spring/mapper/MapperSubinterface;\""  3906
"label30: r100.parse()"  3907
"throw $r88"  3908
"$r3 = r0.log"  3909
"org.mybatis.spring.mapper.ClassPathMapperScanner.<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)"  3910
"org.mybatis.spring.batch.SpringBatchTest.checkCursorReadingWithNestedInResultMap()"  3911
"$r7 = dynamicinvoke \"get\" <java.util.function.Supplier (org.apache.ibatis.session.SqlSession)>(r3) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils: java.lang.String lambda$3(org.apache.ibatis.session.SqlSession)>, class \"()Ljava/lang/String;\")"  3912
"$r9 = $r6.parameterValues($r8)"  3913
"label1: specialinvoke r0.assertBeanNotLoaded(\"mapperClass\")"  3914
"org.mybatis.spring.annotation.MapperScanTest.testScanWithMapperScans()"  3915
"label3: $r13 := @caughtexception"  3916
"com.mockrunner.mock.ejb.MockUserTransaction.<init>()"  3917
"org.springframework.transaction.support.TransactionSynchronizationManager.unbindResourceIfPossible($r4)"  3918
"$r9.findTest()"  3919
"$r36 = new org.springframework.beans.factory.config.RuntimeBeanReference"  3920
"$r11 = new org.springframework.beans.factory.support.DefaultListableBeanFactory"  3921
"$r3.setAddToConfig($z1)"  3922
"$r13.isEqualTo($r2)"  3923
"r6 = (com.mockrunner.mock.jdbc.MockConnection) $r21"  3924
"r1 = $r5.launchJob()"  3925
"return $r2"  3926
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r46, $r45)"  3927
"org.mybatis.spring.batch.MyBatisCursorItemReader.doClose()"  3928
"$r6.isFalse()"  3929
"$r18 = r0.sqlSession"  3930
"$z0 = r1.hasTimeout()"  3931
"$r16 = r1.getString(\"sqlSessionFactoryRef\")"  3932
"specialinvoke $r1.<init>(\"Transaction synchronization closing SqlSession [\")"  3933
"$r68 = r0.objectWrapperFactory"  3934
"$r30 = org.assertj.core.api.Assertions.assertThat($r29)"  3935
"$r10 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.batch.MyBatisBatchItemWriterTest,java.util.List)>(r0, r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.batch.MyBatisBatchItemWriterTest: void lambda$0(java.util.List)>, class \"()V\")"  3936
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$2(java.lang.String[])"  3937
"i9 = i9 + 1"  3938
"org.apache.ibatis.session.Configuration.setVariables(java.util.Properties)"  3939
"org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectFactory.<init>()"  3940
"org.apache.ibatis.session.SqlSessionFactory.openSession(org.apache.ibatis.session.ExecutorType)"  3941
"org.mybatis.spring.SqlSessionFactoryBean.getObjectType()"  3942
"org.springframework.batch.test.JobLauncherTestUtils.<init>()"  3943
"$r6 = org.mybatis.spring.type.DummyMapperFactoryBean.mapperInstanceCount"  3944
"$r8.setAnnotationClass(r18)"  3945
"org.mybatis.spring.ExecutorInterceptor.getCommitCount()"  3946
"$r2.prepareThrowsSQLException(\"SELECT \'fail\'\")"  3947
"$r12.setPropagationBehaviorName(\"PROPAGATION_REQUIRES_NEW\")"  3948
"if $z2 == 0 goto label3"  3949
"$r5[0] = $r6"  3950
"$r3 = org.mybatis.spring.SqlSessionUtils.getSqlSession(r0, r1, null)"  3951
"$r6 = org.mybatis.spring.transaction.SpringTransactionManagerTest.txManager"  3952
"$r3 = new org.mybatis.spring.SqlSessionTemplate"  3953
"$r20 = r0.transactionFactory"  3954
"throw $r87"  3955
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.lambda$2()"  3956
"$r34 = r1.getConfiguration()"  3957
"$r19 = $r18.getName()"  3958
"label3: $r22 := @caughtexception"  3959
"$r16 = r17.getCause()"  3960
"$r1 = r0.stepBuilderFactory"  3961
"org.mybatis.spring.type.DummyTypeHandler2.<init>()"  3962
"$r19 = java.lang.Integer.valueOf(0)"  3963
"$r8.forEach($r9)"  3964
"$r9.registerBeanDefinition(\"sqlSessionFactory\", $r5)"  3965
"$r4 = new org.springframework.transaction.jta.JtaTransactionManager"  3966
"org.mybatis.spring.SqlSessionFactoryBean.onApplicationEvent(org.springframework.context.ApplicationEvent)"  3967
"org.apache.ibatis.session.SqlSessionFactoryBuilder.<init>()"  3968
"$r4 = $r2.as(\"should not call commit on Connection\", $r3)"  3969
"$r4 = $r3.getBeanDefinition(\"mapperScanner\")"  3970
"$r4 = $r2.as(\"should call commit on SqlSession\", $r3)"  3971
"specialinvoke $r12.<init>(\"SqlSessionFactory must be using a SpringManagedTransactionFactory in order to use Spring transaction synchronization\")"  3972
"$r9.isEqualTo($r10)"  3973
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.sqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  3974
"$r3 = r0.connection"  3975
"org.mybatis.spring.sample.SampleJobXmlConfigTest.getExpectedOperationBy()"  3976
"$r1 = r0.writer"  3977
"$r24.rollback(r25)"  3978
"org.mybatis.spring.support.SqlSessionDaoSupport.getSqlSession()"  3979
"r0.autoCommit = $z0"  3980
"org.junit.jupiter.api.Assertions.assertEquals(\"Pato\", $r23)"  3981
"org.mybatis.spring.support.SqlSessionDaoSupport.<init>()"  3982
"specialinvoke $r1.<init>(\"Employee{id=\")"  3983
"org.mybatis.spring.SqlSessionUtils.registerSessionHolder(r0, r1, r2, r8)"  3984
"$r24 = org.mockito.Mockito.verify($r23)"  3985
"$r35 = org.assertj.core.api.Assertions.assertThat($i4)"  3986
"org.springframework.util.Assert.notNull($r5, \"A statementId is required.\")"  3987
"label2: return r2"  3988
"$r5 = (org.assertj.core.api.AbstractIntegerAssert) $r4"  3989
"org.mybatis.spring.AbstractMyBatisSpringTest.assertCommitJdbc()"  3990
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSearchATypeAliasPackageWithSuperType()"  3991
"$r7 = r0.userService"  3992
"$r5 = new org.springframework.core.io.ClassPathResource"  3993
"$r5 = (org.springframework.beans.factory.config.TypedStringValue) r4"  3994
"label3: $r3 = dynamicinvoke \"match\" <org.springframework.core.type.filter.TypeFilter ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: boolean lambda$1(org.springframework.core.type.classreading.MetadataReader,org.springframework.core.type.classreading.MetadataReaderFactory)>, class \"(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z\")"  3995
"$r23 = r0.session"  3996
"specialinvoke $r2.<init>(\"used addConnection() instead\")"  3997
"$r18.isEqualTo($i2)"  3998
"$r33 = (org.apache.ibatis.session.SqlSession) $r32"  3999
"org.junit.jupiter.api.Assertions.assertThrows(class \"Lorg/apache/ibatis/type/TypeException;\", $r11)"  4000
"$r17 = (org.mybatis.spring.TestMapper) $r16"  4001
"$r8 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r7, $r6, $r5)"  4002
"label32: $r91 := @caughtexception"  4003
"$r23.commit(r2)"  4004
"throw $r37"  4005
"org.mybatis.spring.SqlSessionFactoryBeanTest.assertConfig(org.apache.ibatis.session.SqlSessionFactory, java.lang.Class)"  4006
"org.mybatis.spring.SqlSessionFactoryBeanTest.<init>()"  4007
"$r21 = $r19.filter($r20)"  4008
"label22: r115 = $r46[i9]"  4009
"$r87 = new org.springframework.core.NestedIOException"  4010
"$r7 = r0.sqlSessionDaoSupport"  4011
"$r13 = $r12.getBeanDefinition(\"sqlSessionFactory\")"  4012
"org.mybatis.spring.SqlSessionFactoryBeanTest.assertDefaultConfig(org.apache.ibatis.session.SqlSessionFactory)"  4013
"r1 = $r3.getTransaction($r2)"  4014
"$r11 = newarray (java.lang.Object)[0]"  4015
"$r18.rollback(r3)"  4016
"$r2.afterPropertiesSet()"  4017
"$r19.update(\"updateFoo\", $r20)"  4018
"$r10 = $r9.getSimpleName()"  4019
"$r19.rollback(r22)"  4020
"$i1 = r0.salary"  4021
"org.mybatis.spring.SqlSessionFactoryBeanTest.testSetObjectFactory()"  4022
"throw $r75"  4023
"$r2 = r0.getSqlSession()"  4024
"if $z0 != 0 goto label3"  4025
"$r7 = new org.mybatis.spring.MyBatisExceptionTranslator"  4026
"$r6 = $r4.getName()"  4027
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$3(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.String)"  4028
"$r5.saveWithFailure($r3)"  4029
"if i0 != 0 goto label5"  4030
"org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.<init>(org.mybatis.spring.SqlSessionTemplate)"  4031
"$r35 = $r33.map($r34)"  4032
"org.mybatis.spring.sample.config.SampleJobConfig.createItemToParameterMapConverter(java.lang.String, java.time.LocalDateTime)"  4033
"$r41.isEqualTo(8)"  4034
"specialinvoke $r1.<init>(\"Transaction synchronization committing SqlSession [\")"  4035
"$r10 = $r9.maxItemCount(2)"  4036
"org.springframework.util.Assert.notNull($r5, \"A queryId is required.\")"  4037
"label3: $r74 = org.mybatis.spring.MyBatisSpringTest.txManager"  4038
"$r11 = r0.mapperFactoryBean"  4039
"$r12.commit(r2)"  4040
"$r4.commit(r3)"  4041
"java.util.Properties.putAll(java.util.Map)"  4042
"$r8 = r0.sqlSessionDaoSupport"  4043
"$r14 = $r13.getDataSource()"  4044
"org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper.createSynchronizationWithAsyncAfterComplete(org.springframework.transaction.support.TransactionSynchronization)"  4045
"if $z3 == 0 goto label3"  4046
"$r12 = r0.session"  4047
"org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler.lambda$0(java.util.Set, java.lang.reflect.Method, java.lang.Object[], java.util.Set)"  4048
"$r13 = $r12.get(\"username\")"  4049
"org.mybatis.spring.batch.MyBatisCursorItemReader.close()"  4050
"$r7.isInstanceOf(class \"Lorg/mybatis/spring/SqlSessionFactoryBeanTest$TestObjectWrapperFactory;\")"  4051
"$r2 = $r1.select(i0)"  4052
"$r5 = r1.getConfiguration()"  4053
"$r2 = $r1.append(r0)"  4054
"$r7.afterPropertiesSet()"  4055
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.sqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  4056
"$r1 = new org.springframework.batch.test.JobLauncherTestUtils"  4057
"org.mybatis.spring.batch.MyBatisCursorItemReader.setSaveState(boolean)"  4058
"return \"Property \'configuration\' or \'configLocation\' not specified, using default MyBatis Configuration\""  4059
"if $z2 == 0 goto label7"  4060
"$r11.close()"  4061
"$r4 = new org.mybatis.spring.SqlSessionTemplate"  4062
"$r3 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder"  4063
"r0.markerInterface = r1"  4064
"$r1 = org.mybatis.spring.SqlSessionUtils.access$0()"  4065
"r0.registerBeanDefinitions(r3, r2)"  4066
"org.mybatis.spring.batch.MyBatisCursorItemReaderTest.getFoos()"  4067
"org.mybatis.spring.SqlSessionUtils.lambda$3(org.apache.ibatis.session.SqlSession)"  4068
"$r5 = r0.queryId"  4069
"r4 = $r14.getObject()"  4070
"$r35 = java.lang.Integer.valueOf(3)"  4071
"r0.failFast = z0"  4072
"$r94 = r0.configLocation"  4073
"r3 = (org.apache.ibatis.session.SqlSessionFactory) $r25"  4074
"$r26 = r3.getConfiguration()"  4075
"if $r11 != null goto label2"  4076
"org.mybatis.spring.SqlSessionFactoryBean.setCache(org.apache.ibatis.cache.Cache)"  4077
"$r18 = new org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization"  4078
"$r6.setSqlSessionFactory($r5)"  4079
"org.springframework.transaction.support.TransactionSynchronizationManager.bindResource(java.lang.Object,java.lang.Object)"  4080
"specialinvoke $r1.<init>(\"Parsed configuration file: \'\")"  4081
"$r7.put(\"sqlSessionFactoryBeanNameProperty\", \"sqlSessionFactory2\")"  4082
"$i2 = $r30.size()"  4083
"$r8 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  4084
"org.mybatis.spring.MyBatisExceptionTranslator.<init>(javax.sql.DataSource, boolean)"  4085
"org.mybatis.spring.batch.MyBatisPagingItemReader.doJumpToPage(int)"  4086
"$r10 = r0.saveState"  4087
"label38: $r28 = new org.apache.ibatis.builder.xml.XMLMapperBuilder"  4088
"org.springframework.context.support.GenericApplicationContext.refresh()"  4089
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r13, $r12)"  4090
"org.mybatis.spring.MyBatisSpringTest.testSpringAPIWithRollback()"  4091
"$r3 = r1.getMetadata()"  4092
"r26 = r1.iterator()"  4093
"label5: throw r31"  4094
"$r2 = r0.userTransaction"  4095
"$r9 = r0.jdbcTemplate"  4096
"$r4 = org.mybatis.spring.AbstractMyBatisSpringTest.dataSource"  4097
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest.getFoos()"  4098
"$r3 = r0.createMockConnection()"  4099
"$r46 = r0.typeHandlers"  4100
"r0.configLocation = r1"  4101
"$r20 = new java.lang.IllegalArgumentException"  4102
"label5: i6 = i6 + 1"  4103
"$r18 = $r17.append(\"\' to configuration.\")"  4104
"specialinvoke $r3.<init>(\"org/mybatis/spring/TestMapper.xml\")"  4105
"java.util.function.Supplier.get(java.lang.Class)"  4106
"label3: $r14 = r0.results"  4107
"return r7"  4108
"r1 = $r5.getObject()"  4109
"$i0 = $r10.getInt(\"MyBatisCursorItemReader.read.count\")"  4110
"$r21 = $r20.getPropertyValues()"  4111
"$r24.findTest()"  4112
"$r16.setEnvironment($r13)"  4113
"$r32 = r2.getPropertyValues()"  4114
"r4.close()"  4115
"org.mybatis.spring.type.DummyMapperFactoryBean.mapperInstanceCount = $r1"  4116
"$r31 = org.assertj.core.api.Assertions.assertThat($i2)"  4117
"$r23 = org.mockito.Mockito.when($r22)"  4118
"$r6 = r0.session"  4119
"$r8.setSqlSessionTemplateBeanName(r23)"  4120
"$r13 = $r11.getName()"  4121
"$r23 = $r21.getName()"  4122
"$r6.update($r7, $r8)"  4123
"$r9 = $r8.toString()"  4124
"org.mybatis.spring.SqlSessionTemplate.rollback(boolean)"  4125
"org.mybatis.spring.AbstractMyBatisSpringTest.assertNoCommitSession()"  4126
"throw $r12"  4127
"$r4 = r0.writer"  4128
"java.lang.reflect.Method.getName()"  4129
"$r8 = r0.getConfiguration()"  4130
"$r26.setDataSource($r25)"  4131
"r13 = (org.mybatis.spring.batch.domain.Employee) $r4"  4132
"r18 = (org.springframework.beans.factory.config.PropertyResourceConfigurer) $r14"  4133
"$r5.setConfigLocation($r4)"  4134
"if $z2 != 0 goto label4"  4135
"r31 = r4"  4136
"r0.statementId = r1"  4137
"label1: $r7 = r0.saveState"  4138
"org.mybatis.spring.MyBatisSpringTest.assertSingleConnection()"  4139
"specialinvoke $r5.<init>(\"Sorry, I ran out of connections\")"  4140
"$r2 = org.mybatis.spring.batch.MyBatisBatchItemWriter.LOGGER"  4141
"$z0 = $r28.isCacheEnabled()"  4142
"$r48 = $r47.getConfiguration()"  4143
"$r3 = $r1.sqlSessionFactory($r2)"  4144
"$i0 = $r11.getInt(\"MyBatisCursorItemReader.read.count.max\")"  4145
"$r5 = r0.sqlSessionFactory"  4146
"$r2[0] = \"org/mybatis/spring/config/base-package.xml\""  4147
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r16, $r15)"  4148
"$r3 = class \"Lorg/apache/ibatis/session/SqlSessionFactory;\""  4149
"r1.write(r2)"  4150
"$r13.getBean(\"mapperChildInterface\")"  4151
"$r55 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  4152
"org.mybatis.spring.transaction.SpringManagedTransaction.lambda$1()"  4153
"org.mybatis.spring.sample.config.SampleJobConfig.importUserJob()"  4154
"r1.registerBeanDefinition(\"sqlSessionTemplate\", $r4)"  4155
"label2: if r18 != null goto label1"  4156
"$z3 = $r14.equals(r7)"  4157
"$r7 = r0.cursor"  4158
"$r22 = (org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilderTest$Foo) $r21"  4159
"$r14 = org.mybatis.spring.MyBatisSpringTest.txManager"  4160
"$r14 = org.mockito.Mockito.verify($r13)"  4161
"org.mybatis.spring.SqlSessionUtils.closeSqlSession(r4, $r21)"  4162
"r0.connectionCount = 0"  4163
"$r7 = new org.mybatis.spring.asyncsynchronization.AsyncAfterCompletionHelper$AsyncAfterCompletionInvocationHandler"  4164
"java.lang.reflect.Proxy.isProxyClass(java.lang.Class)"  4165
"r0.assertConnectionClosed($r1)"  4166
"throw $r5"  4167
"$r2 = r1.getExecutorType()"  4168
"org.springframework.util.Assert.isTrue(boolean,java.lang.String)"  4169
"org.mybatis.spring.SqlSessionFactoryBean.setDatabaseIdProvider(org.apache.ibatis.mapping.DatabaseIdProvider)"  4170
"$r3 = r1.getName()"  4171
"org.mybatis.spring.transaction.SpringManagedTransactionFactory.newTransaction(java.sql.Connection)"  4172
"java.util.List.size()"  4173
"$r13.update(\"updateFoo\", $r14)"  4174
"$r6 = r0.connection"  4175
"$r5 = r0.parameterValues"  4176
"specialinvoke $r2.<init>(\"test-cache\")"  4177
"$r5 = $r4.getBean(\"mapperInterface\")"  4178
"$z1 = $r31.isUseGeneratedKeys()"  4179
"$r4 = org.assertj.core.api.Assertions.assertThat($i1)"  4180
"$r14 = $r12.getName()"  4181
"label3: $r46 = r0.session"  4182
"$r5.addGenericArgumentValue($r6)"  4183
"$i0 = $r10.getInt(\"MyBatisPagingItemReader.read.count\")"  4184
"specialinvoke $r92.<init>($r96, $r91)"  4185
"org.mybatis.spring.SqlSessionUtils.sessionHolder(org.apache.ibatis.session.ExecutorType, org.mybatis.spring.SqlSessionHolder)"  4186
"r1 := @parameter1"  4187
"$r39 = r0.sqlSession"  4188
"$r1 = r0.name"  4189
"org.mybatis.spring.transaction.SpringTransactionManagerTest.shouldNoOpWithTx()"  4190
"$r13.thenReturn($r14)"  4191
"$r1[0] = class \"Lorg/mybatis/spring/annotation/MapperScanTest$AppConfigWithPackageScan;\""  4192
"label2: r0.mapperFactoryBean = $r3"  4193
"$r2 = $r1.getClassLoader()"  4194
"$r10 = r0.results"  4195
"org.apache.ibatis.session.SqlSessionFactory.openSession()"  4196
"r15 = null"  4197
"org.mybatis.spring.transaction.SpringTransactionManagerTest.shouldIgnoreAutocommit()"  4198
"$r7 = r0.factoryBean"  4199
"$r29 = org.assertj.core.api.Assertions.assertThat($i3)"  4200
"$r7 = $r6.openSession($r5)"  4201
"$r9 = $r8.getCause()"  4202
"r1 = $r3.getObject()"  4203
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithNameGenerator.<init>()"  4204
"org.mybatis.spring.mapper.ClassPathMapperScanner.lambda$0(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory)"  4205
"if $z4 != 0 goto label24"  4206
"$r3.setDefaultExecutorType($r4)"  4207
"$r8.isTrue()"  4208
"$r3.setBeanClass(class \"Lorg/mybatis/spring/support/SqlSessionDaoSupportTest$MockSqlSessionDao;\")"  4209
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.lambda$2(org.mybatis.spring.batch.domain.Employee)"  4210
"$r5 = $r4.addScript(\"org/mybatis/spring/sample/db/database-test-data.sql\")"  4211
"r5 = (com.mockrunner.mock.jdbc.MockConnection) $r22"  4212
"$r16 = org.mybatis.spring.SqlSessionTemplate.access$0($r15)"  4213
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.build()"  4214
"$r15.debug($r16)"  4215
"$r2 = r0.userMapperWithFactory()"  4216
"org.mybatis.spring.batch.builder.MyBatisCursorItemReaderBuilder.queryId(java.lang.String)"  4217
"$r19 = $r17.append($r18)"  4218
"$r4 = r0.annotationClass"  4219
"org.mybatis.spring.support.SqlSessionDaoSupport.createSqlSessionTemplate(org.apache.ibatis.session.SqlSessionFactory)"  4220
"$i0 = $r22.size()"  4221
"org.mybatis.spring.PooledMockDataSource.<init>()"  4222
"$r2 = r0.configuration"  4223
"com.mockrunner.jdbc.PreparedStatementResultSetHandler.getExecutedStatements()"  4224
"$r17 = (org.assertj.core.api.AbstractIntegerAssert) $r16"  4225
"$r5 = $r4.append(\"\' and \'\")"  4226
"label1: $r4 = newarray (java.lang.Class)[1]"  4227
"$r12 = new org.springframework.jdbc.datasource.DataSourceTransactionManager"  4228
"$r9 = r1.getConfiguration()"  4229
"$r1 = r0.vfs"  4230
"label3: $r23 = org.mybatis.spring.MyBatisSpringTest.txManager"  4231
"$r16 = new java.util.concurrent.CopyOnWriteArrayList"  4232
"org.mybatis.spring.SqlSessionFactoryBeanTest.testMapperLocationsWithNullEntry()"  4233
"org.mybatis.spring.batch.MyBatisBatchItemWriter.setItemToParameterConverter(org.springframework.core.convert.converter.Converter)"  4234
"$r14 = org.assertj.core.api.Assertions.assertThat($r13)"  4235
"specialinvoke $r7.<init>(\"non-spring\", $r8, $r9)"  4236
"$r11 = new org.springframework.batch.item.ExecutionContext"  4237
"$r2 = new org.mybatis.spring.SqlSessionFactoryBeanTest$TestObjectWrapperFactory"  4238
"if r7 == null goto label1"  4239
"$r3.setSqlSessionTemplateBeanName($r9)"  4240
"$r8 = r0.sqlSessionFactoryBeanName"  4241
"$r18 = org.mockito.Mockito.verify($r17)"  4242
"$r39 = org.springframework.util.StringUtils.toStringArray($r17)"  4243
"r18 = r4.loadClass(r17)"  4244
"org.mybatis.spring.config.MapperScannerBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)"  4245
"$i0 = $r7.size()"  4246
"$r27.isTrue()"  4247
"$r2 = newarray (org.apache.ibatis.type.TypeHandler)[1]"  4248
"specialinvoke $r1.<init>(null)"  4249
"$r35.add(\"sqlSessionFactory\", $r36)"  4250
"$r2 = org.mybatis.spring.SqlSessionTemplateTest.sqlSessionTemplate"  4251
"$r65 = dynamicinvoke \"get\" <java.util.function.Supplier (java.lang.String)>(r105) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionFactoryBean: java.lang.String lambda$1(java.lang.String)>, class \"()Ljava/lang/String;\")"  4252
"$r19.setPropagationBehaviorName(\"PROPAGATION_REQUIRED\")"  4253
"$r26.isNull()"  4254
"org.mybatis.spring.mapper.MapperScannerConfigurer.processPropertyPlaceHolders()"  4255
"$r4 = new org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder"  4256
"$r12.isEqualTo(1)"  4257
"$r3.setConfiguration($r2)"  4258
"org.mybatis.spring.MyBatisSpringTest.testSpringAPIWithMyBatisClose()"  4259
"$r57 = (org.assertj.core.api.AbstractIntegerAssert) $r56"  4260
"$r1.refresh()"  4261
"$r6 = $r5.getSqlSession()"  4262
"r0.setName($r1)"  4263
"$r25 = (org.apache.ibatis.session.SqlSession) $r24"  4264
"$r3.setTypeAliasesPackage(\"org/mybatis/spring/type\")"  4265
"specialinvoke $r5.<init>(\"sqlSessionFactory\")"  4266
"$r18 = (org.mybatis.spring.TestMapper) $r17"  4267
"$r7 = r0.statementId"  4268
"$r8 = org.assertj.core.api.Assertions.assertThat($z1)"  4269
"$r5 = new org.springframework.beans.factory.config.RuntimeBeanReference"  4270
"$r15 = $r14.append(\" of \")"  4271
"r0.configuration = r1"  4272
"org.mybatis.spring.SqlSessionTemplateTest.testExceptionTranslationShouldThrowDataAccessException()"  4273
"r3 = $r11.get(\"OPERATION_BY\")"  4274
"$r3 = r0.sqlSessionProxy"  4275
"$r44 = (org.assertj.core.api.AbstractIntegerAssert) $r43"  4276
"$r17.isEqualTo(\"dev\")"  4277
"org.mybatis.spring.TestMapper.findTest()"  4278
"specialinvoke $r9.<init>()"  4279
"$r39.isNull()"  4280
"goto label14"  4281
"$z2 = org.springframework.util.ObjectUtils.isEmpty($r12)"  4282
"$r8 = $r6.reader($r7)"  4283
"org.mybatis.spring.batch.SpringBatchTest.checkPagingReadingWithNestedInResultMap()"  4284
"specialinvoke $r2.<init>()"  4285
"r32 = (org.springframework.beans.factory.support.GenericBeanDefinition) $r13"  4286
"$i0 = r1.getTimeToLiveInSeconds()"  4287
"if $r5 == null goto label2"  4288
"$r4.put(\"operationAt\", r1)"  4289
"label5: $r42 := @caughtexception"  4290
"$r25 = r1.getConfiguration()"  4291
"label3: $r32 = org.mybatis.spring.mapper.MapperFactoryBeanTest.sqlSessionFactory"  4292
"$r2 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.apache.ibatis.session.SqlSession)>($r1) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.apache.ibatis.session.SqlSession: void rollback()>, class \"()V\")"  4293
"$r25.commit(1)"  4294
"r1 = (org.mybatis.spring.submitted.autowire.FooMapper) $r5"  4295
"$r3 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.transaction.SpringManagedTransaction)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.transaction.SpringManagedTransaction: java.lang.String lambda$2()>, class \"()Ljava/lang/String;\")"  4296
"org.junit.jupiter.api.Assertions.assertEquals(r4, $r26)"  4297
"$r3 = $r2.getTargetDataSource()"  4298
"$r3 = org.mockito.BDDMockito.given($r2)"  4299
"r0.connection = $r2"  4300
"return \"Cannot use both: sqlSessionTemplate and sqlSessionFactory together. sqlSessionFactory is ignored.\""  4301
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.statementId(java.lang.String)"  4302
"$r4 = java.lang.Integer.valueOf(5)"  4303
"$r3 = r0.userMapperSlave"  4304
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.beforeCommit(boolean)"  4305
"specialinvoke $r5.<init>()"  4306
"org.mybatis.spring.mapper.MapperScannerConfigurerTest.testMarkerInterfaceAndAnnotationScan()"  4307
"org.mybatis.spring.SqlSessionUtils.<clinit>()"  4308
"$r1 = new org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory"  4309
"$r24.warn($r25)"  4310
"org.mybatis.spring.submitted.xa.UserServiceImpl.checkUserExists(int)"  4311
"$r16 = org.mybatis.spring.MyBatisSpringTest.sqlSessionFactory"  4312
"$r5.getBean(\"mapperChildInterface\")"  4313
"$r2[0] = $r3"  4314
"$r36 = $r35.hasMessage(\"Failed to initialize the reader\")"  4315
"$r2.put(\"now\", $r7)"  4316
"$z1 = $r12.isEmpty()"  4317
"$r8 = $r7.getVariables()"  4318
"$r2.close()"  4319
"$r73 = $r72.getInputStream()"  4320
"specialinvoke $r1.<init>(\"Manual commit is not allowed over a Spring managed SqlSession\")"  4321
"$r4 = r0.context"  4322
"$r6 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.MyBatisSpringTest)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.MyBatisSpringTest: void lambda$1()>, class \"()V\")"  4323
"r0.session = $r2"  4324
"$i1 = $r14.getNumberCommits()"  4325
"org.mybatis.spring.mapper.ClassPathMapperScanner.setMarkerInterface(java.lang.Class)"  4326
"$r32 = org.assertj.core.api.Assertions.assertThat($z1)"  4327
"org.mybatis.spring.PooledMockDataSource.setupConnection(java.sql.Connection)"  4328
"org.mybatis.spring.annotation.MapperScanTest.testInterfaceScan()"  4329
"$r3 = new org.mybatis.spring.batch.MyBatisCursorItemReaderTest$Foo"  4330
"$r3 = $r1.append($r2)"  4331
"org.mybatis.spring.batch.MyBatisBatchItemWriter.lambda$0(java.util.List)"  4332
"$r2 = r0.factoryBean"  4333
"$r15.update(\"org.mybatis.spring.TestMapper.insertFail\")"  4334
"$r7 = org.mybatis.spring.SqlSessionUtils.LOGGER"  4335
"$i0 = $r16.size()"  4336
"org.mybatis.spring.annotation.MapperScanTest.testScanWithExplicitSqlSessionTemplate()"  4337
"r0.session = $r11"  4338
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilder.sqlSessionFactory(org.apache.ibatis.session.SqlSessionFactory)"  4339
"specialinvoke $r3.<init>(r1, $r4)"  4340
"org.mybatis.spring.config.NamespaceHandler.registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)"  4341
"$r17 = $r15.as(\"should close the Connection\", $r16)"  4342
"label2: $r8 = \"close\""  4343
"$r7.add(\"basePackage\", \"${basePackageProperty}\")"  4344
"$i4 = $r47.getNumberCommits()"  4345
"$r18 = (org.assertj.core.api.AbstractIntegerAssert) $r17"  4346
"$r45 = r0.resourceLoader"  4347
"specialinvoke $r7.<init>(r0, null)"  4348
"label1: r4 = r3.getValue()"  4349
"org.mybatis.spring.MyBatisSpringTest.testRollbackWithTxSupports()"  4350
"org.mybatis.spring.mapper.MapperScannerConfigurerTest$BeanNameGenerator.<init>()"  4351
"$r13 = java.time.ZoneId.systemDefault()"  4352
"$r20 = org.apache.ibatis.session.ExecutorType.BATCH"  4353
"$r15.setEnvironment($r12)"  4354
"$r11.findTest()"  4355
"$r11.isNotEqualTo($i2)"  4356
"org.mybatis.spring.mapper.MapperScannerConfigurer.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)"  4357
"specialinvoke $r9.<init>($r11, $r10)"  4358
"$r1 = new java.util.LinkedList"  4359
"$i2 = $r48.size()"  4360
"$z1 = r1.hasMapper($r6)"  4361
"label24: $r15 = r0.databaseIdProvider"  4362
"org.mybatis.spring.batch.MyBatisBatchItemWriter$PassThroughConverter.<init>(org.mybatis.spring.batch.MyBatisBatchItemWriter$PassThroughConverter)"  4363
"$r22.getBean($r23)"  4364
"org.mybatis.spring.annotation.MapperScanTest.testMarkerInterfaceScan()"  4365
"r0.objectWrapperFactory = r1"  4366
"org.mybatis.spring.SqlSessionUtils.isSqlSessionTransactional(org.apache.ibatis.session.SqlSession, org.apache.ibatis.session.SqlSessionFactory)"  4367
"$r35.isEqualTo(\"foo2\")"  4368
"$r8 = r0.sqlSession"  4369
"$r11 = org.mybatis.spring.SqlSessionUtils.getSqlSession($r10)"  4370
"$z5 = org.springframework.util.ObjectUtils.isEmpty($r22)"  4371
"org.junit.jupiter.api.Assertions.fail($r8)"  4372
"specialinvoke $r1.<init>($r2)"  4373
"org.mybatis.spring.batch.builder.MyBatisPagingItemReaderBuilder.<init>()"  4374
"$r63.isEqualTo(2)"  4375
"$r25 = dynamicinvoke \"get\" <java.util.function.Supplier ()>() java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.mapper.ClassPathMapperScanner: java.lang.String lambda$5()>, class \"()Ljava/lang/String;\")"  4376
"$r29 = org.assertj.core.api.Assertions.assertThat($z0)"  4377
"$r19 = r0.dataSource"  4378
"$r9 = (org.apache.ibatis.session.SqlSession) $r8"  4379
"$z1 = $r33.isUseGeneratedKeys()"  4380
"$r3.setBeanClass(class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\")"  4381
"$r6 = r1.getConfiguration()"  4382
"org.assertj.core.api.Assertions.assertThat(java.lang.String)"  4383
"specialinvoke r0.setupSqlSessionFactory(\"sqlSessionFactory\")"  4384
"$r27 = r0.mapperLocations"  4385
"org.mybatis.spring.SqlSessionTemplate.getConnection()"  4386
"org.springframework.context.annotation.AnnotationConfigApplicationContext.register(java.lang.Class[])"  4387
"org.mybatis.spring.annotation.MapperScanTest$AppConfigWithMapperScans.<init>()"  4388
"r0.typeHandlers = r1"  4389
"if $r9 == null goto label07"  4390
"$r3.trace($r5)"  4391
"$r36 = $r34.as(\"should not call rollback on Connection\", $r35)"  4392
"org.springframework.jdbc.support.SQLExceptionTranslator.translate(java.lang.String,java.lang.String,java.sql.SQLException)"  4393
"org.junit.jupiter.api.Assertions.fail(\"should not be able to get an SqlSession using non-Spring tx manager when there is an active Spring tx\")"  4394
"org.springframework.core.type.filter.TypeFilter.match()"  4395
"org.mybatis.spring.MyBatisSpringTest.lambda$3(org.springframework.transaction.TransactionStatus)"  4396
"r17 := @parameter0"  4397
"r4.add($r9)"  4398
"$r8 = r2.getName()"  4399
"$r2 = new org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"  4400
"$r31 = r101.getSqlFragments()"  4401
"$r3 = new org.apache.ibatis.mapping.Environment"  4402
"$r12.rollback(r2)"  4403
"$r6 = new java.util.Properties"  4404
"$r1 = org.mybatis.spring.MyBatisSpringTest.exceptionTranslator"  4405
"$r9 = java.util.Collections.singletonMap(\"id\", $r8)"  4406
"$r5 = r0.applicationContext"  4407
"r0.assertConnectionClosed($r46)"  4408
"$r44 = $r43.getResultMapNames()"  4409
"i6 = lengthof r111"  4410
"org.mybatis.spring.PooledMockDataSource.getConnectionCount()"  4411
"$r5 = (org.mybatis.spring.support.SqlSessionDaoSupport) $r4"  4412
"r0.sqlSessionFactory = r1"  4413
"org.springframework.jdbc.datasource.DataSourceTransactionManager.commit(org.springframework.transaction.TransactionStatus)"  4414
"$r6 = $r5.getBeanDefinition(\"mapperScanner\")"  4415
"label1: $r5 = org.mybatis.spring.SqlSessionUtils.LOGGER"  4416
"$r8 = org.mybatis.spring.mapper.MapperFactoryBeanTest.dataSource"  4417
"$r44.isEqualTo(0)"  4418
"$r5 = r0.sqlSessionDaoSupport"  4419
"org.mybatis.spring.SqlSessionUtils.closeSqlSession($r7, $r6)"  4420
"specialinvoke $r20.<init>($r13)"  4421
"$r8.rollback(r11)"  4422
"org.mybatis.spring.annotation.MapperScanTest.setupSqlSessionFactory(java.lang.String)"  4423
"r0.connections = $r1"  4424
"specialinvoke $r1.<init>(\"register mapper for interface : \")"  4425
"$r1 = dynamicinvoke \"execute\" <org.junit.jupiter.api.function.Executable (org.mybatis.spring.support.SqlSessionDaoSupportTest)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()V\", handle: <org.mybatis.spring.support.SqlSessionDaoSupportTest: void startContext()>, class \"()V\")"  4426
"$r5 = java.lang.Integer.valueOf(1)"  4427
"$r35 = $r33.as(\"should not call rollback on SqlSession\", $r34)"  4428
"$r5 = r1.getBeanClassName()"  4429
"org.mybatis.spring.SqlSessionTemplate.access$1(org.mybatis.spring.SqlSessionTemplate)"  4430
"specialinvoke r0.assertBeanNotLoaded(\"package-info\")"  4431
"r0.exceptionTranslator = r3"  4432
"z0 = 1"  4433
"label19: r113 = r111[i7]"  4434
"org.mybatis.spring.annotation.MapperScanTest$BeanNameGenerator.<init>()"  4435
"$r7 = new org.mybatis.spring.transaction.SpringManagedTransactionFactory"  4436
"$r6 = org.mybatis.spring.AbstractMyBatisSpringTest.executorInterceptor"  4437
"$r6.put(\"url\", \"jdbc:localhost/test\")"  4438
"$r7 = r0.dataSource"  4439
"$r23.thenReturn($r24)"  4440
"specialinvoke $r17.<init>(r3, r1, r2)"  4441
"$r8 = $r7.read()"  4442
"r52 = (java.util.Map) $r41"  4443
"org.mybatis.spring.batch.MyBatisBatchItemWriter.LOGGER = $r0"  4444
"java.util.List.addAll(java.util.Collection)"  4445
"org.mybatis.spring.SqlSessionFactoryBean.setObjectFactory(org.apache.ibatis.reflection.factory.ObjectFactory)"  4446
"$r4 = $r3.getPropertyValues()"  4447
"$r19.commit()"  4448
"specialinvoke r0.assertConfig(r1, $r3, class \"Lorg/mybatis/spring/transaction/SpringManagedTransactionFactory;\")"  4449
"$r7 = org.mybatis.spring.AbstractMyBatisSpringTest.dataSource"  4450
"$r4 = java.lang.Integer.valueOf(3)"  4451
"$r7 = r4.toString()"  4452
"java.lang.String.split(java.lang.String)"  4453
"$r37 = newarray (java.lang.Object)[0]"  4454
"$r19 = org.mybatis.spring.MyBatisSpringTest.txManager"  4455
"$r23 = $r22.getName()"  4456
"$r24 = $r22.as(\"should call commit on Connection\", $r23)"  4457
"label1: $r16 = org.mybatis.spring.MyBatisSpringTest.txManager"  4458
"specialinvoke r0.find($r11)"  4459
"r1 = java.util.Arrays.asList($r4)"  4460
"r1 = $r5.getTypeHandlerRegistry()"  4461
"org.mybatis.spring.mapper.MapperFactoryBeanTest.testWithNonSpringTransactionFactory()"  4462
"$r4 = org.mybatis.spring.mapper.MapperFactoryBeanTest.txManager"  4463
"org.mybatis.spring.mapper.ClassPathMapperScanner.setMapperFactoryBean(org.mybatis.spring.mapper.MapperFactoryBean)"  4464
"$z1 = org.springframework.transaction.support.TransactionSynchronizationManager.isActualTransactionActive()"  4465
"$r2.putAll($r12)"  4466
"$r33 = r1.getConfiguration()"  4467
"org.springframework.dao.UncategorizedDataAccessException.<init>(java.lang.String,java.lang.Throwable)"  4468
"$r9 = r0.maxItemCount"  4469
"$i0 = org.mybatis.spring.type.DummyMapperFactoryBean.getMapperCount()"  4470
"$r10 = new com.mockrunner.mock.jdbc.MockDataSource"  4471
"$r2 = r1.getConfiguration()"  4472
"label4: goto label6"  4473
"r2 = $r11.translateExceptionIfPossible($r7)"  4474
"label3: return r29"  4475
"$r1 = r0.cursor"  4476
"org.mybatis.logging.Logger.debug(java.util.function.Supplier)"  4477
"$r15.update(\"updateFoo\", $r16)"  4478
"org.mybatis.spring.mapper.ClassPathMapperScanner.isCandidateComponent(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition)"  4479
"$r1 = r0.dataSource"  4480
"$r26.add(\"sqlSessionTemplate\", $r27)"  4481
"$r6.close()"  4482
"$r4 = $r3.append(\"\'.\")"  4483
"r0.addExcludeFilter($r3)"  4484
"$r40 = org.mockito.Mockito.verify($r39)"  4485
"$r48 = org.mybatis.spring.SqlSessionFactoryBean.LOGGER"  4486
"$r5 = (org.springframework.batch.core.step.builder.StepBuilder) $r4"  4487
"$r11 = $r10.selectOne(\"checkSalarySum\")"  4488
"$z0 = $r9.booleanValue()"  4489
"$r3.debug($r4)"  4490
"org.springframework.transaction.support.TransactionSynchronizationManager.getResource(java.lang.Object)"  4491
"$r33 = $r32.getConfiguration()"  4492
"java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)"  4493
"$r18 = org.mybatis.spring.MyBatisSpringTest.txManager"  4494
"org.mybatis.spring.sample.domain.Person.setLastName(java.lang.String)"  4495
"$r3.setSqlSessionFactory($r5)"  4496
"$r10 = $r5.getObject()"  4497
"org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization.resume()"  4498
"$r10.commit(1)"  4499
"r101 = r0.configuration"  4500
"r0.pageSize = $r1"  4501
"org.mybatis.spring.sample.AbstractSampleJobTest$LocalContext.namedParameterJdbcTemplate(javax.sql.DataSource)"  4502
"org.mybatis.spring.AbstractMyBatisSpringTest.assertNoCommit()"  4503
"$r2[0] = \"org/mybatis/spring/config/marker-interface.xml\""  4504
"$r8 = new org.apache.ibatis.session.Configuration"  4505
"$r11.isEqualTo(0)"  4506
"label1: $i0 = r13.getSalary()"  4507
"$r5.setVariables($r6)"  4508
"$r7 = \"afterCompletion\""  4509
"$r17 = r0.mockSqlSessionTemplate"  4510
"org.mybatis.spring.MyBatisSpringTest.testWithInterleavedTx()"  4511
"$r5.setBeanClass(class \"Lorg/mybatis/spring/SqlSessionFactoryBean;\")"  4512
"$r5.debug($r6)"  4513
"$r37 = org.apache.ibatis.session.ExecutorType.REUSE"  4514
"$r17.setSynchronizedWithTransaction(1)"  4515
"$r14 = $r13.getMapper(class \"Lorg/mybatis/spring/TestMapper;\")"  4516
"$r10 = r0.cursor"  4517
"$r22 = $r21.getTransactionFactory()"  4518
"$r4 = r1.getConfiguration()"  4519
"$r10 = new java.util.HashMap"  4520
"org.mybatis.spring.batch.builder.MyBatisBatchItemWriterBuilderTest$Foo.getName()"  4521
"$r5 = $r3.getName()"  4522
"$r30.isEqualTo(0)"  4523
"$r2 = r0.configLocation"  4524
"org.mybatis.spring.batch.MyBatisBatchItemWriterTest.<init>()"  4525
"$r4 = $r2.as(\"should only call DataSource.getConnection() once\", $r3)"  4526
"$r1 = org.springframework.util.ClassUtils.getShortName(class \"Lorg/mybatis/spring/batch/MyBatisCursorItemReader;\")"  4527
"$r7.setItemToParameterConverter(null)"  4528
"$r12 = java.time.Instant.ofEpochMilli(0L)"  4529
"specialinvoke $r18.<init>($r17, r0)"  4530
"$i7 = $r65.getRollbackCount()"  4531
"$r6.add(\"dataSource\", $r7)"  4532
"$r3 = $r2.append(r0)"  4533
"specialinvoke r0.<init>(null, r1)"  4534
"org.springframework.context.support.ClassPathXmlApplicationContext.refresh()"  4535
"org.springframework.util.Assert.notNull($r1, \"A SqlSessionFactory is required.\")"  4536
"$r19 = $r18.toString()"  4537
"$r2 = dynamicinvoke \"get\" <java.util.function.Supplier (org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization)>(r0) java.lang.invoke.LambdaMetafactory.metafactory(class \"()Ljava/lang/Object;\", handle: <org.mybatis.spring.SqlSessionUtils$SqlSessionSynchronization: java.lang.String lambda$1()>, class \"()Ljava/lang/String;\")"  4538
"$r9 = $r7.itemToParameterConverter($r8)"  4539
